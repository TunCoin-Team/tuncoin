{
	"id": "6505bbd8311903da510b9d0c0d45da3d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./Context.sol\";\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}"
			},
			"contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return payable(msg.sender);\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Context.sol\":570:1093  contract Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Context.sol\":744:762  constructor () { } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Context.sol\":570:1093  contract Context {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Context.sol\":570:1093  contract Context {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b591f5f46cf36fbcf5b3a4a2b37265ff3a98fb461111b2f6131450d8150f5f2c64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b591f5f46cf36fbcf5b3a4a2b37265ff3a98fb461111b2f6131450d8150f5f2c64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP2 CREATE2 DELEGATECALL PUSH13 0xF36FBCF5B3A4A2B37265FF3A98 0xFB CHAINID GT GT 0xB2 0xF6 SGT EQ POP 0xD8 ISZERO 0xF 0x5F 0x2C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "570:523:0:-:0;;;744:18;;;;;;;;;;570:523;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b591f5f46cf36fbcf5b3a4a2b37265ff3a98fb461111b2f6131450d8150f5f2c64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP2 CREATE2 DELEGATECALL PUSH13 0xF36FBCF5B3A4A2B37265FF3A98 0xFB CHAINID GT GT 0xB2 0xF6 SGT EQ POP 0xD8 ISZERO 0xF 0x5F 0x2C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "570:523:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b591f5f46cf36fbcf5b3a4a2b37265ff3a98fb461111b2f6131450d8150f5f2c64736f6c63430008040033",
									".code": [
										{
											"begin": 570,
											"end": 1093,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 1093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 1093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 1093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1093,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xfca6074092b8a1648fef1241ee1f79491b4202255352fa0ea8df8634b64fb78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6909cbe6d64495aeee0ecbbe95dc0e34d96d2845f31764c27aa306e4ef151dc7\",\"dweb:/ipfs/QmRjtC1AaLwozb8vTSBFx68v99ALk5r1zZ9yYyZVKfj3rv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":592:2346  contract Ownable is Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":837:977  constructor () {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":859:876  address msgSender */\n  0x00\n    /* \"contracts/Ownable.sol\":879:891  _msgSender() */\n  tag_6\n    /* \"contracts/Ownable.sol\":879:889  _msgSender */\n  shl(0x20, tag_7)\n    /* \"contracts/Ownable.sol\":879:891  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/Ownable.sol\":859:891  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/Ownable.sol\":907:916  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":898:904  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":898:916  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":961:970  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":928:971  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":957:958  0 */\n  0x00\n    /* \"contracts/Ownable.sol\":928:971  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":837:977  constructor () {\r... */\n  pop\n    /* \"contracts/Ownable.sol\":592:2346  contract Ownable is Context {\r... */\n  jump(tag_8)\n    /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\ntag_7:\n    /* \"contracts/Context.sol\":813:828  address payable */\n  0x00\n    /* \"contracts/Context.sol\":852:862  msg.sender */\n  caller\n    /* \"contracts/Context.sol\":837:863  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/Ownable.sol\":592:2346  contract Ownable is Context {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":592:2346  contract Ownable is Context {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":1652:1782  function renounceOwnership() public onlyOwner {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Ownable.sol\":1050:1123  function owner() public view returns (address) {\r... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1927:2030  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Ownable.sol\":1652:1782  function renounceOwnership() public onlyOwner {\r... */\n    tag_7:\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      tag_17\n        /* \"contracts/Ownable.sol\":1254:1264  _msgSender */\n      tag_18\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      jump\t// in\n    tag_17:\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1250  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1236:1303  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/Ownable.sol\":1747:1748  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1710:1750  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1731:1737  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1710:1750  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1774:1775  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1757:1763  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":1757:1776  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1652:1782  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1050:1123  function owner() public view returns (address) {\r... */\n    tag_9:\n        /* \"contracts/Ownable.sol\":1088:1095  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1111:1117  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1104:1117  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":1050:1123  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1927:2030  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_15:\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      tag_25\n        /* \"contracts/Ownable.sol\":1254:1264  _msgSender */\n      tag_18\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1250  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1236:1303  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/Ownable.sol\":1996:2024  _transferOwnership(newOwner) */\n      tag_29\n        /* \"contracts/Ownable.sol\":2015:2023  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1996:2014  _transferOwnership */\n      tag_30\n        /* \"contracts/Ownable.sol\":1996:2024  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_29:\n        /* \"contracts/Ownable.sol\":1927:2030  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\n    tag_18:\n        /* \"contracts/Context.sol\":813:828  address payable */\n      0x00\n        /* \"contracts/Context.sol\":852:862  msg.sender */\n      caller\n        /* \"contracts/Context.sol\":837:863  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2128:2343  function _transferOwnership(address newOwner) internal {\r... */\n    tag_30:\n        /* \"contracts/Ownable.sol\":2218:2219  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":2198:2220  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2198:2206  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2198:2220  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":2190:2263  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"contracts/Ownable.sol\":2304:2312  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2275:2313  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2296:2302  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2275:2313  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":2329:2337  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2320:2326  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":2320:2337  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":2128:2343  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_37:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_39\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:414   */\n    tag_14:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:230   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":276:277   */\n      0x00\n        /* \"#utility.yul\":273:274   */\n      dup1\n        /* \"#utility.yul\":266:278   */\n      revert\n        /* \"#utility.yul\":228:230   */\n    tag_42:\n        /* \"#utility.yul\":319:320   */\n      0x00\n        /* \"#utility.yul\":344:397   */\n      tag_43\n        /* \"#utility.yul\":389:396   */\n      dup5\n        /* \"#utility.yul\":380:386   */\n      dup3\n        /* \"#utility.yul\":369:378   */\n      dup6\n        /* \"#utility.yul\":365:387   */\n      add\n        /* \"#utility.yul\":344:397   */\n      tag_37\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":334:397   */\n      swap2\n      pop\n        /* \"#utility.yul\":290:407   */\n      pop\n        /* \"#utility.yul\":218:414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":420:538   */\n    tag_44:\n        /* \"#utility.yul\":507:531   */\n      tag_46\n        /* \"#utility.yul\":525:530   */\n      dup2\n        /* \"#utility.yul\":507:531   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":502:505   */\n      dup3\n        /* \"#utility.yul\":495:532   */\n      mstore\n        /* \"#utility.yul\":485:538   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":544:910   */\n    tag_48:\n        /* \"#utility.yul\":686:689   */\n      0x00\n        /* \"#utility.yul\":707:774   */\n      tag_50\n        /* \"#utility.yul\":771:773   */\n      0x26\n        /* \"#utility.yul\":766:769   */\n      dup4\n        /* \"#utility.yul\":707:774   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":700:774   */\n      swap2\n      pop\n        /* \"#utility.yul\":783:876   */\n      tag_52\n        /* \"#utility.yul\":872:875   */\n      dup3\n        /* \"#utility.yul\":783:876   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":901:903   */\n      0x40\n        /* \"#utility.yul\":896:899   */\n      dup3\n        /* \"#utility.yul\":892:904   */\n      add\n        /* \"#utility.yul\":885:904   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":916:1282   */\n    tag_54:\n        /* \"#utility.yul\":1058:1061   */\n      0x00\n        /* \"#utility.yul\":1079:1146   */\n      tag_56\n        /* \"#utility.yul\":1143:1145   */\n      0x20\n        /* \"#utility.yul\":1138:1141   */\n      dup4\n        /* \"#utility.yul\":1079:1146   */\n      tag_51\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1072:1146   */\n      swap2\n      pop\n        /* \"#utility.yul\":1155:1248   */\n      tag_57\n        /* \"#utility.yul\":1244:1247   */\n      dup3\n        /* \"#utility.yul\":1155:1248   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1273:1275   */\n      0x20\n        /* \"#utility.yul\":1268:1271   */\n      dup3\n        /* \"#utility.yul\":1264:1276   */\n      add\n        /* \"#utility.yul\":1257:1276   */\n      swap1\n      pop\n        /* \"#utility.yul\":1062:1282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1288:1510   */\n    tag_11:\n        /* \"#utility.yul\":1381:1385   */\n      0x00\n        /* \"#utility.yul\":1419:1421   */\n      0x20\n        /* \"#utility.yul\":1408:1417   */\n      dup3\n        /* \"#utility.yul\":1404:1422   */\n      add\n        /* \"#utility.yul\":1396:1422   */\n      swap1\n      pop\n        /* \"#utility.yul\":1432:1503   */\n      tag_60\n        /* \"#utility.yul\":1500:1501   */\n      0x00\n        /* \"#utility.yul\":1489:1498   */\n      dup4\n        /* \"#utility.yul\":1485:1502   */\n      add\n        /* \"#utility.yul\":1476:1482   */\n      dup5\n        /* \"#utility.yul\":1432:1503   */\n      tag_44\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1386:1510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1516:1935   */\n    tag_35:\n        /* \"#utility.yul\":1682:1686   */\n      0x00\n        /* \"#utility.yul\":1720:1722   */\n      0x20\n        /* \"#utility.yul\":1709:1718   */\n      dup3\n        /* \"#utility.yul\":1705:1723   */\n      add\n        /* \"#utility.yul\":1697:1723   */\n      swap1\n      pop\n        /* \"#utility.yul\":1769:1778   */\n      dup2\n        /* \"#utility.yul\":1763:1767   */\n      dup2\n        /* \"#utility.yul\":1759:1779   */\n      sub\n        /* \"#utility.yul\":1755:1756   */\n      0x00\n        /* \"#utility.yul\":1744:1753   */\n      dup4\n        /* \"#utility.yul\":1740:1757   */\n      add\n        /* \"#utility.yul\":1733:1780   */\n      mstore\n        /* \"#utility.yul\":1797:1928   */\n      tag_62\n        /* \"#utility.yul\":1923:1927   */\n      dup2\n        /* \"#utility.yul\":1797:1928   */\n      tag_48\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1789:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1687:1935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1941:2360   */\n    tag_21:\n        /* \"#utility.yul\":2107:2111   */\n      0x00\n        /* \"#utility.yul\":2145:2147   */\n      0x20\n        /* \"#utility.yul\":2134:2143   */\n      dup3\n        /* \"#utility.yul\":2130:2148   */\n      add\n        /* \"#utility.yul\":2122:2148   */\n      swap1\n      pop\n        /* \"#utility.yul\":2194:2203   */\n      dup2\n        /* \"#utility.yul\":2188:2192   */\n      dup2\n        /* \"#utility.yul\":2184:2204   */\n      sub\n        /* \"#utility.yul\":2180:2181   */\n      0x00\n        /* \"#utility.yul\":2169:2178   */\n      dup4\n        /* \"#utility.yul\":2165:2182   */\n      add\n        /* \"#utility.yul\":2158:2205   */\n      mstore\n        /* \"#utility.yul\":2222:2353   */\n      tag_64\n        /* \"#utility.yul\":2348:2352   */\n      dup2\n        /* \"#utility.yul\":2222:2353   */\n      tag_54\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2214:2353   */\n      swap1\n      pop\n        /* \"#utility.yul\":2112:2360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2535   */\n    tag_51:\n        /* \"#utility.yul\":2450:2461   */\n      0x00\n        /* \"#utility.yul\":2484:2490   */\n      dup3\n        /* \"#utility.yul\":2479:2482   */\n      dup3\n        /* \"#utility.yul\":2472:2491   */\n      mstore\n        /* \"#utility.yul\":2524:2528   */\n      0x20\n        /* \"#utility.yul\":2519:2522   */\n      dup3\n        /* \"#utility.yul\":2515:2529   */\n      add\n        /* \"#utility.yul\":2500:2529   */\n      swap1\n      pop\n        /* \"#utility.yul\":2462:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2637   */\n    tag_47:\n        /* \"#utility.yul\":2578:2585   */\n      0x00\n        /* \"#utility.yul\":2607:2631   */\n      tag_67\n        /* \"#utility.yul\":2625:2630   */\n      dup3\n        /* \"#utility.yul\":2607:2631   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2596:2631   */\n      swap1\n      pop\n        /* \"#utility.yul\":2586:2637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2643:2769   */\n    tag_68:\n        /* \"#utility.yul\":2680:2687   */\n      0x00\n        /* \"#utility.yul\":2720:2762   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2713:2718   */\n      dup3\n        /* \"#utility.yul\":2709:2763   */\n      and\n        /* \"#utility.yul\":2698:2763   */\n      swap1\n      pop\n        /* \"#utility.yul\":2688:2769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2775:3000   */\n    tag_53:\n        /* \"#utility.yul\":2915:2949   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2911:2912   */\n      0x00\n        /* \"#utility.yul\":2903:2909   */\n      dup3\n        /* \"#utility.yul\":2899:2913   */\n      add\n        /* \"#utility.yul\":2892:2950   */\n      mstore\n        /* \"#utility.yul\":2984:2992   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2979:2981   */\n      0x20\n        /* \"#utility.yul\":2971:2977   */\n      dup3\n        /* \"#utility.yul\":2967:2982   */\n      add\n        /* \"#utility.yul\":2960:2993   */\n      mstore\n        /* \"#utility.yul\":2881:3000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3006:3188   */\n    tag_58:\n        /* \"#utility.yul\":3146:3180   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3142:3143   */\n      0x00\n        /* \"#utility.yul\":3134:3140   */\n      dup3\n        /* \"#utility.yul\":3130:3144   */\n      add\n        /* \"#utility.yul\":3123:3181   */\n      mstore\n        /* \"#utility.yul\":3112:3188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3194:3316   */\n    tag_40:\n        /* \"#utility.yul\":3267:3291   */\n      tag_73\n        /* \"#utility.yul\":3285:3290   */\n      dup2\n        /* \"#utility.yul\":3267:3291   */\n      tag_47\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":3260:3265   */\n      dup2\n        /* \"#utility.yul\":3257:3292   */\n      eq\n        /* \"#utility.yul\":3247:3249   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":3306:3307   */\n      0x00\n        /* \"#utility.yul\":3303:3304   */\n      dup1\n        /* \"#utility.yul\":3296:3308   */\n      revert\n        /* \"#utility.yul\":3247:3249   */\n    tag_74:\n        /* \"#utility.yul\":3237:3316   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220205e03386b7de4163f1146fde10940b662477225af09e0bab3de12cf466b778b64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b6105d2806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b604051610065919061046f565b60405180910390f35b610088600480360381019061008391906103f1565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104aa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104aa565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103169061048a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506103eb81610585565b92915050565b60006020828403121561040357600080fd5b6000610411848285016103dc565b91505092915050565b610423816104db565b82525050565b60006104366026836104ca565b91506104418261050d565b604082019050919050565b60006104596020836104ca565b91506104648261055c565b602082019050919050565b6000602082019050610484600083018461041a565b92915050565b600060208201905081810360008301526104a381610429565b9050919050565b600060208201905081810360008301526104c38161044c565b9050919050565b600082825260208201905092915050565b60006104e6826104ed565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61058e816104db565b811461059957600080fd5b5056fea2646970667358221220205e03386b7de4163f1146fde10940b662477225af09e0bab3de12cf466b778b64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x21 PUSH2 0xC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5D2 DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316 SWAP1 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EB DUP2 PUSH2 0x585 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP3 DUP6 ADD PUSH2 0x3DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x423 DUP2 PUSH2 0x4DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 PUSH1 0x26 DUP4 PUSH2 0x4CA JUMP JUMPDEST SWAP2 POP PUSH2 0x441 DUP3 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x459 PUSH1 0x20 DUP4 PUSH2 0x4CA JUMP JUMPDEST SWAP2 POP PUSH2 0x464 DUP3 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x484 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A3 DUP2 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C3 DUP2 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E6 DUP3 PUSH2 0x4ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x58E DUP2 PUSH2 0x4DB JUMP JUMPDEST DUP2 EQ PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0x5E SUB CODESIZE PUSH12 0x7DE4163F1146FDE10940B662 SELFBALANCE PUSH19 0x25AF09E0BAB3DE12CF466B778B64736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "592:1754:1:-:0;;;837:140;;;;;;;;;;859:17;879:12;:10;;;:12;;:::i;:::-;859:32;;907:9;898:6;;:18;;;;;;;;;;;;;;;;;;961:9;928:43;;957:1;928:43;;;;;;;;;;;;837:140;592:1754;;768:101:0;813:15;852:10;837:26;;768:101;:::o;592:1754:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3319:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:196:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "273:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "276:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "290:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "305:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "309:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "334:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "369:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "389:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "344:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "344:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "334:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:262:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "485:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "502:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "525:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "507:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "495:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "480:3:2",
														"type": ""
													}
												],
												"src": "420:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "690:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "700:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "766:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:2:2",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "700:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "872:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "783:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "783:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "783:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "885:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "896:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "901:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "892:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "885:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "678:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "686:3:2",
														"type": ""
													}
												],
												"src": "544:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1062:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1072:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1138:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1143:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1079:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1072:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1244:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1155:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1155:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1257:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1268:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1273:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1264:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1257:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1050:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1058:3:2",
														"type": ""
													}
												],
												"src": "916:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1386:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1396:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1408:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1419:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1404:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1404:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1396:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1476:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1489:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1500:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1485:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1485:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1432:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1432:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1358:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1370:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1381:4:2",
														"type": ""
													}
												],
												"src": "1288:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1697:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1709:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1705:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1697:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1744:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1755:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1740:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1740:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1763:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1769:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1759:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1759:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1733:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1733:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1733:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1789:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1923:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1797:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1789:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1667:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1682:4:2",
														"type": ""
													}
												],
												"src": "1516:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2112:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2122:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2134:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2145:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2130:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2122:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2169:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2180:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2165:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2165:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2188:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2194:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2158:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2214:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2348:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2222:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2222:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2214:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2092:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2107:4:2",
														"type": ""
													}
												],
												"src": "1941:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2462:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2479:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2484:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2472:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2500:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2524:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2515:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2500:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2434:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2439:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2450:11:2",
														"type": ""
													}
												],
												"src": "2366:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2625:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2607:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2596:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2568:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2578:7:2",
														"type": ""
													}
												],
												"src": "2541:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2688:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2698:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2713:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2720:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2709:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2698:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2670:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2680:7:2",
														"type": ""
													}
												],
												"src": "2643:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2881:119:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2903:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2911:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2899:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2899:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2915:34:2",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2892:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2971:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2979:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2967:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2967:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2984:8:2",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2960:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2960:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2960:33:2"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2873:6:2",
														"type": ""
													}
												],
												"src": "2775:225:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3112:76:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3134:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3142:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3130:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3130:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3146:34:2",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3123:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3123:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3123:58:2"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3104:6:2",
														"type": ""
													}
												],
												"src": "3006:182:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3237:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3294:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3303:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3306:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3296:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3296:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3296:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3260:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3285:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3267:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3267:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3257:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3257:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3250:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3250:43:2"
															},
															"nodeType": "YulIf",
															"src": "3247:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3230:5:2",
														"type": ""
													}
												],
												"src": "3194:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b604051610065919061046f565b60405180910390f35b610088600480360381019061008391906103f1565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104aa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104aa565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103169061048a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506103eb81610585565b92915050565b60006020828403121561040357600080fd5b6000610411848285016103dc565b91505092915050565b610423816104db565b82525050565b60006104366026836104ca565b91506104418261050d565b604082019050919050565b60006104596020836104ca565b91506104648261055c565b602082019050919050565b6000602082019050610484600083018461041a565b92915050565b600060208201905081810360008301526104a381610429565b9050919050565b600060208201905081810360008301526104c38161044c565b9050919050565b600082825260208201905092915050565b60006104e6826104ed565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61058e816104db565b811461059957600080fd5b5056fea2646970667358221220205e03386b7de4163f1146fde10940b662477225af09e0bab3de12cf466b778b64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316 SWAP1 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EB DUP2 PUSH2 0x585 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP3 DUP6 ADD PUSH2 0x3DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x423 DUP2 PUSH2 0x4DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 PUSH1 0x26 DUP4 PUSH2 0x4CA JUMP JUMPDEST SWAP2 POP PUSH2 0x441 DUP3 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x459 PUSH1 0x20 DUP4 PUSH2 0x4CA JUMP JUMPDEST SWAP2 POP PUSH2 0x464 DUP3 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x484 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A3 DUP2 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C3 DUP2 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E6 DUP3 PUSH2 0x4ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x58E DUP2 PUSH2 0x4DB JUMP JUMPDEST DUP2 EQ PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0x5E SUB CODESIZE PUSH12 0x7DE4163F1146FDE10940B662 SELFBALANCE PUSH19 0x25AF09E0BAB3DE12CF466B778B64736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "592:1754:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1652:130;;;:::i;:::-;;1050:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1927:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1652:130;1254:12;:10;:12::i;:::-;1244:22;;:6;;;;;;;;;;:22;;;1236:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1747:1:::1;1710:40;;1731:6;::::0;::::1;;;;;;;;1710:40;;;;;;;;;;;;1774:1;1757:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1652:130::o:0;1050:73::-;1088:7;1111:6;;;;;;;;;;;1104:13;;1050:73;:::o;1927:103::-;1254:12;:10;:12::i;:::-;1244:22;;:6;;;;;;;;;;:22;;;1236:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1996:28:::1;2015:8;1996:18;:28::i;:::-;1927:103:::0;:::o;768:101:0:-;813:15;852:10;837:26;;768:101;:::o;2128:215:1:-;2218:1;2198:22;;:8;:22;;;;2190:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2304:8;2275:38;;2296:6;;;;;;;;;;2275:38;;;;;;;;;;;;2329:8;2320:6;;:17;;;;;;;;;;;;;;;;;;2128:215;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;211:6;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:366::-;686:3;707:67;771:2;766:3;707:67;:::i;:::-;700:74;;783:93;872:3;783:93;:::i;:::-;901:2;896:3;892:12;885:19;;690:220;;;:::o;916:366::-;1058:3;1079:67;1143:2;1138:3;1079:67;:::i;:::-;1072:74;;1155:93;1244:3;1155:93;:::i;:::-;1273:2;1268:3;1264:12;1257:19;;1062:220;;;:::o;1288:222::-;1381:4;1419:2;1408:9;1404:18;1396:26;;1432:71;1500:1;1489:9;1485:17;1476:6;1432:71;:::i;:::-;1386:124;;;;:::o;1516:419::-;1682:4;1720:2;1709:9;1705:18;1697:26;;1769:9;1763:4;1759:20;1755:1;1744:9;1740:17;1733:47;1797:131;1923:4;1797:131;:::i;:::-;1789:139;;1687:248;;;:::o;1941:419::-;2107:4;2145:2;2134:9;2130:18;2122:26;;2194:9;2188:4;2184:20;2180:1;2169:9;2165:17;2158:47;2222:131;2348:4;2222:131;:::i;:::-;2214:139;;2112:248;;;:::o;2366:169::-;2450:11;2484:6;2479:3;2472:19;2524:4;2519:3;2515:14;2500:29;;2462:73;;;;:::o;2541:96::-;2578:7;2607:24;2625:5;2607:24;:::i;:::-;2596:35;;2586:51;;;:::o;2643:126::-;2680:7;2720:42;2713:5;2709:54;2698:65;;2688:81;;;:::o;2775:225::-;2915:34;2911:1;2903:6;2899:14;2892:58;2984:8;2979:2;2971:6;2967:15;2960:33;2881:119;:::o;3006:182::-;3146:34;3142:1;3134:6;3130:14;3123:58;3112:76;:::o;3194:122::-;3267:24;3285:5;3267:24;:::i;:::-;3260:5;3257:35;3247:2;;3306:1;3303;3296:12;3247:2;3237:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "298000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "1222",
								"renounceOwnership()": "24269",
								"transferOwnership(address)": "24691"
							},
							"internal": {
								"_transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 837,
									"end": 977,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 837,
									"end": 977,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 837,
									"end": 977,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 859,
									"end": 876,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 879,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 879,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 879,
									"end": 889,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 879,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 879,
									"end": 891,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 859,
									"end": 891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 907,
									"end": 916,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 898,
									"end": 904,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 898,
									"end": 916,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 898,
									"end": 916,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 898,
									"end": 916,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 961,
									"end": 970,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 957,
									"end": 958,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 768,
									"end": 869,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 768,
									"end": 869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 813,
									"end": 828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 862,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 837,
									"end": 863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 837,
									"end": 863,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 768,
									"end": 869,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 768,
									"end": 869,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220205e03386b7de4163f1146fde10940b662477225af09e0bab3de12cf466b778b64736f6c63430008040033",
									".code": [
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2015,
											"end": 2023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 768,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 768,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 862,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 837,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 869,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 230,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 266,
											"end": 278,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 230,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 369,
											"end": 378,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 365,
											"end": 387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 334,
											"end": 397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 414,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 525,
											"end": 530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 502,
											"end": 505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 495,
											"end": 532,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 538,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 544,
											"end": 910,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 544,
											"end": 910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 686,
											"end": 689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 766,
											"end": 769,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 707,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 700,
											"end": 774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 700,
											"end": 774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 783,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 872,
											"end": 875,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 783,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 783,
											"end": 876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 876,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 783,
											"end": 876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 901,
											"end": 903,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 899,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 892,
											"end": 904,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 885,
											"end": 904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 885,
											"end": 904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 910,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 916,
											"end": 1282,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 916,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1143,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1141,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1079,
											"end": 1146,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1146,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1079,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1244,
											"end": 1247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1155,
											"end": 1248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1155,
											"end": 1248,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1155,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1275,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1271,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1282,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1288,
											"end": 1510,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1288,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1396,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1396,
											"end": 1422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1498,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1432,
											"end": 1503,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1432,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1432,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1510,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1510,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1516,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1516,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1779,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1757,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1780,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1923,
											"end": 1927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1797,
											"end": 1928,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1797,
											"end": 1928,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1797,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1935,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1941,
											"end": 2360,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1941,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2134,
											"end": 2143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2204,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2178,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2205,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2360,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2366,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2366,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2491,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2519,
											"end": 2522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2462,
											"end": 2535,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2462,
											"end": 2535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2462,
											"end": 2535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2462,
											"end": 2535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2462,
											"end": 2535,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2541,
											"end": 2637,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2541,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2578,
											"end": 2585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2625,
											"end": 2630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2607,
											"end": 2631,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2607,
											"end": 2631,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2607,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2637,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2637,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2643,
											"end": 2769,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2643,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2762,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 2718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2763,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2769,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2775,
											"end": 3000,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2775,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 2992,
											"name": "PUSH",
											"source": 2,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2979,
											"end": 2981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2971,
											"end": 2977,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 3000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 3000,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3006,
											"end": 3188,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3006,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3146,
											"end": 3180,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3130,
											"end": 3144,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3188,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3194,
											"end": 3316,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3285,
											"end": 3290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3267,
											"end": 3291,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3267,
											"end": 3291,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3267,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3292,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3306,
											"end": 3307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3308,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3316,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xfca6074092b8a1648fef1241ee1f79491b4202255352fa0ea8df8634b64fb78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6909cbe6d64495aeee0ecbbe95dc0e34d96d2845f31764c27aa306e4ef151dc7\",\"dweb:/ipfs/QmRjtC1AaLwozb8vTSBFx68v99ALk5r1zZ9yYyZVKfj3rv\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x39f7ee2668319d4b7967e6fecd1e14868d6beea538f1854f39b48f2bcd65c4bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3128c3c380c9480b2893781dc78fbbc39a6b7074d3f3ccd3a7ede87792460f82\",\"dweb:/ipfs/Qmdx6yqzJisqXkjCFYkc9ZUEByCNfAEUwxmhCTpsNYMgzF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 37,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							29
						]
					},
					"id": 30,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "579:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "759:3:0",
										"statements": []
									},
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:0:0"
									},
									"scope": 29,
									"src": "744:18:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "830:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 12,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "852:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "852:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "844:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 10,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "844:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "844:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "837:26:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "777:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "787:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "813:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:17:0"
									},
									"scope": 29,
									"src": "768:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "932:158:0",
										"statements": [
											{
												"expression": {
													"id": 22,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "939:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$29",
														"typeString": "contract Context"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "939:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 24,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1076:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1076:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 21,
												"id": 26,
												"nodeType": "Return",
												"src": "1069:15:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "884:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "918:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 19,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "918:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:14:0"
									},
									"scope": 29,
									"src": "875:215:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 30,
							"src": "570:523:0",
							"usedErrors": []
						}
					],
					"src": "33:1060:0"
				},
				"id": 0
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"Ownable": [
							149
						]
					},
					"id": 150,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 31,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 32,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 150,
							"sourceUnit": 30,
							"src": "60:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 34,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "612:7:1"
									},
									"id": 35,
									"nodeType": "InheritanceSpecifier",
									"src": "612:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 33,
								"nodeType": "StructuredDocumentation",
								"src": "85:505:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 149,
							"linearizedBaseContracts": [
								149,
								29
							],
							"name": "Ownable",
							"nameLocation": "601:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "641:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "625:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "625:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 43,
									"name": "OwnershipTransferred",
									"nameLocation": "660:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "697:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "681:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "728:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "712:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:57:1"
									},
									"src": "654:84:1"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "852:125:1",
										"statements": [
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "867:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 64,
														"src": "859:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 47,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "859:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 49,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "879:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "879:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:32:1"
											},
											{
												"expression": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 52,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "898:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 53,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "907:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "898:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "898:18:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "957:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "949:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 57,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "949:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "949:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 61,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "961:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 56,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "928:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "928:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "EmitStatement",
												"src": "923:48:1"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "744:89:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 65,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "849:2:1"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:0:1"
									},
									"scope": 149,
									"src": "837:140:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1097:26:1",
										"statements": [
											{
												"expression": {
													"id": 71,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 37,
													"src": "1111:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "1104:13:1"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "983:63:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1059:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:2:1"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1088:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:9:1"
									},
									"scope": 149,
									"src": "1050:73:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "1229:88:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 78,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1244:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 79,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1254:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1254:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1244:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1268:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1236:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1236:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1236:67:1"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "1310:1:1"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1129:75:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 87,
									"name": "onlyOwner",
									"nameLocation": "1217:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1208:109:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1698:84:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 94,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1731:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1739:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 95,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1739:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1739:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 93,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1710:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "1705:45:1"
											},
											{
												"expression": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1757:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1774:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1766:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 102,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1766:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1766:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1757:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1757:19:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "1323:325:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 91,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 90,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "1688:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1688:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1661:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1678:2:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1698:0:1"
									},
									"scope": 149,
									"src": "1652:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "1989:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2015:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "1996:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1996:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "1996:28:1"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1788:135:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 114,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "1979:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1979:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1936:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1962:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "1954:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1953:18:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1989:0:1"
									},
									"scope": 149,
									"src": "1927:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "2183:160:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 129,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "2198:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2218:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2210:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 130,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2210:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2210:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2198:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2190:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2190:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2190:73:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 139,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2296:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 140,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2304:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 138,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "2275:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "EmitStatement",
												"src": "2270:43:1"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2320:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2329:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2320:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "2320:17:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2036:88:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2137:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2164:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "2156:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2155:18:1"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2183:0:1"
									},
									"scope": 149,
									"src": "2128:215:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 150,
							"src": "592:1754:1",
							"usedErrors": []
						}
					],
					"src": "33:2313:1"
				},
				"id": 1
			}
		}
	}
}