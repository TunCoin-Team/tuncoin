{
	"id": "adea1c42ee7ea927e52ea11db61009e7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TunCoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./Context.sol\";\r\nimport \"./interface/Bep20Interface.sol\";\r\nimport \"./Ownable.sol\";\r\nimport \"./lib/SafeMath.sol\";\r\n\r\ncontract TunCoin is Context, Bep20Interface, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 private _decimals;\r\n  string private _symbol;\r\n  string private _name;\r\n\r\n  constructor() {\r\n    _name = \"TUNCOIN\";\r\n    _symbol = \"TUN\";\r\n    _decimals = 18;\r\n    _totalSupply = 31415926 * 10 ** 18;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external override  view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external override view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external override view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external override view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external override view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external override view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external override view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external override returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			},
			"contracts/lib/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./Context.sol\";\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}"
			},
			"contracts/interface/Bep20Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\ninterface Bep20Interface {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return payable(msg.sender);\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Context.sol\":570:1093  contract Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Context.sol\":744:762  constructor () { } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Context.sol\":570:1093  contract Context {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Context.sol\":570:1093  contract Context {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b591f5f46cf36fbcf5b3a4a2b37265ff3a98fb461111b2f6131450d8150f5f2c64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b591f5f46cf36fbcf5b3a4a2b37265ff3a98fb461111b2f6131450d8150f5f2c64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP2 CREATE2 DELEGATECALL PUSH13 0xF36FBCF5B3A4A2B37265FF3A98 0xFB CHAINID GT GT 0xB2 0xF6 SGT EQ POP 0xD8 ISZERO 0xF 0x5F 0x2C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "570:523:0:-:0;;;744:18;;;;;;;;;;570:523;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b591f5f46cf36fbcf5b3a4a2b37265ff3a98fb461111b2f6131450d8150f5f2c64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP2 CREATE2 DELEGATECALL PUSH13 0xF36FBCF5B3A4A2B37265FF3A98 0xFB CHAINID GT GT 0xB2 0xF6 SGT EQ POP 0xD8 ISZERO 0xF 0x5F 0x2C PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "570:523:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 744,
									"end": 762,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 744,
									"end": 762,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 1093,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b591f5f46cf36fbcf5b3a4a2b37265ff3a98fb461111b2f6131450d8150f5f2c64736f6c63430008040033",
									".code": [
										{
											"begin": 570,
											"end": 1093,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 1093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 1093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 1093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1093,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xfca6074092b8a1648fef1241ee1f79491b4202255352fa0ea8df8634b64fb78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6909cbe6d64495aeee0ecbbe95dc0e34d96d2845f31764c27aa306e4ef151dc7\",\"dweb:/ipfs/QmRjtC1AaLwozb8vTSBFx68v99ALk5r1zZ9yYyZVKfj3rv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":592:2346  contract Ownable is Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":837:977  constructor () {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":859:876  address msgSender */\n  0x00\n    /* \"contracts/Ownable.sol\":879:891  _msgSender() */\n  tag_6\n    /* \"contracts/Ownable.sol\":879:889  _msgSender */\n  shl(0x20, tag_7)\n    /* \"contracts/Ownable.sol\":879:891  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/Ownable.sol\":859:891  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/Ownable.sol\":907:916  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":898:904  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":898:916  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":961:970  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":928:971  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":957:958  0 */\n  0x00\n    /* \"contracts/Ownable.sol\":928:971  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":837:977  constructor () {\r... */\n  pop\n    /* \"contracts/Ownable.sol\":592:2346  contract Ownable is Context {\r... */\n  jump(tag_8)\n    /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\ntag_7:\n    /* \"contracts/Context.sol\":813:828  address payable */\n  0x00\n    /* \"contracts/Context.sol\":852:862  msg.sender */\n  caller\n    /* \"contracts/Context.sol\":837:863  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/Ownable.sol\":592:2346  contract Ownable is Context {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":592:2346  contract Ownable is Context {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":1652:1782  function renounceOwnership() public onlyOwner {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Ownable.sol\":1050:1123  function owner() public view returns (address) {\r... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1927:2030  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Ownable.sol\":1652:1782  function renounceOwnership() public onlyOwner {\r... */\n    tag_7:\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      tag_17\n        /* \"contracts/Ownable.sol\":1254:1264  _msgSender */\n      tag_18\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      jump\t// in\n    tag_17:\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1250  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1236:1303  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/Ownable.sol\":1747:1748  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1710:1750  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1731:1737  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1710:1750  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1774:1775  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1757:1763  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":1757:1776  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1652:1782  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1050:1123  function owner() public view returns (address) {\r... */\n    tag_9:\n        /* \"contracts/Ownable.sol\":1088:1095  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1111:1117  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1104:1117  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":1050:1123  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1927:2030  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_15:\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      tag_25\n        /* \"contracts/Ownable.sol\":1254:1264  _msgSender */\n      tag_18\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1250  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1236:1303  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/Ownable.sol\":1996:2024  _transferOwnership(newOwner) */\n      tag_29\n        /* \"contracts/Ownable.sol\":2015:2023  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1996:2014  _transferOwnership */\n      tag_30\n        /* \"contracts/Ownable.sol\":1996:2024  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_29:\n        /* \"contracts/Ownable.sol\":1927:2030  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\n    tag_18:\n        /* \"contracts/Context.sol\":813:828  address payable */\n      0x00\n        /* \"contracts/Context.sol\":852:862  msg.sender */\n      caller\n        /* \"contracts/Context.sol\":837:863  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2128:2343  function _transferOwnership(address newOwner) internal {\r... */\n    tag_30:\n        /* \"contracts/Ownable.sol\":2218:2219  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":2198:2220  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2198:2206  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2198:2220  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":2190:2263  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"contracts/Ownable.sol\":2304:2312  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2275:2313  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2296:2302  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2275:2313  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":2329:2337  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2320:2326  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":2320:2337  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":2128:2343  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_37:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_39\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:414   */\n    tag_14:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:230   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":276:277   */\n      0x00\n        /* \"#utility.yul\":273:274   */\n      dup1\n        /* \"#utility.yul\":266:278   */\n      revert\n        /* \"#utility.yul\":228:230   */\n    tag_42:\n        /* \"#utility.yul\":319:320   */\n      0x00\n        /* \"#utility.yul\":344:397   */\n      tag_43\n        /* \"#utility.yul\":389:396   */\n      dup5\n        /* \"#utility.yul\":380:386   */\n      dup3\n        /* \"#utility.yul\":369:378   */\n      dup6\n        /* \"#utility.yul\":365:387   */\n      add\n        /* \"#utility.yul\":344:397   */\n      tag_37\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":334:397   */\n      swap2\n      pop\n        /* \"#utility.yul\":290:407   */\n      pop\n        /* \"#utility.yul\":218:414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":420:538   */\n    tag_44:\n        /* \"#utility.yul\":507:531   */\n      tag_46\n        /* \"#utility.yul\":525:530   */\n      dup2\n        /* \"#utility.yul\":507:531   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":502:505   */\n      dup3\n        /* \"#utility.yul\":495:532   */\n      mstore\n        /* \"#utility.yul\":485:538   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":544:910   */\n    tag_48:\n        /* \"#utility.yul\":686:689   */\n      0x00\n        /* \"#utility.yul\":707:774   */\n      tag_50\n        /* \"#utility.yul\":771:773   */\n      0x26\n        /* \"#utility.yul\":766:769   */\n      dup4\n        /* \"#utility.yul\":707:774   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":700:774   */\n      swap2\n      pop\n        /* \"#utility.yul\":783:876   */\n      tag_52\n        /* \"#utility.yul\":872:875   */\n      dup3\n        /* \"#utility.yul\":783:876   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":901:903   */\n      0x40\n        /* \"#utility.yul\":896:899   */\n      dup3\n        /* \"#utility.yul\":892:904   */\n      add\n        /* \"#utility.yul\":885:904   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":916:1282   */\n    tag_54:\n        /* \"#utility.yul\":1058:1061   */\n      0x00\n        /* \"#utility.yul\":1079:1146   */\n      tag_56\n        /* \"#utility.yul\":1143:1145   */\n      0x20\n        /* \"#utility.yul\":1138:1141   */\n      dup4\n        /* \"#utility.yul\":1079:1146   */\n      tag_51\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1072:1146   */\n      swap2\n      pop\n        /* \"#utility.yul\":1155:1248   */\n      tag_57\n        /* \"#utility.yul\":1244:1247   */\n      dup3\n        /* \"#utility.yul\":1155:1248   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1273:1275   */\n      0x20\n        /* \"#utility.yul\":1268:1271   */\n      dup3\n        /* \"#utility.yul\":1264:1276   */\n      add\n        /* \"#utility.yul\":1257:1276   */\n      swap1\n      pop\n        /* \"#utility.yul\":1062:1282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1288:1510   */\n    tag_11:\n        /* \"#utility.yul\":1381:1385   */\n      0x00\n        /* \"#utility.yul\":1419:1421   */\n      0x20\n        /* \"#utility.yul\":1408:1417   */\n      dup3\n        /* \"#utility.yul\":1404:1422   */\n      add\n        /* \"#utility.yul\":1396:1422   */\n      swap1\n      pop\n        /* \"#utility.yul\":1432:1503   */\n      tag_60\n        /* \"#utility.yul\":1500:1501   */\n      0x00\n        /* \"#utility.yul\":1489:1498   */\n      dup4\n        /* \"#utility.yul\":1485:1502   */\n      add\n        /* \"#utility.yul\":1476:1482   */\n      dup5\n        /* \"#utility.yul\":1432:1503   */\n      tag_44\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1386:1510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1516:1935   */\n    tag_35:\n        /* \"#utility.yul\":1682:1686   */\n      0x00\n        /* \"#utility.yul\":1720:1722   */\n      0x20\n        /* \"#utility.yul\":1709:1718   */\n      dup3\n        /* \"#utility.yul\":1705:1723   */\n      add\n        /* \"#utility.yul\":1697:1723   */\n      swap1\n      pop\n        /* \"#utility.yul\":1769:1778   */\n      dup2\n        /* \"#utility.yul\":1763:1767   */\n      dup2\n        /* \"#utility.yul\":1759:1779   */\n      sub\n        /* \"#utility.yul\":1755:1756   */\n      0x00\n        /* \"#utility.yul\":1744:1753   */\n      dup4\n        /* \"#utility.yul\":1740:1757   */\n      add\n        /* \"#utility.yul\":1733:1780   */\n      mstore\n        /* \"#utility.yul\":1797:1928   */\n      tag_62\n        /* \"#utility.yul\":1923:1927   */\n      dup2\n        /* \"#utility.yul\":1797:1928   */\n      tag_48\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1789:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1687:1935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1941:2360   */\n    tag_21:\n        /* \"#utility.yul\":2107:2111   */\n      0x00\n        /* \"#utility.yul\":2145:2147   */\n      0x20\n        /* \"#utility.yul\":2134:2143   */\n      dup3\n        /* \"#utility.yul\":2130:2148   */\n      add\n        /* \"#utility.yul\":2122:2148   */\n      swap1\n      pop\n        /* \"#utility.yul\":2194:2203   */\n      dup2\n        /* \"#utility.yul\":2188:2192   */\n      dup2\n        /* \"#utility.yul\":2184:2204   */\n      sub\n        /* \"#utility.yul\":2180:2181   */\n      0x00\n        /* \"#utility.yul\":2169:2178   */\n      dup4\n        /* \"#utility.yul\":2165:2182   */\n      add\n        /* \"#utility.yul\":2158:2205   */\n      mstore\n        /* \"#utility.yul\":2222:2353   */\n      tag_64\n        /* \"#utility.yul\":2348:2352   */\n      dup2\n        /* \"#utility.yul\":2222:2353   */\n      tag_54\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2214:2353   */\n      swap1\n      pop\n        /* \"#utility.yul\":2112:2360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2535   */\n    tag_51:\n        /* \"#utility.yul\":2450:2461   */\n      0x00\n        /* \"#utility.yul\":2484:2490   */\n      dup3\n        /* \"#utility.yul\":2479:2482   */\n      dup3\n        /* \"#utility.yul\":2472:2491   */\n      mstore\n        /* \"#utility.yul\":2524:2528   */\n      0x20\n        /* \"#utility.yul\":2519:2522   */\n      dup3\n        /* \"#utility.yul\":2515:2529   */\n      add\n        /* \"#utility.yul\":2500:2529   */\n      swap1\n      pop\n        /* \"#utility.yul\":2462:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2637   */\n    tag_47:\n        /* \"#utility.yul\":2578:2585   */\n      0x00\n        /* \"#utility.yul\":2607:2631   */\n      tag_67\n        /* \"#utility.yul\":2625:2630   */\n      dup3\n        /* \"#utility.yul\":2607:2631   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2596:2631   */\n      swap1\n      pop\n        /* \"#utility.yul\":2586:2637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2643:2769   */\n    tag_68:\n        /* \"#utility.yul\":2680:2687   */\n      0x00\n        /* \"#utility.yul\":2720:2762   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2713:2718   */\n      dup3\n        /* \"#utility.yul\":2709:2763   */\n      and\n        /* \"#utility.yul\":2698:2763   */\n      swap1\n      pop\n        /* \"#utility.yul\":2688:2769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2775:3000   */\n    tag_53:\n        /* \"#utility.yul\":2915:2949   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2911:2912   */\n      0x00\n        /* \"#utility.yul\":2903:2909   */\n      dup3\n        /* \"#utility.yul\":2899:2913   */\n      add\n        /* \"#utility.yul\":2892:2950   */\n      mstore\n        /* \"#utility.yul\":2984:2992   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2979:2981   */\n      0x20\n        /* \"#utility.yul\":2971:2977   */\n      dup3\n        /* \"#utility.yul\":2967:2982   */\n      add\n        /* \"#utility.yul\":2960:2993   */\n      mstore\n        /* \"#utility.yul\":2881:3000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3006:3188   */\n    tag_58:\n        /* \"#utility.yul\":3146:3180   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3142:3143   */\n      0x00\n        /* \"#utility.yul\":3134:3140   */\n      dup3\n        /* \"#utility.yul\":3130:3144   */\n      add\n        /* \"#utility.yul\":3123:3181   */\n      mstore\n        /* \"#utility.yul\":3112:3188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3194:3316   */\n    tag_40:\n        /* \"#utility.yul\":3267:3291   */\n      tag_73\n        /* \"#utility.yul\":3285:3290   */\n      dup2\n        /* \"#utility.yul\":3267:3291   */\n      tag_47\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":3260:3265   */\n      dup2\n        /* \"#utility.yul\":3257:3292   */\n      eq\n        /* \"#utility.yul\":3247:3249   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":3306:3307   */\n      0x00\n        /* \"#utility.yul\":3303:3304   */\n      dup1\n        /* \"#utility.yul\":3296:3308   */\n      revert\n        /* \"#utility.yul\":3247:3249   */\n    tag_74:\n        /* \"#utility.yul\":3237:3316   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220205e03386b7de4163f1146fde10940b662477225af09e0bab3de12cf466b778b64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b6105d2806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b604051610065919061046f565b60405180910390f35b610088600480360381019061008391906103f1565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104aa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104aa565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103169061048a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506103eb81610585565b92915050565b60006020828403121561040357600080fd5b6000610411848285016103dc565b91505092915050565b610423816104db565b82525050565b60006104366026836104ca565b91506104418261050d565b604082019050919050565b60006104596020836104ca565b91506104648261055c565b602082019050919050565b6000602082019050610484600083018461041a565b92915050565b600060208201905081810360008301526104a381610429565b9050919050565b600060208201905081810360008301526104c38161044c565b9050919050565b600082825260208201905092915050565b60006104e6826104ed565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61058e816104db565b811461059957600080fd5b5056fea2646970667358221220205e03386b7de4163f1146fde10940b662477225af09e0bab3de12cf466b778b64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x21 PUSH2 0xC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5D2 DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316 SWAP1 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EB DUP2 PUSH2 0x585 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP3 DUP6 ADD PUSH2 0x3DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x423 DUP2 PUSH2 0x4DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 PUSH1 0x26 DUP4 PUSH2 0x4CA JUMP JUMPDEST SWAP2 POP PUSH2 0x441 DUP3 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x459 PUSH1 0x20 DUP4 PUSH2 0x4CA JUMP JUMPDEST SWAP2 POP PUSH2 0x464 DUP3 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x484 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A3 DUP2 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C3 DUP2 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E6 DUP3 PUSH2 0x4ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x58E DUP2 PUSH2 0x4DB JUMP JUMPDEST DUP2 EQ PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0x5E SUB CODESIZE PUSH12 0x7DE4163F1146FDE10940B662 SELFBALANCE PUSH19 0x25AF09E0BAB3DE12CF466B778B64736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "592:1754:1:-:0;;;837:140;;;;;;;;;;859:17;879:12;:10;;;:12;;:::i;:::-;859:32;;907:9;898:6;;:18;;;;;;;;;;;;;;;;;;961:9;928:43;;957:1;928:43;;;;;;;;;;;;837:140;592:1754;;768:101:0;813:15;852:10;837:26;;768:101;:::o;592:1754:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3319:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:196:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "273:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "276:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:5"
															},
															"nodeType": "YulIf",
															"src": "228:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "290:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "305:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "309:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "334:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "369:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "389:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "344:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "344:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "334:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:5",
														"type": ""
													}
												],
												"src": "152:262:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "485:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "502:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "525:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "507:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "495:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "480:3:5",
														"type": ""
													}
												],
												"src": "420:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "690:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "700:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "766:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "700:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "872:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "783:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "783:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "783:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "885:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "896:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "901:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "892:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "885:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "678:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "686:3:5",
														"type": ""
													}
												],
												"src": "544:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1062:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1072:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1138:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1143:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1079:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1072:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1244:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1155:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1155:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1257:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1268:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1273:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1264:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1257:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1050:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1058:3:5",
														"type": ""
													}
												],
												"src": "916:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1386:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1396:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1408:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1419:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1404:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1404:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1396:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1476:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1489:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1500:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1485:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1485:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1432:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1432:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1358:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1370:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1381:4:5",
														"type": ""
													}
												],
												"src": "1288:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1697:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1709:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1705:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1697:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1744:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1755:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1740:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1740:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1763:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1769:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1759:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1759:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1733:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1733:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1733:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1789:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1923:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1797:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1789:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1667:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1682:4:5",
														"type": ""
													}
												],
												"src": "1516:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2112:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2122:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2134:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2145:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2130:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2122:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2169:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2180:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2165:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2165:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2188:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2194:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2158:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2214:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2348:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2222:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2222:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2214:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2092:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2107:4:5",
														"type": ""
													}
												],
												"src": "1941:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2462:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2479:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2484:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2472:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2500:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2524:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2515:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2500:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2434:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2439:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2450:11:5",
														"type": ""
													}
												],
												"src": "2366:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2625:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2607:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2596:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2568:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2578:7:5",
														"type": ""
													}
												],
												"src": "2541:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2688:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2698:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2713:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2720:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2709:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2698:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2670:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2680:7:5",
														"type": ""
													}
												],
												"src": "2643:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2881:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2903:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2911:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2899:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2899:14:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2915:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2892:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2971:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2979:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2967:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2967:15:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2984:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2960:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2960:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2960:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2873:6:5",
														"type": ""
													}
												],
												"src": "2775:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3112:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3134:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3142:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3130:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3130:14:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3146:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3123:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3123:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3123:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3104:6:5",
														"type": ""
													}
												],
												"src": "3006:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3237:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3294:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3303:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3306:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3296:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3296:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3296:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3260:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3285:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3267:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3267:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3257:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3257:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3250:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3250:43:5"
															},
															"nodeType": "YulIf",
															"src": "3247:2:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3230:5:5",
														"type": ""
													}
												],
												"src": "3194:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b604051610065919061046f565b60405180910390f35b610088600480360381019061008391906103f1565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104aa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104aa565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103169061048a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506103eb81610585565b92915050565b60006020828403121561040357600080fd5b6000610411848285016103dc565b91505092915050565b610423816104db565b82525050565b60006104366026836104ca565b91506104418261050d565b604082019050919050565b60006104596020836104ca565b91506104648261055c565b602082019050919050565b6000602082019050610484600083018461041a565b92915050565b600060208201905081810360008301526104a381610429565b9050919050565b600060208201905081810360008301526104c38161044c565b9050919050565b600082825260208201905092915050565b60006104e6826104ed565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61058e816104db565b811461059957600080fd5b5056fea2646970667358221220205e03386b7de4163f1146fde10940b662477225af09e0bab3de12cf466b778b64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316 SWAP1 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EB DUP2 PUSH2 0x585 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP3 DUP6 ADD PUSH2 0x3DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x423 DUP2 PUSH2 0x4DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 PUSH1 0x26 DUP4 PUSH2 0x4CA JUMP JUMPDEST SWAP2 POP PUSH2 0x441 DUP3 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x459 PUSH1 0x20 DUP4 PUSH2 0x4CA JUMP JUMPDEST SWAP2 POP PUSH2 0x464 DUP3 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x484 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A3 DUP2 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C3 DUP2 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E6 DUP3 PUSH2 0x4ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x58E DUP2 PUSH2 0x4DB JUMP JUMPDEST DUP2 EQ PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0x5E SUB CODESIZE PUSH12 0x7DE4163F1146FDE10940B662 SELFBALANCE PUSH19 0x25AF09E0BAB3DE12CF466B778B64736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "592:1754:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1652:130;;;:::i;:::-;;1050:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1927:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1652:130;1254:12;:10;:12::i;:::-;1244:22;;:6;;;;;;;;;;:22;;;1236:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1747:1:::1;1710:40;;1731:6;::::0;::::1;;;;;;;;1710:40;;;;;;;;;;;;1774:1;1757:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1652:130::o:0;1050:73::-;1088:7;1111:6;;;;;;;;;;;1104:13;;1050:73;:::o;1927:103::-;1254:12;:10;:12::i;:::-;1244:22;;:6;;;;;;;;;;:22;;;1236:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1996:28:::1;2015:8;1996:18;:28::i;:::-;1927:103:::0;:::o;768:101:0:-;813:15;852:10;837:26;;768:101;:::o;2128:215:1:-;2218:1;2198:22;;:8;:22;;;;2190:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2304:8;2275:38;;2296:6;;;;;;;;;;2275:38;;;;;;;;;;;;2329:8;2320:6;;:17;;;;;;;;;;;;;;;;;;2128:215;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;211:6;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:366::-;686:3;707:67;771:2;766:3;707:67;:::i;:::-;700:74;;783:93;872:3;783:93;:::i;:::-;901:2;896:3;892:12;885:19;;690:220;;;:::o;916:366::-;1058:3;1079:67;1143:2;1138:3;1079:67;:::i;:::-;1072:74;;1155:93;1244:3;1155:93;:::i;:::-;1273:2;1268:3;1264:12;1257:19;;1062:220;;;:::o;1288:222::-;1381:4;1419:2;1408:9;1404:18;1396:26;;1432:71;1500:1;1489:9;1485:17;1476:6;1432:71;:::i;:::-;1386:124;;;;:::o;1516:419::-;1682:4;1720:2;1709:9;1705:18;1697:26;;1769:9;1763:4;1759:20;1755:1;1744:9;1740:17;1733:47;1797:131;1923:4;1797:131;:::i;:::-;1789:139;;1687:248;;;:::o;1941:419::-;2107:4;2145:2;2134:9;2130:18;2122:26;;2194:9;2188:4;2184:20;2180:1;2169:9;2165:17;2158:47;2222:131;2348:4;2222:131;:::i;:::-;2214:139;;2112:248;;;:::o;2366:169::-;2450:11;2484:6;2479:3;2472:19;2524:4;2519:3;2515:14;2500:29;;2462:73;;;;:::o;2541:96::-;2578:7;2607:24;2625:5;2607:24;:::i;:::-;2596:35;;2586:51;;;:::o;2643:126::-;2680:7;2720:42;2713:5;2709:54;2698:65;;2688:81;;;:::o;2775:225::-;2915:34;2911:1;2903:6;2899:14;2892:58;2984:8;2979:2;2971:6;2967:15;2960:33;2881:119;:::o;3006:182::-;3146:34;3142:1;3134:6;3130:14;3123:58;3112:76;:::o;3194:122::-;3267:24;3285:5;3267:24;:::i;:::-;3260:5;3257:35;3247:2;;3306:1;3303;3296:12;3247:2;3237:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "298000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "1222",
								"renounceOwnership()": "24269",
								"transferOwnership(address)": "24691"
							},
							"internal": {
								"_transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 837,
									"end": 977,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 837,
									"end": 977,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 837,
									"end": 977,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 859,
									"end": 876,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 879,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 879,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 879,
									"end": 889,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 879,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 879,
									"end": 891,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 859,
									"end": 891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 907,
									"end": 916,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 898,
									"end": 904,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 898,
									"end": 916,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 898,
									"end": 916,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 898,
									"end": 916,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 961,
									"end": 970,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 957,
									"end": 958,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 768,
									"end": 869,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 768,
									"end": 869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 813,
									"end": 828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 862,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 837,
									"end": 863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 837,
									"end": 863,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 768,
									"end": 869,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 768,
									"end": 869,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 2346,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220205e03386b7de4163f1146fde10940b662477225af09e0bab3de12cf466b778b64736f6c63430008040033",
									".code": [
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 2346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2015,
											"end": 2023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 768,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 768,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 862,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 837,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 869,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 228,
											"end": 230,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 274,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 266,
											"end": 278,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 228,
											"end": 230,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 378,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 365,
											"end": 387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 334,
											"end": 397,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 218,
											"end": 414,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 525,
											"end": 530,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 502,
											"end": 505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 495,
											"end": 532,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 538,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 544,
											"end": 910,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 544,
											"end": 910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 686,
											"end": 689,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 766,
											"end": 769,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 707,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 700,
											"end": 774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 700,
											"end": 774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 783,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 872,
											"end": 875,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 783,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 783,
											"end": 876,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 876,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 783,
											"end": 876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 901,
											"end": 903,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 892,
											"end": 904,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 885,
											"end": 904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 885,
											"end": 904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 910,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 690,
											"end": 910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 690,
											"end": 910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 910,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 916,
											"end": 1282,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 916,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1143,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1141,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1079,
											"end": 1146,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1146,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1079,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1244,
											"end": 1247,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1155,
											"end": 1248,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1155,
											"end": 1248,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1155,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1271,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1282,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1282,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1288,
											"end": 1510,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1288,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1421,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1417,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1498,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1432,
											"end": 1503,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1432,
											"end": 1503,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1432,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1510,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1510,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1510,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1516,
											"end": 1935,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1516,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1686,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1767,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1779,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1780,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1923,
											"end": 1927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1797,
											"end": 1928,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1797,
											"end": 1928,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1797,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1789,
											"end": 1928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1789,
											"end": 1928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1935,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1935,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1941,
											"end": 2360,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1941,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2134,
											"end": 2143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2204,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2178,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2158,
											"end": 2205,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2222,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2353,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2360,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2360,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2366,
											"end": 2535,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2366,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2482,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2472,
											"end": 2491,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2528,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2519,
											"end": 2522,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2535,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2535,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2535,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2541,
											"end": 2637,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2541,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2625,
											"end": 2630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2607,
											"end": 2631,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2607,
											"end": 2631,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2607,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2637,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2643,
											"end": 2769,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2643,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 2718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2763,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2769,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2775,
											"end": 3000,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2775,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2909,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2950,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 2992,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2979,
											"end": 2981,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2971,
											"end": 2977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 2982,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2960,
											"end": 2993,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 3000,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3006,
											"end": 3188,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3006,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3146,
											"end": 3180,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3144,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3188,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3194,
											"end": 3316,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3285,
											"end": 3290,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3267,
											"end": 3291,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3267,
											"end": 3291,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3267,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3257,
											"end": 3292,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3306,
											"end": 3307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3308,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3316,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xfca6074092b8a1648fef1241ee1f79491b4202255352fa0ea8df8634b64fb78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6909cbe6d64495aeee0ecbbe95dc0e34d96d2845f31764c27aa306e4ef151dc7\",\"dweb:/ipfs/QmRjtC1AaLwozb8vTSBFx68v99ALk5r1zZ9yYyZVKfj3rv\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x39f7ee2668319d4b7967e6fecd1e14868d6beea538f1854f39b48f2bcd65c4bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3128c3c380c9480b2893781dc78fbbc39a6b7074d3f3ccd3a7ede87792460f82\",\"dweb:/ipfs/Qmdx6yqzJisqXkjCFYkc9ZUEByCNfAEUwxmhCTpsNYMgzF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 37,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TunCoin.sol": {
				"TunCoin": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TunCoin.sol\":184:8084  contract TunCoin is Context, Bep20Interface, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TunCoin.sol\":519:750  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":859:876  address msgSender */\n  0x00\n    /* \"contracts/Ownable.sol\":879:891  _msgSender() */\n  tag_7\n    /* \"contracts/Ownable.sol\":879:889  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/Ownable.sol\":879:891  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Ownable.sol\":859:891  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/Ownable.sol\":907:916  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":898:904  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":898:916  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":961:970  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":928:971  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":957:958  0 */\n  0x00\n    /* \"contracts/Ownable.sol\":928:971  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":837:977  constructor () {\r... */\n  pop\n    /* \"contracts/TunCoin.sol\":540:557  _name = \"TUNCOIN\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x54554e434f494e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/TunCoin.sol\":540:545  _name */\n  0x06\n    /* \"contracts/TunCoin.sol\":540:557  _name = \"TUNCOIN\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/TunCoin.sol\":564:579  _symbol = \"TUN\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x54554e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/TunCoin.sol\":564:571  _symbol */\n  0x05\n    /* \"contracts/TunCoin.sol\":564:579  _symbol = \"TUN\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/TunCoin.sol\":598:600  18 */\n  0x12\n    /* \"contracts/TunCoin.sol\":586:595  _decimals */\n  0x04\n  0x00\n    /* \"contracts/TunCoin.sol\":586:600  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TunCoin.sol\":622:641  31415926 * 10 ** 18 */\n  0x19fc94c2d06261e0180000\n    /* \"contracts/TunCoin.sol\":607:619  _totalSupply */\n  0x03\n    /* \"contracts/TunCoin.sol\":607:641  _totalSupply = 31415926 * 10 ** 18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TunCoin.sol\":672:684  _totalSupply */\n  sload(0x03)\n    /* \"contracts/TunCoin.sol\":648:657  _balances */\n  0x01\n    /* \"contracts/TunCoin.sol\":648:669  _balances[msg.sender] */\n  0x00\n    /* \"contracts/TunCoin.sol\":658:668  msg.sender */\n  caller\n    /* \"contracts/TunCoin.sol\":648:669  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/TunCoin.sol\":648:684  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TunCoin.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/TunCoin.sol\":698:744  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TunCoin.sol\":715:716  0 */\n  0x00\n    /* \"contracts/TunCoin.sol\":698:744  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/TunCoin.sol\":731:743  _totalSupply */\n  sload(0x03)\n    /* \"contracts/TunCoin.sol\":698:744  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/TunCoin.sol\":184:8084  contract TunCoin is Context, Bep20Interface, Ownable {\r... */\n  jump(tag_15)\n    /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\ntag_8:\n    /* \"contracts/Context.sol\":813:828  address payable */\n  0x00\n    /* \"contracts/Context.sol\":852:862  msg.sender */\n  caller\n    /* \"contracts/Context.sol\":837:863  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/TunCoin.sol\":184:8084  contract TunCoin is Context, Bep20Interface, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_20\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_19)\ntag_20:\n  dup3\n  0x1f\n  lt\n  tag_21\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_19)\ntag_21:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  dup3\n  add\ntag_22:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_22)\ntag_23:\ntag_19:\n  pop\n  swap1\n  pop\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  pop\n  swap1\n  jump\t// out\ntag_25:\ntag_26:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_26)\ntag_27:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:125   */\ntag_29:\n    /* \"#utility.yul\":94:118   */\n  tag_31\n    /* \"#utility.yul\":112:117   */\n  dup2\n    /* \"#utility.yul\":94:118   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":89:92   */\n  dup3\n    /* \"#utility.yul\":82:119   */\n  mstore\n    /* \"#utility.yul\":72:125   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":131:353   */\ntag_14:\n    /* \"#utility.yul\":224:228   */\n  0x00\n    /* \"#utility.yul\":262:264   */\n  0x20\n    /* \"#utility.yul\":251:260   */\n  dup3\n    /* \"#utility.yul\":247:265   */\n  add\n    /* \"#utility.yul\":239:265   */\n  swap1\n  pop\n    /* \"#utility.yul\":275:346   */\n  tag_34\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":332:341   */\n  dup4\n    /* \"#utility.yul\":328:345   */\n  add\n    /* \"#utility.yul\":319:325   */\n  dup5\n    /* \"#utility.yul\":275:346   */\n  tag_29\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":229:353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":359:436   */\ntag_32:\n    /* \"#utility.yul\":396:403   */\n  0x00\n    /* \"#utility.yul\":425:430   */\n  dup2\n    /* \"#utility.yul\":414:430   */\n  swap1\n  pop\n    /* \"#utility.yul\":404:436   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":442:762   */\ntag_18:\n    /* \"#utility.yul\":486:492   */\n  0x00\n    /* \"#utility.yul\":523:524   */\n  0x02\n    /* \"#utility.yul\":517:521   */\n  dup3\n    /* \"#utility.yul\":513:525   */\n  div\n    /* \"#utility.yul\":503:525   */\n  swap1\n  pop\n    /* \"#utility.yul\":570:571   */\n  0x01\n    /* \"#utility.yul\":564:568   */\n  dup3\n    /* \"#utility.yul\":560:572   */\n  and\n    /* \"#utility.yul\":591:609   */\n  dup1\n    /* \"#utility.yul\":581:583   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":647:651   */\n  0x7f\n    /* \"#utility.yul\":639:645   */\n  dup3\n    /* \"#utility.yul\":635:652   */\n  and\n    /* \"#utility.yul\":625:652   */\n  swap2\n  pop\n    /* \"#utility.yul\":581:583   */\ntag_37:\n    /* \"#utility.yul\":709:711   */\n  0x20\n    /* \"#utility.yul\":701:707   */\n  dup3\n    /* \"#utility.yul\":698:712   */\n  lt\n    /* \"#utility.yul\":678:696   */\n  dup2\n    /* \"#utility.yul\":675:713   */\n  eq\n    /* \"#utility.yul\":672:674   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":728:746   */\n  tag_39\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":672:674   */\ntag_38:\n    /* \"#utility.yul\":493:762   */\n  pop\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":768:948   */\ntag_40:\n    /* \"#utility.yul\":816:893   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":813:814   */\n  0x00\n    /* \"#utility.yul\":806:894   */\n  mstore\n    /* \"#utility.yul\":913:917   */\n  0x22\n    /* \"#utility.yul\":910:911   */\n  0x04\n    /* \"#utility.yul\":903:918   */\n  mstore\n    /* \"#utility.yul\":937:941   */\n  0x24\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":927:942   */\n  revert\n    /* \"contracts/TunCoin.sol\":184:8084  contract TunCoin is Context, Bep20Interface, Ownable {\r... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TunCoin.sol\":184:8084  contract TunCoin is Context, Bep20Interface, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TunCoin.sol\":1248:1336  function name() external override view returns (string memory) {\r... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TunCoin.sol\":2333:2486  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TunCoin.sol\":1392:1488  function totalSupply() external override view returns (uint256) {\r... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TunCoin.sol\":2931:3232  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TunCoin.sol\":958:1046  function decimals() external override view returns (uint8) {\r... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TunCoin.sol\":3614:3814  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TunCoin.sol\":1542:1657  function balanceOf(address account) external override view returns (uint256) {\r... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1652:1782  function renounceOwnership() public onlyOwner {\r... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/TunCoin.sol\":810:899  function getOwner() external override  view returns (address) {\r... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1050:1123  function owner() public view returns (address) {\r... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TunCoin.sol\":1103:1195  function symbol() external override view returns (string memory) {\r... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TunCoin.sol\":4737:4857  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TunCoin.sol\":4286:4537  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TunCoin.sol\":1851:2010  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TunCoin.sol\":2064:2203  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1927:2030  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/TunCoin.sol\":1248:1336  function name() external override view returns (string memory) {\r... */\n    tag_23:\n        /* \"contracts/TunCoin.sol\":1296:1309  string memory */\n      0x60\n        /* \"contracts/TunCoin.sol\":1325:1330  _name */\n      0x06\n        /* \"contracts/TunCoin.sol\":1318:1330  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":1248:1336  function name() external override view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":2333:2486  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_29:\n        /* \"contracts/TunCoin.sol\":2410:2414  bool */\n      0x00\n        /* \"contracts/TunCoin.sol\":2423:2462  _approve(_msgSender(), spender, amount) */\n      tag_95\n        /* \"contracts/TunCoin.sol\":2432:2444  _msgSender() */\n      tag_96\n        /* \"contracts/TunCoin.sol\":2432:2442  _msgSender */\n      tag_97\n        /* \"contracts/TunCoin.sol\":2432:2444  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/TunCoin.sol\":2446:2453  spender */\n      dup5\n        /* \"contracts/TunCoin.sol\":2455:2461  amount */\n      dup5\n        /* \"contracts/TunCoin.sol\":2423:2431  _approve */\n      tag_98\n        /* \"contracts/TunCoin.sol\":2423:2462  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/TunCoin.sol\":2476:2480  true */\n      0x01\n        /* \"contracts/TunCoin.sol\":2469:2480  return true */\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":2333:2486  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":1392:1488  function totalSupply() external override view returns (uint256) {\r... */\n    tag_33:\n        /* \"contracts/TunCoin.sol\":1447:1454  uint256 */\n      0x00\n        /* \"contracts/TunCoin.sol\":1470:1482  _totalSupply */\n      sload(0x03)\n        /* \"contracts/TunCoin.sol\":1463:1482  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":1392:1488  function totalSupply() external override view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":2931:3232  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_39:\n        /* \"contracts/TunCoin.sol\":3031:3035  bool */\n      0x00\n        /* \"contracts/TunCoin.sol\":3044:3080  _transfer(sender, recipient, amount) */\n      tag_101\n        /* \"contracts/TunCoin.sol\":3054:3060  sender */\n      dup5\n        /* \"contracts/TunCoin.sol\":3062:3071  recipient */\n      dup5\n        /* \"contracts/TunCoin.sol\":3073:3079  amount */\n      dup5\n        /* \"contracts/TunCoin.sol\":3044:3053  _transfer */\n      tag_102\n        /* \"contracts/TunCoin.sol\":3044:3080  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/TunCoin.sol\":3087:3208  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_103\n        /* \"contracts/TunCoin.sol\":3096:3102  sender */\n      dup5\n        /* \"contracts/TunCoin.sol\":3104:3116  _msgSender() */\n      tag_104\n        /* \"contracts/TunCoin.sol\":3104:3114  _msgSender */\n      tag_97\n        /* \"contracts/TunCoin.sol\":3104:3116  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/TunCoin.sol\":3118:3207  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_105\n        /* \"contracts/TunCoin.sol\":3156:3162  amount */\n      dup6\n        /* \"contracts/TunCoin.sol\":3118:3207  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/TunCoin.sol\":3118:3129  _allowances */\n      0x02\n        /* \"contracts/TunCoin.sol\":3118:3137  _allowances[sender] */\n      0x00\n        /* \"contracts/TunCoin.sol\":3130:3136  sender */\n      dup12\n        /* \"contracts/TunCoin.sol\":3118:3137  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TunCoin.sol\":3118:3151  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/TunCoin.sol\":3138:3150  _msgSender() */\n      tag_106\n        /* \"contracts/TunCoin.sol\":3138:3148  _msgSender */\n      tag_97\n        /* \"contracts/TunCoin.sol\":3138:3150  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/TunCoin.sol\":3118:3151  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TunCoin.sol\":3118:3155  _allowances[sender][_msgSender()].sub */\n      tag_107\n      swap1\n        /* \"contracts/TunCoin.sol\":3118:3207  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/TunCoin.sol\":3087:3095  _approve */\n      tag_98\n        /* \"contracts/TunCoin.sol\":3087:3208  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/TunCoin.sol\":3222:3226  true */\n      0x01\n        /* \"contracts/TunCoin.sol\":3215:3226  return true */\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":2931:3232  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":958:1046  function decimals() external override view returns (uint8) {\r... */\n    tag_42:\n        /* \"contracts/TunCoin.sol\":1010:1015  uint8 */\n      0x00\n        /* \"contracts/TunCoin.sol\":1031:1040  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TunCoin.sol\":1024:1040  return _decimals */\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":958:1046  function decimals() external override view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":3614:3814  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_47:\n        /* \"contracts/TunCoin.sol\":3694:3698  bool */\n      0x00\n        /* \"contracts/TunCoin.sol\":3707:3790  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_110\n        /* \"contracts/TunCoin.sol\":3716:3728  _msgSender() */\n      tag_111\n        /* \"contracts/TunCoin.sol\":3716:3726  _msgSender */\n      tag_97\n        /* \"contracts/TunCoin.sol\":3716:3728  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/TunCoin.sol\":3730:3737  spender */\n      dup5\n        /* \"contracts/TunCoin.sol\":3739:3789  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_112\n        /* \"contracts/TunCoin.sol\":3778:3788  addedValue */\n      dup6\n        /* \"contracts/TunCoin.sol\":3739:3750  _allowances */\n      0x02\n        /* \"contracts/TunCoin.sol\":3739:3764  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/TunCoin.sol\":3751:3763  _msgSender() */\n      tag_113\n        /* \"contracts/TunCoin.sol\":3751:3761  _msgSender */\n      tag_97\n        /* \"contracts/TunCoin.sol\":3751:3763  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/TunCoin.sol\":3739:3764  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TunCoin.sol\":3739:3773  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/TunCoin.sol\":3765:3772  spender */\n      dup10\n        /* \"contracts/TunCoin.sol\":3739:3773  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TunCoin.sol\":3739:3777  _allowances[_msgSender()][spender].add */\n      tag_114\n      swap1\n        /* \"contracts/TunCoin.sol\":3739:3789  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/TunCoin.sol\":3707:3715  _approve */\n      tag_98\n        /* \"contracts/TunCoin.sol\":3707:3790  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/TunCoin.sol\":3804:3808  true */\n      0x01\n        /* \"contracts/TunCoin.sol\":3797:3808  return true */\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":3614:3814  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":1542:1657  function balanceOf(address account) external override view returns (uint256) {\r... */\n    tag_52:\n        /* \"contracts/TunCoin.sol\":1610:1617  uint256 */\n      0x00\n        /* \"contracts/TunCoin.sol\":1633:1642  _balances */\n      0x01\n        /* \"contracts/TunCoin.sol\":1633:1651  _balances[account] */\n      0x00\n        /* \"contracts/TunCoin.sol\":1643:1650  account */\n      dup4\n        /* \"contracts/TunCoin.sol\":1633:1651  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TunCoin.sol\":1626:1651  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":1542:1657  function balanceOf(address account) external override view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1652:1782  function renounceOwnership() public onlyOwner {\r... */\n    tag_55:\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      tag_117\n        /* \"contracts/Ownable.sol\":1254:1264  _msgSender */\n      tag_97\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1250  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1236:1303  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/Ownable.sol\":1747:1748  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1710:1750  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1731:1737  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1710:1750  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1774:1775  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1757:1763  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":1757:1776  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1652:1782  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":810:899  function getOwner() external override  view returns (address) {\r... */\n    tag_57:\n        /* \"contracts/TunCoin.sol\":863:870  address */\n      0x00\n        /* \"contracts/TunCoin.sol\":886:893  owner() */\n      tag_123\n        /* \"contracts/TunCoin.sol\":886:891  owner */\n      tag_61\n        /* \"contracts/TunCoin.sol\":886:893  owner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/TunCoin.sol\":879:893  return owner() */\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":810:899  function getOwner() external override  view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1050:1123  function owner() public view returns (address) {\r... */\n    tag_61:\n        /* \"contracts/Ownable.sol\":1088:1095  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1111:1117  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1104:1117  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":1050:1123  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":1103:1195  function symbol() external override view returns (string memory) {\r... */\n    tag_64:\n        /* \"contracts/TunCoin.sol\":1153:1166  string memory */\n      0x60\n        /* \"contracts/TunCoin.sol\":1182:1189  _symbol */\n      0x05\n        /* \"contracts/TunCoin.sol\":1175:1189  return _symbol */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_89\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_89\n      jump\t// in\n    tag_127:\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_129\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_128)\n    tag_129:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_130:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_130\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":1103:1195  function symbol() external override view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":4737:4857  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_69:\n        /* \"contracts/TunCoin.sol\":4793:4797  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      tag_132\n        /* \"contracts/Ownable.sol\":1254:1264  _msgSender */\n      tag_97\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1250  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1236:1303  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_120\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/TunCoin.sol\":4806:4833  _mint(_msgSender(), amount) */\n      tag_136\n        /* \"contracts/TunCoin.sol\":4812:4824  _msgSender() */\n      tag_137\n        /* \"contracts/TunCoin.sol\":4812:4822  _msgSender */\n      tag_97\n        /* \"contracts/TunCoin.sol\":4812:4824  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/TunCoin.sol\":4826:4832  amount */\n      dup4\n        /* \"contracts/TunCoin.sol\":4806:4811  _mint */\n      tag_138\n        /* \"contracts/TunCoin.sol\":4806:4833  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/TunCoin.sol\":4847:4851  true */\n      0x01\n        /* \"contracts/TunCoin.sol\":4840:4851  return true */\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":4737:4857  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":4286:4537  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_73:\n        /* \"contracts/TunCoin.sol\":4371:4375  bool */\n      0x00\n        /* \"contracts/TunCoin.sol\":4384:4513  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_140\n        /* \"contracts/TunCoin.sol\":4393:4405  _msgSender() */\n      tag_141\n        /* \"contracts/TunCoin.sol\":4393:4403  _msgSender */\n      tag_97\n        /* \"contracts/TunCoin.sol\":4393:4405  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/TunCoin.sol\":4407:4414  spender */\n      dup5\n        /* \"contracts/TunCoin.sol\":4416:4512  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_142\n        /* \"contracts/TunCoin.sol\":4455:4470  subtractedValue */\n      dup6\n        /* \"contracts/TunCoin.sol\":4416:4512  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/TunCoin.sol\":4416:4427  _allowances */\n      0x02\n        /* \"contracts/TunCoin.sol\":4416:4441  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/TunCoin.sol\":4428:4440  _msgSender() */\n      tag_143\n        /* \"contracts/TunCoin.sol\":4428:4438  _msgSender */\n      tag_97\n        /* \"contracts/TunCoin.sol\":4428:4440  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/TunCoin.sol\":4416:4441  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TunCoin.sol\":4416:4450  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/TunCoin.sol\":4442:4449  spender */\n      dup11\n        /* \"contracts/TunCoin.sol\":4416:4450  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TunCoin.sol\":4416:4454  _allowances[_msgSender()][spender].sub */\n      tag_107\n      swap1\n        /* \"contracts/TunCoin.sol\":4416:4512  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/TunCoin.sol\":4384:4392  _approve */\n      tag_98\n        /* \"contracts/TunCoin.sol\":4384:4513  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/TunCoin.sol\":4527:4531  true */\n      0x01\n        /* \"contracts/TunCoin.sol\":4520:4531  return true */\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":4286:4537  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":1851:2010  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_77:\n        /* \"contracts/TunCoin.sol\":1931:1935  bool */\n      0x00\n        /* \"contracts/TunCoin.sol\":1944:1986  _transfer(_msgSender(), recipient, amount) */\n      tag_145\n        /* \"contracts/TunCoin.sol\":1954:1966  _msgSender() */\n      tag_146\n        /* \"contracts/TunCoin.sol\":1954:1964  _msgSender */\n      tag_97\n        /* \"contracts/TunCoin.sol\":1954:1966  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/TunCoin.sol\":1968:1977  recipient */\n      dup5\n        /* \"contracts/TunCoin.sol\":1979:1985  amount */\n      dup5\n        /* \"contracts/TunCoin.sol\":1944:1953  _transfer */\n      tag_102\n        /* \"contracts/TunCoin.sol\":1944:1986  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/TunCoin.sol\":2000:2004  true */\n      0x01\n        /* \"contracts/TunCoin.sol\":1993:2004  return true */\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":1851:2010  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":2064:2203  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n    tag_82:\n        /* \"contracts/TunCoin.sol\":2147:2154  uint256 */\n      0x00\n        /* \"contracts/TunCoin.sol\":2170:2181  _allowances */\n      0x02\n        /* \"contracts/TunCoin.sol\":2170:2188  _allowances[owner] */\n      0x00\n        /* \"contracts/TunCoin.sol\":2182:2187  owner */\n      dup5\n        /* \"contracts/TunCoin.sol\":2170:2188  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TunCoin.sol\":2170:2197  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/TunCoin.sol\":2189:2196  spender */\n      dup4\n        /* \"contracts/TunCoin.sol\":2170:2197  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TunCoin.sol\":2163:2197  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/TunCoin.sol\":2064:2203  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1927:2030  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_86:\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      tag_149\n        /* \"contracts/Ownable.sol\":1254:1264  _msgSender */\n      tag_97\n        /* \"contracts/Ownable.sol\":1254:1266  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1250  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1244:1266  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1236:1303  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_120\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/Ownable.sol\":1996:2024  _transferOwnership(newOwner) */\n      tag_153\n        /* \"contracts/Ownable.sol\":2015:2023  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1996:2014  _transferOwnership */\n      tag_154\n        /* \"contracts/Ownable.sol\":1996:2024  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/Ownable.sol\":1927:2030  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\n    tag_97:\n        /* \"contracts/Context.sol\":813:828  address payable */\n      0x00\n        /* \"contracts/Context.sol\":852:862  msg.sender */\n      caller\n        /* \"contracts/Context.sol\":837:863  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Context.sol\":768:869  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":7367:7687  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_98:\n        /* \"contracts/TunCoin.sol\":7474:7475  0 */\n      0x00\n        /* \"contracts/TunCoin.sol\":7457:7476  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TunCoin.sol\":7457:7462  owner */\n      dup4\n        /* \"contracts/TunCoin.sol\":7457:7476  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TunCoin.sol\":7449:7517  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/TunCoin.sol\":7551:7552  0 */\n      0x00\n        /* \"contracts/TunCoin.sol\":7532:7553  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TunCoin.sol\":7532:7539  spender */\n      dup3\n        /* \"contracts/TunCoin.sol\":7532:7553  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TunCoin.sol\":7524:7592  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/TunCoin.sol\":7631:7637  amount */\n      dup1\n        /* \"contracts/TunCoin.sol\":7601:7612  _allowances */\n      0x02\n        /* \"contracts/TunCoin.sol\":7601:7619  _allowances[owner] */\n      0x00\n        /* \"contracts/TunCoin.sol\":7613:7618  owner */\n      dup6\n        /* \"contracts/TunCoin.sol\":7601:7619  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TunCoin.sol\":7601:7628  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/TunCoin.sol\":7620:7627  spender */\n      dup5\n        /* \"contracts/TunCoin.sol\":7601:7628  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TunCoin.sol\":7601:7637  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TunCoin.sol\":7665:7672  spender */\n      dup2\n        /* \"contracts/TunCoin.sol\":7649:7681  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TunCoin.sol\":7658:7663  owner */\n      dup4\n        /* \"contracts/TunCoin.sol\":7649:7681  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/TunCoin.sol\":7674:7680  amount */\n      dup4\n        /* \"contracts/TunCoin.sol\":7649:7681  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TunCoin.sol\":7367:7687  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":5317:5766  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_102:\n        /* \"contracts/TunCoin.sol\":5429:5430  0 */\n      0x00\n        /* \"contracts/TunCoin.sol\":5411:5431  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TunCoin.sol\":5411:5417  sender */\n      dup4\n        /* \"contracts/TunCoin.sol\":5411:5431  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TunCoin.sol\":5403:5473  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/TunCoin.sol\":5509:5510  0 */\n      0x00\n        /* \"contracts/TunCoin.sol\":5488:5511  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TunCoin.sol\":5488:5497  recipient */\n      dup3\n        /* \"contracts/TunCoin.sol\":5488:5511  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TunCoin.sol\":5480:5551  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/TunCoin.sol\":5580:5651  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_171\n        /* \"contracts/TunCoin.sol\":5602:5608  amount */\n      dup2\n        /* \"contracts/TunCoin.sol\":5580:5651  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/TunCoin.sol\":5580:5589  _balances */\n      0x01\n        /* \"contracts/TunCoin.sol\":5580:5597  _balances[sender] */\n      0x00\n        /* \"contracts/TunCoin.sol\":5590:5596  sender */\n      dup8\n        /* \"contracts/TunCoin.sol\":5580:5597  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TunCoin.sol\":5580:5601  _balances[sender].sub */\n      tag_107\n      swap1\n        /* \"contracts/TunCoin.sol\":5580:5651  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/TunCoin.sol\":5560:5569  _balances */\n      0x01\n        /* \"contracts/TunCoin.sol\":5560:5577  _balances[sender] */\n      0x00\n        /* \"contracts/TunCoin.sol\":5570:5576  sender */\n      dup6\n        /* \"contracts/TunCoin.sol\":5560:5577  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TunCoin.sol\":5560:5651  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TunCoin.sol\":5681:5713  _balances[recipient].add(amount) */\n      tag_172\n        /* \"contracts/TunCoin.sol\":5706:5712  amount */\n      dup2\n        /* \"contracts/TunCoin.sol\":5681:5690  _balances */\n      0x01\n        /* \"contracts/TunCoin.sol\":5681:5701  _balances[recipient] */\n      0x00\n        /* \"contracts/TunCoin.sol\":5691:5700  recipient */\n      dup6\n        /* \"contracts/TunCoin.sol\":5681:5701  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TunCoin.sol\":5681:5705  _balances[recipient].add */\n      tag_114\n      swap1\n        /* \"contracts/TunCoin.sol\":5681:5713  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/TunCoin.sol\":5658:5667  _balances */\n      0x01\n        /* \"contracts/TunCoin.sol\":5658:5678  _balances[recipient] */\n      0x00\n        /* \"contracts/TunCoin.sol\":5668:5677  recipient */\n      dup5\n        /* \"contracts/TunCoin.sol\":5658:5678  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TunCoin.sol\":5658:5713  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TunCoin.sol\":5742:5751  recipient */\n      dup2\n        /* \"contracts/TunCoin.sol\":5725:5760  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TunCoin.sol\":5734:5740  sender */\n      dup4\n        /* \"contracts/TunCoin.sol\":5725:5760  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TunCoin.sol\":5753:5759  amount */\n      dup4\n        /* \"contracts/TunCoin.sol\":5725:5760  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TunCoin.sol\":5317:5766  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/SafeMath.sol\":1699:1877  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_107:\n        /* \"contracts/lib/SafeMath.sol\":1785:1792  uint256 */\n      0x00\n        /* \"contracts/lib/SafeMath.sol\":1814:1815  a */\n      dup4\n        /* \"contracts/lib/SafeMath.sol\":1809:1810  b */\n      dup4\n        /* \"contracts/lib/SafeMath.sol\":1809:1815  b <= a */\n      gt\n      iszero\n        /* \"contracts/lib/SafeMath.sol\":1817:1829  errorMessage */\n      dup3\n        /* \"contracts/lib/SafeMath.sol\":1801:1830  require(b <= a, errorMessage) */\n      swap1\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n      pop\n        /* \"contracts/lib/SafeMath.sol\":1837:1846  uint256 c */\n      0x00\n        /* \"contracts/lib/SafeMath.sol\":1853:1854  b */\n      dup4\n        /* \"contracts/lib/SafeMath.sol\":1849:1850  a */\n      dup6\n        /* \"contracts/lib/SafeMath.sol\":1849:1854  a - b */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/lib/SafeMath.sol\":1837:1854  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/lib/SafeMath.sol\":1870:1871  c */\n      dup1\n        /* \"contracts/lib/SafeMath.sol\":1863:1871  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/lib/SafeMath.sol\":1699:1877  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/SafeMath.sol\":872:1039  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_114:\n        /* \"contracts/lib/SafeMath.sol\":930:937  uint256 */\n      0x00\n        /* \"contracts/lib/SafeMath.sol\":946:955  uint256 c */\n      dup1\n        /* \"contracts/lib/SafeMath.sol\":962:963  b */\n      dup3\n        /* \"contracts/lib/SafeMath.sol\":958:959  a */\n      dup5\n        /* \"contracts/lib/SafeMath.sol\":958:963  a + b */\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"contracts/lib/SafeMath.sol\":946:963  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/lib/SafeMath.sol\":983:984  a */\n      dup4\n        /* \"contracts/lib/SafeMath.sol\":978:979  c */\n      dup2\n        /* \"contracts/lib/SafeMath.sol\":978:984  c >= a */\n      lt\n      iszero\n        /* \"contracts/lib/SafeMath.sol\":970:1016  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/lib/SafeMath.sol\":1032:1033  c */\n      dup1\n        /* \"contracts/lib/SafeMath.sol\":1025:1033  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/lib/SafeMath.sol\":872:1039  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TunCoin.sol\":6027:6317  function _mint(address account, uint256 amount) internal {\r... */\n    tag_138:\n        /* \"contracts/TunCoin.sol\":6118:6119  0 */\n      0x00\n        /* \"contracts/TunCoin.sol\":6099:6120  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TunCoin.sol\":6099:6106  account */\n      dup3\n        /* \"contracts/TunCoin.sol\":6099:6120  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TunCoin.sol\":6091:6156  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/TunCoin.sol\":6180:6204  _totalSupply.add(amount) */\n      tag_189\n        /* \"contracts/TunCoin.sol\":6197:6203  amount */\n      dup2\n        /* \"contracts/TunCoin.sol\":6180:6192  _totalSupply */\n      sload(0x03)\n        /* \"contracts/TunCoin.sol\":6180:6196  _totalSupply.add */\n      tag_114\n      swap1\n        /* \"contracts/TunCoin.sol\":6180:6204  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"contracts/TunCoin.sol\":6165:6177  _totalSupply */\n      0x03\n        /* \"contracts/TunCoin.sol\":6165:6204  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TunCoin.sol\":6232:6262  _balances[account].add(amount) */\n      tag_190\n        /* \"contracts/TunCoin.sol\":6255:6261  amount */\n      dup2\n        /* \"contracts/TunCoin.sol\":6232:6241  _balances */\n      0x01\n        /* \"contracts/TunCoin.sol\":6232:6250  _balances[account] */\n      0x00\n        /* \"contracts/TunCoin.sol\":6242:6249  account */\n      dup6\n        /* \"contracts/TunCoin.sol\":6232:6250  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TunCoin.sol\":6232:6254  _balances[account].add */\n      tag_114\n      swap1\n        /* \"contracts/TunCoin.sol\":6232:6262  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/TunCoin.sol\":6211:6220  _balances */\n      0x01\n        /* \"contracts/TunCoin.sol\":6211:6229  _balances[account] */\n      0x00\n        /* \"contracts/TunCoin.sol\":6221:6228  account */\n      dup5\n        /* \"contracts/TunCoin.sol\":6211:6229  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TunCoin.sol\":6211:6262  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TunCoin.sol\":6295:6302  account */\n      dup2\n        /* \"contracts/TunCoin.sol\":6274:6311  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TunCoin.sol\":6291:6292  0 */\n      0x00\n        /* \"contracts/TunCoin.sol\":6274:6311  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TunCoin.sol\":6304:6310  amount */\n      dup4\n        /* \"contracts/TunCoin.sol\":6274:6311  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_191\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TunCoin.sol\":6027:6317  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2128:2343  function _transferOwnership(address newOwner) internal {\r... */\n    tag_154:\n        /* \"contracts/Ownable.sol\":2218:2219  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":2198:2220  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2198:2206  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2198:2220  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":2190:2263  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/Ownable.sol\":2304:2312  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2275:2313  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2296:2302  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2275:2313  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":2329:2337  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2320:2326  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":2320:2337  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":2128:2343  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_197:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_199\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_201:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_203\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:559   */\n    tag_51:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_206:\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":489:542   */\n      tag_207\n        /* \"#utility.yul\":534:541   */\n      dup5\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup6\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_197\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:552   */\n      pop\n        /* \"#utility.yul\":363:559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:972   */\n    tag_81:\n        /* \"#utility.yul\":633:639   */\n      0x00\n        /* \"#utility.yul\":641:647   */\n      dup1\n        /* \"#utility.yul\":690:692   */\n      0x40\n        /* \"#utility.yul\":678:687   */\n      dup4\n        /* \"#utility.yul\":669:676   */\n      dup6\n        /* \"#utility.yul\":665:688   */\n      sub\n        /* \"#utility.yul\":661:693   */\n      slt\n        /* \"#utility.yul\":658:660   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":706:707   */\n      0x00\n        /* \"#utility.yul\":703:704   */\n      dup1\n        /* \"#utility.yul\":696:708   */\n      revert\n        /* \"#utility.yul\":658:660   */\n    tag_209:\n        /* \"#utility.yul\":749:750   */\n      0x00\n        /* \"#utility.yul\":774:827   */\n      tag_210\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":810:816   */\n      dup3\n        /* \"#utility.yul\":799:808   */\n      dup7\n        /* \"#utility.yul\":795:817   */\n      add\n        /* \"#utility.yul\":774:827   */\n      tag_197\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":764:827   */\n      swap3\n      pop\n        /* \"#utility.yul\":720:837   */\n      pop\n        /* \"#utility.yul\":876:878   */\n      0x20\n        /* \"#utility.yul\":902:955   */\n      tag_211\n        /* \"#utility.yul\":947:954   */\n      dup6\n        /* \"#utility.yul\":938:944   */\n      dup3\n        /* \"#utility.yul\":927:936   */\n      dup7\n        /* \"#utility.yul\":923:945   */\n      add\n        /* \"#utility.yul\":902:955   */\n      tag_197\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":892:955   */\n      swap2\n      pop\n        /* \"#utility.yul\":847:965   */\n      pop\n        /* \"#utility.yul\":648:972   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":978:1530   */\n    tag_38:\n        /* \"#utility.yul\":1055:1061   */\n      0x00\n        /* \"#utility.yul\":1063:1069   */\n      dup1\n        /* \"#utility.yul\":1071:1077   */\n      0x00\n        /* \"#utility.yul\":1120:1122   */\n      0x60\n        /* \"#utility.yul\":1108:1117   */\n      dup5\n        /* \"#utility.yul\":1099:1106   */\n      dup7\n        /* \"#utility.yul\":1095:1118   */\n      sub\n        /* \"#utility.yul\":1091:1123   */\n      slt\n        /* \"#utility.yul\":1088:1090   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1136:1137   */\n      0x00\n        /* \"#utility.yul\":1133:1134   */\n      dup1\n        /* \"#utility.yul\":1126:1138   */\n      revert\n        /* \"#utility.yul\":1088:1090   */\n    tag_213:\n        /* \"#utility.yul\":1179:1180   */\n      0x00\n        /* \"#utility.yul\":1204:1257   */\n      tag_214\n        /* \"#utility.yul\":1249:1256   */\n      dup7\n        /* \"#utility.yul\":1240:1246   */\n      dup3\n        /* \"#utility.yul\":1229:1238   */\n      dup8\n        /* \"#utility.yul\":1225:1247   */\n      add\n        /* \"#utility.yul\":1204:1257   */\n      tag_197\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1194:1257   */\n      swap4\n      pop\n        /* \"#utility.yul\":1150:1267   */\n      pop\n        /* \"#utility.yul\":1306:1308   */\n      0x20\n        /* \"#utility.yul\":1332:1385   */\n      tag_215\n        /* \"#utility.yul\":1377:1384   */\n      dup7\n        /* \"#utility.yul\":1368:1374   */\n      dup3\n        /* \"#utility.yul\":1357:1366   */\n      dup8\n        /* \"#utility.yul\":1353:1375   */\n      add\n        /* \"#utility.yul\":1332:1385   */\n      tag_197\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1322:1385   */\n      swap3\n      pop\n        /* \"#utility.yul\":1277:1395   */\n      pop\n        /* \"#utility.yul\":1434:1436   */\n      0x40\n        /* \"#utility.yul\":1460:1513   */\n      tag_216\n        /* \"#utility.yul\":1505:1512   */\n      dup7\n        /* \"#utility.yul\":1496:1502   */\n      dup3\n        /* \"#utility.yul\":1485:1494   */\n      dup8\n        /* \"#utility.yul\":1481:1503   */\n      add\n        /* \"#utility.yul\":1460:1513   */\n      tag_201\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1450:1513   */\n      swap2\n      pop\n        /* \"#utility.yul\":1405:1523   */\n      pop\n        /* \"#utility.yul\":1078:1530   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1536:1943   */\n    tag_28:\n        /* \"#utility.yul\":1604:1610   */\n      0x00\n        /* \"#utility.yul\":1612:1618   */\n      dup1\n        /* \"#utility.yul\":1661:1663   */\n      0x40\n        /* \"#utility.yul\":1649:1658   */\n      dup4\n        /* \"#utility.yul\":1640:1647   */\n      dup6\n        /* \"#utility.yul\":1636:1659   */\n      sub\n        /* \"#utility.yul\":1632:1664   */\n      slt\n        /* \"#utility.yul\":1629:1631   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1629:1631   */\n    tag_218:\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1745:1798   */\n      tag_219\n        /* \"#utility.yul\":1790:1797   */\n      dup6\n        /* \"#utility.yul\":1781:1787   */\n      dup3\n        /* \"#utility.yul\":1770:1779   */\n      dup7\n        /* \"#utility.yul\":1766:1788   */\n      add\n        /* \"#utility.yul\":1745:1798   */\n      tag_197\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1735:1798   */\n      swap3\n      pop\n        /* \"#utility.yul\":1691:1808   */\n      pop\n        /* \"#utility.yul\":1847:1849   */\n      0x20\n        /* \"#utility.yul\":1873:1926   */\n      tag_220\n        /* \"#utility.yul\":1918:1925   */\n      dup6\n        /* \"#utility.yul\":1909:1915   */\n      dup3\n        /* \"#utility.yul\":1898:1907   */\n      dup7\n        /* \"#utility.yul\":1894:1916   */\n      add\n        /* \"#utility.yul\":1873:1926   */\n      tag_201\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1863:1926   */\n      swap2\n      pop\n        /* \"#utility.yul\":1818:1936   */\n      pop\n        /* \"#utility.yul\":1619:1943   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2211   */\n    tag_68:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2057:2059   */\n      0x20\n        /* \"#utility.yul\":2045:2054   */\n      dup3\n        /* \"#utility.yul\":2036:2043   */\n      dup5\n        /* \"#utility.yul\":2032:2055   */\n      sub\n        /* \"#utility.yul\":2028:2060   */\n      slt\n        /* \"#utility.yul\":2025:2027   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":2073:2074   */\n      0x00\n        /* \"#utility.yul\":2070:2071   */\n      dup1\n        /* \"#utility.yul\":2063:2075   */\n      revert\n        /* \"#utility.yul\":2025:2027   */\n    tag_222:\n        /* \"#utility.yul\":2116:2117   */\n      0x00\n        /* \"#utility.yul\":2141:2194   */\n      tag_223\n        /* \"#utility.yul\":2186:2193   */\n      dup5\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup6\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_201\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2087:2204   */\n      pop\n        /* \"#utility.yul\":2015:2211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2335   */\n    tag_224:\n        /* \"#utility.yul\":2304:2328   */\n      tag_226\n        /* \"#utility.yul\":2322:2327   */\n      dup2\n        /* \"#utility.yul\":2304:2328   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2299:2302   */\n      dup3\n        /* \"#utility.yul\":2292:2329   */\n      mstore\n        /* \"#utility.yul\":2282:2335   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2341:2450   */\n    tag_228:\n        /* \"#utility.yul\":2422:2443   */\n      tag_230\n        /* \"#utility.yul\":2437:2442   */\n      dup2\n        /* \"#utility.yul\":2422:2443   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2417:2420   */\n      dup3\n        /* \"#utility.yul\":2410:2444   */\n      mstore\n        /* \"#utility.yul\":2400:2450   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:2820   */\n    tag_232:\n        /* \"#utility.yul\":2544:2547   */\n      0x00\n        /* \"#utility.yul\":2572:2611   */\n      tag_234\n        /* \"#utility.yul\":2605:2610   */\n      dup3\n        /* \"#utility.yul\":2572:2611   */\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2627:2698   */\n      tag_236\n        /* \"#utility.yul\":2691:2697   */\n      dup2\n        /* \"#utility.yul\":2686:2689   */\n      dup6\n        /* \"#utility.yul\":2627:2698   */\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2620:2698   */\n      swap4\n      pop\n        /* \"#utility.yul\":2707:2759   */\n      tag_238\n        /* \"#utility.yul\":2752:2758   */\n      dup2\n        /* \"#utility.yul\":2747:2750   */\n      dup6\n        /* \"#utility.yul\":2740:2744   */\n      0x20\n        /* \"#utility.yul\":2733:2738   */\n      dup7\n        /* \"#utility.yul\":2729:2745   */\n      add\n        /* \"#utility.yul\":2707:2759   */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2784:2813   */\n      tag_240\n        /* \"#utility.yul\":2806:2812   */\n      dup2\n        /* \"#utility.yul\":2784:2813   */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2779:2782   */\n      dup5\n        /* \"#utility.yul\":2775:2814   */\n      add\n        /* \"#utility.yul\":2768:2814   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2820   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:3192   */\n    tag_242:\n        /* \"#utility.yul\":2968:2971   */\n      0x00\n        /* \"#utility.yul\":2989:3056   */\n      tag_244\n        /* \"#utility.yul\":3053:3055   */\n      0x25\n        /* \"#utility.yul\":3048:3051   */\n      dup4\n        /* \"#utility.yul\":2989:3056   */\n      tag_237\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2982:3056   */\n      swap2\n      pop\n        /* \"#utility.yul\":3065:3158   */\n      tag_245\n        /* \"#utility.yul\":3154:3157   */\n      dup3\n        /* \"#utility.yul\":3065:3158   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3183:3185   */\n      0x40\n        /* \"#utility.yul\":3178:3181   */\n      dup3\n        /* \"#utility.yul\":3174:3186   */\n      add\n        /* \"#utility.yul\":3167:3186   */\n      swap1\n      pop\n        /* \"#utility.yul\":2972:3192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3198:3564   */\n    tag_247:\n        /* \"#utility.yul\":3340:3343   */\n      0x00\n        /* \"#utility.yul\":3361:3428   */\n      tag_249\n        /* \"#utility.yul\":3425:3427   */\n      0x24\n        /* \"#utility.yul\":3420:3423   */\n      dup4\n        /* \"#utility.yul\":3361:3428   */\n      tag_237\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3354:3428   */\n      swap2\n      pop\n        /* \"#utility.yul\":3437:3530   */\n      tag_250\n        /* \"#utility.yul\":3526:3529   */\n      dup3\n        /* \"#utility.yul\":3437:3530   */\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3555:3557   */\n      0x40\n        /* \"#utility.yul\":3550:3553   */\n      dup3\n        /* \"#utility.yul\":3546:3558   */\n      add\n        /* \"#utility.yul\":3539:3558   */\n      swap1\n      pop\n        /* \"#utility.yul\":3344:3564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3936   */\n    tag_252:\n        /* \"#utility.yul\":3712:3715   */\n      0x00\n        /* \"#utility.yul\":3733:3800   */\n      tag_254\n        /* \"#utility.yul\":3797:3799   */\n      0x26\n        /* \"#utility.yul\":3792:3795   */\n      dup4\n        /* \"#utility.yul\":3733:3800   */\n      tag_237\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3726:3800   */\n      swap2\n      pop\n        /* \"#utility.yul\":3809:3902   */\n      tag_255\n        /* \"#utility.yul\":3898:3901   */\n      dup3\n        /* \"#utility.yul\":3809:3902   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3927:3929   */\n      0x40\n        /* \"#utility.yul\":3922:3925   */\n      dup3\n        /* \"#utility.yul\":3918:3930   */\n      add\n        /* \"#utility.yul\":3911:3930   */\n      swap1\n      pop\n        /* \"#utility.yul\":3716:3936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3942:4308   */\n    tag_257:\n        /* \"#utility.yul\":4084:4087   */\n      0x00\n        /* \"#utility.yul\":4105:4172   */\n      tag_259\n        /* \"#utility.yul\":4169:4171   */\n      0x1b\n        /* \"#utility.yul\":4164:4167   */\n      dup4\n        /* \"#utility.yul\":4105:4172   */\n      tag_237\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4098:4172   */\n      swap2\n      pop\n        /* \"#utility.yul\":4181:4274   */\n      tag_260\n        /* \"#utility.yul\":4270:4273   */\n      dup3\n        /* \"#utility.yul\":4181:4274   */\n      tag_261\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4299:4301   */\n      0x20\n        /* \"#utility.yul\":4294:4297   */\n      dup3\n        /* \"#utility.yul\":4290:4302   */\n      add\n        /* \"#utility.yul\":4283:4302   */\n      swap1\n      pop\n        /* \"#utility.yul\":4088:4308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4314:4680   */\n    tag_262:\n        /* \"#utility.yul\":4456:4459   */\n      0x00\n        /* \"#utility.yul\":4477:4544   */\n      tag_264\n        /* \"#utility.yul\":4541:4543   */\n      0x1f\n        /* \"#utility.yul\":4536:4539   */\n      dup4\n        /* \"#utility.yul\":4477:4544   */\n      tag_237\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4470:4544   */\n      swap2\n      pop\n        /* \"#utility.yul\":4553:4646   */\n      tag_265\n        /* \"#utility.yul\":4642:4645   */\n      dup3\n        /* \"#utility.yul\":4553:4646   */\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4671:4673   */\n      0x20\n        /* \"#utility.yul\":4666:4669   */\n      dup3\n        /* \"#utility.yul\":4662:4674   */\n      add\n        /* \"#utility.yul\":4655:4674   */\n      swap1\n      pop\n        /* \"#utility.yul\":4460:4680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4686:5052   */\n    tag_267:\n        /* \"#utility.yul\":4828:4831   */\n      0x00\n        /* \"#utility.yul\":4849:4916   */\n      tag_269\n        /* \"#utility.yul\":4913:4915   */\n      0x20\n        /* \"#utility.yul\":4908:4911   */\n      dup4\n        /* \"#utility.yul\":4849:4916   */\n      tag_237\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4842:4916   */\n      swap2\n      pop\n        /* \"#utility.yul\":4925:5018   */\n      tag_270\n        /* \"#utility.yul\":5014:5017   */\n      dup3\n        /* \"#utility.yul\":4925:5018   */\n      tag_271\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5043:5045   */\n      0x20\n        /* \"#utility.yul\":5038:5041   */\n      dup3\n        /* \"#utility.yul\":5034:5046   */\n      add\n        /* \"#utility.yul\":5027:5046   */\n      swap1\n      pop\n        /* \"#utility.yul\":4832:5052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5058:5424   */\n    tag_272:\n        /* \"#utility.yul\":5200:5203   */\n      0x00\n        /* \"#utility.yul\":5221:5288   */\n      tag_274\n        /* \"#utility.yul\":5285:5287   */\n      0x23\n        /* \"#utility.yul\":5280:5283   */\n      dup4\n        /* \"#utility.yul\":5221:5288   */\n      tag_237\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5214:5288   */\n      swap2\n      pop\n        /* \"#utility.yul\":5297:5390   */\n      tag_275\n        /* \"#utility.yul\":5386:5389   */\n      dup3\n        /* \"#utility.yul\":5297:5390   */\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5415:5417   */\n      0x40\n        /* \"#utility.yul\":5410:5413   */\n      dup3\n        /* \"#utility.yul\":5406:5418   */\n      add\n        /* \"#utility.yul\":5399:5418   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:5796   */\n    tag_277:\n        /* \"#utility.yul\":5572:5575   */\n      0x00\n        /* \"#utility.yul\":5593:5660   */\n      tag_279\n        /* \"#utility.yul\":5657:5659   */\n      0x22\n        /* \"#utility.yul\":5652:5655   */\n      dup4\n        /* \"#utility.yul\":5593:5660   */\n      tag_237\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5586:5660   */\n      swap2\n      pop\n        /* \"#utility.yul\":5669:5762   */\n      tag_280\n        /* \"#utility.yul\":5758:5761   */\n      dup3\n        /* \"#utility.yul\":5669:5762   */\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5787:5789   */\n      0x40\n        /* \"#utility.yul\":5782:5785   */\n      dup3\n        /* \"#utility.yul\":5778:5790   */\n      add\n        /* \"#utility.yul\":5771:5790   */\n      swap1\n      pop\n        /* \"#utility.yul\":5576:5796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5802:5920   */\n    tag_282:\n        /* \"#utility.yul\":5889:5913   */\n      tag_284\n        /* \"#utility.yul\":5907:5912   */\n      dup2\n        /* \"#utility.yul\":5889:5913   */\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5884:5887   */\n      dup3\n        /* \"#utility.yul\":5877:5914   */\n      mstore\n        /* \"#utility.yul\":5867:5920   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5926:6038   */\n    tag_286:\n        /* \"#utility.yul\":6009:6031   */\n      tag_288\n        /* \"#utility.yul\":6025:6030   */\n      dup2\n        /* \"#utility.yul\":6009:6031   */\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6004:6007   */\n      dup3\n        /* \"#utility.yul\":5997:6032   */\n      mstore\n        /* \"#utility.yul\":5987:6038   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6044:6266   */\n    tag_59:\n        /* \"#utility.yul\":6137:6141   */\n      0x00\n        /* \"#utility.yul\":6175:6177   */\n      0x20\n        /* \"#utility.yul\":6164:6173   */\n      dup3\n        /* \"#utility.yul\":6160:6178   */\n      add\n        /* \"#utility.yul\":6152:6178   */\n      swap1\n      pop\n        /* \"#utility.yul\":6188:6259   */\n      tag_291\n        /* \"#utility.yul\":6256:6257   */\n      0x00\n        /* \"#utility.yul\":6245:6254   */\n      dup4\n        /* \"#utility.yul\":6241:6258   */\n      add\n        /* \"#utility.yul\":6232:6238   */\n      dup5\n        /* \"#utility.yul\":6188:6259   */\n      tag_224\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6142:6266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6272:6482   */\n    tag_31:\n        /* \"#utility.yul\":6359:6363   */\n      0x00\n        /* \"#utility.yul\":6397:6399   */\n      0x20\n        /* \"#utility.yul\":6386:6395   */\n      dup3\n        /* \"#utility.yul\":6382:6400   */\n      add\n        /* \"#utility.yul\":6374:6400   */\n      swap1\n      pop\n        /* \"#utility.yul\":6410:6475   */\n      tag_293\n        /* \"#utility.yul\":6472:6473   */\n      0x00\n        /* \"#utility.yul\":6461:6470   */\n      dup4\n        /* \"#utility.yul\":6457:6474   */\n      add\n        /* \"#utility.yul\":6448:6454   */\n      dup5\n        /* \"#utility.yul\":6410:6475   */\n      tag_228\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6364:6482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6488:6801   */\n    tag_25:\n        /* \"#utility.yul\":6601:6605   */\n      0x00\n        /* \"#utility.yul\":6639:6641   */\n      0x20\n        /* \"#utility.yul\":6628:6637   */\n      dup3\n        /* \"#utility.yul\":6624:6642   */\n      add\n        /* \"#utility.yul\":6616:6642   */\n      swap1\n      pop\n        /* \"#utility.yul\":6688:6697   */\n      dup2\n        /* \"#utility.yul\":6682:6686   */\n      dup2\n        /* \"#utility.yul\":6678:6698   */\n      sub\n        /* \"#utility.yul\":6674:6675   */\n      0x00\n        /* \"#utility.yul\":6663:6672   */\n      dup4\n        /* \"#utility.yul\":6659:6676   */\n      add\n        /* \"#utility.yul\":6652:6699   */\n      mstore\n        /* \"#utility.yul\":6716:6794   */\n      tag_295\n        /* \"#utility.yul\":6789:6793   */\n      dup2\n        /* \"#utility.yul\":6780:6786   */\n      dup5\n        /* \"#utility.yul\":6716:6794   */\n      tag_232\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":6708:6794   */\n      swap1\n      pop\n        /* \"#utility.yul\":6606:6801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6807:7226   */\n    tag_167:\n        /* \"#utility.yul\":6973:6977   */\n      0x00\n        /* \"#utility.yul\":7011:7013   */\n      0x20\n        /* \"#utility.yul\":7000:7009   */\n      dup3\n        /* \"#utility.yul\":6996:7014   */\n      add\n        /* \"#utility.yul\":6988:7014   */\n      swap1\n      pop\n        /* \"#utility.yul\":7060:7069   */\n      dup2\n        /* \"#utility.yul\":7054:7058   */\n      dup2\n        /* \"#utility.yul\":7050:7070   */\n      sub\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7035:7044   */\n      dup4\n        /* \"#utility.yul\":7031:7048   */\n      add\n        /* \"#utility.yul\":7024:7071   */\n      mstore\n        /* \"#utility.yul\":7088:7219   */\n      tag_297\n        /* \"#utility.yul\":7214:7218   */\n      dup2\n        /* \"#utility.yul\":7088:7219   */\n      tag_242\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":7080:7219   */\n      swap1\n      pop\n        /* \"#utility.yul\":6978:7226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7232:7651   */\n    tag_159:\n        /* \"#utility.yul\":7398:7402   */\n      0x00\n        /* \"#utility.yul\":7436:7438   */\n      0x20\n        /* \"#utility.yul\":7425:7434   */\n      dup3\n        /* \"#utility.yul\":7421:7439   */\n      add\n        /* \"#utility.yul\":7413:7439   */\n      swap1\n      pop\n        /* \"#utility.yul\":7485:7494   */\n      dup2\n        /* \"#utility.yul\":7479:7483   */\n      dup2\n        /* \"#utility.yul\":7475:7495   */\n      sub\n        /* \"#utility.yul\":7471:7472   */\n      0x00\n        /* \"#utility.yul\":7460:7469   */\n      dup4\n        /* \"#utility.yul\":7456:7473   */\n      add\n        /* \"#utility.yul\":7449:7496   */\n      mstore\n        /* \"#utility.yul\":7513:7644   */\n      tag_299\n        /* \"#utility.yul\":7639:7643   */\n      dup2\n        /* \"#utility.yul\":7513:7644   */\n      tag_247\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7505:7644   */\n      swap1\n      pop\n        /* \"#utility.yul\":7403:7651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7657:8076   */\n    tag_195:\n        /* \"#utility.yul\":7823:7827   */\n      0x00\n        /* \"#utility.yul\":7861:7863   */\n      0x20\n        /* \"#utility.yul\":7850:7859   */\n      dup3\n        /* \"#utility.yul\":7846:7864   */\n      add\n        /* \"#utility.yul\":7838:7864   */\n      swap1\n      pop\n        /* \"#utility.yul\":7910:7919   */\n      dup2\n        /* \"#utility.yul\":7904:7908   */\n      dup2\n        /* \"#utility.yul\":7900:7920   */\n      sub\n        /* \"#utility.yul\":7896:7897   */\n      0x00\n        /* \"#utility.yul\":7885:7894   */\n      dup4\n        /* \"#utility.yul\":7881:7898   */\n      add\n        /* \"#utility.yul\":7874:7921   */\n      mstore\n        /* \"#utility.yul\":7938:8069   */\n      tag_301\n        /* \"#utility.yul\":8064:8068   */\n      dup2\n        /* \"#utility.yul\":7938:8069   */\n      tag_252\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7930:8069   */\n      swap1\n      pop\n        /* \"#utility.yul\":7828:8076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8082:8501   */\n    tag_184:\n        /* \"#utility.yul\":8248:8252   */\n      0x00\n        /* \"#utility.yul\":8286:8288   */\n      0x20\n        /* \"#utility.yul\":8275:8284   */\n      dup3\n        /* \"#utility.yul\":8271:8289   */\n      add\n        /* \"#utility.yul\":8263:8289   */\n      swap1\n      pop\n        /* \"#utility.yul\":8335:8344   */\n      dup2\n        /* \"#utility.yul\":8329:8333   */\n      dup2\n        /* \"#utility.yul\":8325:8345   */\n      sub\n        /* \"#utility.yul\":8321:8322   */\n      0x00\n        /* \"#utility.yul\":8310:8319   */\n      dup4\n        /* \"#utility.yul\":8306:8323   */\n      add\n        /* \"#utility.yul\":8299:8346   */\n      mstore\n        /* \"#utility.yul\":8363:8494   */\n      tag_303\n        /* \"#utility.yul\":8489:8493   */\n      dup2\n        /* \"#utility.yul\":8363:8494   */\n      tag_257\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":8355:8494   */\n      swap1\n      pop\n        /* \"#utility.yul\":8253:8501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8507:8926   */\n    tag_188:\n        /* \"#utility.yul\":8673:8677   */\n      0x00\n        /* \"#utility.yul\":8711:8713   */\n      0x20\n        /* \"#utility.yul\":8700:8709   */\n      dup3\n        /* \"#utility.yul\":8696:8714   */\n      add\n        /* \"#utility.yul\":8688:8714   */\n      swap1\n      pop\n        /* \"#utility.yul\":8760:8769   */\n      dup2\n        /* \"#utility.yul\":8754:8758   */\n      dup2\n        /* \"#utility.yul\":8750:8770   */\n      sub\n        /* \"#utility.yul\":8746:8747   */\n      0x00\n        /* \"#utility.yul\":8735:8744   */\n      dup4\n        /* \"#utility.yul\":8731:8748   */\n      add\n        /* \"#utility.yul\":8724:8771   */\n      mstore\n        /* \"#utility.yul\":8788:8919   */\n      tag_305\n        /* \"#utility.yul\":8914:8918   */\n      dup2\n        /* \"#utility.yul\":8788:8919   */\n      tag_262\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":8780:8919   */\n      swap1\n      pop\n        /* \"#utility.yul\":8678:8926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8932:9351   */\n    tag_120:\n        /* \"#utility.yul\":9098:9102   */\n      0x00\n        /* \"#utility.yul\":9136:9138   */\n      0x20\n        /* \"#utility.yul\":9125:9134   */\n      dup3\n        /* \"#utility.yul\":9121:9139   */\n      add\n        /* \"#utility.yul\":9113:9139   */\n      swap1\n      pop\n        /* \"#utility.yul\":9185:9194   */\n      dup2\n        /* \"#utility.yul\":9179:9183   */\n      dup2\n        /* \"#utility.yul\":9175:9195   */\n      sub\n        /* \"#utility.yul\":9171:9172   */\n      0x00\n        /* \"#utility.yul\":9160:9169   */\n      dup4\n        /* \"#utility.yul\":9156:9173   */\n      add\n        /* \"#utility.yul\":9149:9196   */\n      mstore\n        /* \"#utility.yul\":9213:9344   */\n      tag_307\n        /* \"#utility.yul\":9339:9343   */\n      dup2\n        /* \"#utility.yul\":9213:9344   */\n      tag_267\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9205:9344   */\n      swap1\n      pop\n        /* \"#utility.yul\":9103:9351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9357:9776   */\n    tag_170:\n        /* \"#utility.yul\":9523:9527   */\n      0x00\n        /* \"#utility.yul\":9561:9563   */\n      0x20\n        /* \"#utility.yul\":9550:9559   */\n      dup3\n        /* \"#utility.yul\":9546:9564   */\n      add\n        /* \"#utility.yul\":9538:9564   */\n      swap1\n      pop\n        /* \"#utility.yul\":9610:9619   */\n      dup2\n        /* \"#utility.yul\":9604:9608   */\n      dup2\n        /* \"#utility.yul\":9600:9620   */\n      sub\n        /* \"#utility.yul\":9596:9597   */\n      0x00\n        /* \"#utility.yul\":9585:9594   */\n      dup4\n        /* \"#utility.yul\":9581:9598   */\n      add\n        /* \"#utility.yul\":9574:9621   */\n      mstore\n        /* \"#utility.yul\":9638:9769   */\n      tag_309\n        /* \"#utility.yul\":9764:9768   */\n      dup2\n        /* \"#utility.yul\":9638:9769   */\n      tag_272\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":9630:9769   */\n      swap1\n      pop\n        /* \"#utility.yul\":9528:9776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9782:10201   */\n    tag_162:\n        /* \"#utility.yul\":9948:9952   */\n      0x00\n        /* \"#utility.yul\":9986:9988   */\n      0x20\n        /* \"#utility.yul\":9975:9984   */\n      dup3\n        /* \"#utility.yul\":9971:9989   */\n      add\n        /* \"#utility.yul\":9963:9989   */\n      swap1\n      pop\n        /* \"#utility.yul\":10035:10044   */\n      dup2\n        /* \"#utility.yul\":10029:10033   */\n      dup2\n        /* \"#utility.yul\":10025:10045   */\n      sub\n        /* \"#utility.yul\":10021:10022   */\n      0x00\n        /* \"#utility.yul\":10010:10019   */\n      dup4\n        /* \"#utility.yul\":10006:10023   */\n      add\n        /* \"#utility.yul\":9999:10046   */\n      mstore\n        /* \"#utility.yul\":10063:10194   */\n      tag_311\n        /* \"#utility.yul\":10189:10193   */\n      dup2\n        /* \"#utility.yul\":10063:10194   */\n      tag_277\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10055:10194   */\n      swap1\n      pop\n        /* \"#utility.yul\":9953:10201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10207:10429   */\n    tag_35:\n        /* \"#utility.yul\":10300:10304   */\n      0x00\n        /* \"#utility.yul\":10338:10340   */\n      0x20\n        /* \"#utility.yul\":10327:10336   */\n      dup3\n        /* \"#utility.yul\":10323:10341   */\n      add\n        /* \"#utility.yul\":10315:10341   */\n      swap1\n      pop\n        /* \"#utility.yul\":10351:10422   */\n      tag_313\n        /* \"#utility.yul\":10419:10420   */\n      0x00\n        /* \"#utility.yul\":10408:10417   */\n      dup4\n        /* \"#utility.yul\":10404:10421   */\n      add\n        /* \"#utility.yul\":10395:10401   */\n      dup5\n        /* \"#utility.yul\":10351:10422   */\n      tag_282\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":10305:10429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10435:10649   */\n    tag_44:\n        /* \"#utility.yul\":10524:10528   */\n      0x00\n        /* \"#utility.yul\":10562:10564   */\n      0x20\n        /* \"#utility.yul\":10551:10560   */\n      dup3\n        /* \"#utility.yul\":10547:10565   */\n      add\n        /* \"#utility.yul\":10539:10565   */\n      swap1\n      pop\n        /* \"#utility.yul\":10575:10642   */\n      tag_315\n        /* \"#utility.yul\":10639:10640   */\n      0x00\n        /* \"#utility.yul\":10628:10637   */\n      dup4\n        /* \"#utility.yul\":10624:10641   */\n      add\n        /* \"#utility.yul\":10615:10621   */\n      dup5\n        /* \"#utility.yul\":10575:10642   */\n      tag_286\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":10529:10649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10655:10754   */\n    tag_235:\n        /* \"#utility.yul\":10707:10713   */\n      0x00\n        /* \"#utility.yul\":10741:10746   */\n      dup2\n        /* \"#utility.yul\":10735:10747   */\n      mload\n        /* \"#utility.yul\":10725:10747   */\n      swap1\n      pop\n        /* \"#utility.yul\":10714:10754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10760:10929   */\n    tag_237:\n        /* \"#utility.yul\":10844:10855   */\n      0x00\n        /* \"#utility.yul\":10878:10884   */\n      dup3\n        /* \"#utility.yul\":10873:10876   */\n      dup3\n        /* \"#utility.yul\":10866:10885   */\n      mstore\n        /* \"#utility.yul\":10918:10922   */\n      0x20\n        /* \"#utility.yul\":10913:10916   */\n      dup3\n        /* \"#utility.yul\":10909:10923   */\n      add\n        /* \"#utility.yul\":10894:10923   */\n      swap1\n      pop\n        /* \"#utility.yul\":10856:10929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10935:11240   */\n    tag_181:\n        /* \"#utility.yul\":10975:10978   */\n      0x00\n        /* \"#utility.yul\":10994:11014   */\n      tag_319\n        /* \"#utility.yul\":11012:11013   */\n      dup3\n        /* \"#utility.yul\":10994:11014   */\n      tag_285\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":10989:11014   */\n      swap2\n      pop\n        /* \"#utility.yul\":11028:11048   */\n      tag_320\n        /* \"#utility.yul\":11046:11047   */\n      dup4\n        /* \"#utility.yul\":11028:11048   */\n      tag_285\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":11023:11048   */\n      swap3\n      pop\n        /* \"#utility.yul\":11182:11183   */\n      dup3\n        /* \"#utility.yul\":11114:11180   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11110:11184   */\n      sub\n        /* \"#utility.yul\":11107:11108   */\n      dup3\n        /* \"#utility.yul\":11104:11185   */\n      gt\n        /* \"#utility.yul\":11101:11103   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":11188:11206   */\n      tag_322\n      tag_323\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":11101:11103   */\n    tag_321:\n        /* \"#utility.yul\":11232:11233   */\n      dup3\n        /* \"#utility.yul\":11229:11230   */\n      dup3\n        /* \"#utility.yul\":11225:11234   */\n      add\n        /* \"#utility.yul\":11218:11234   */\n      swap1\n      pop\n        /* \"#utility.yul\":10979:11240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11246:11437   */\n    tag_178:\n        /* \"#utility.yul\":11286:11290   */\n      0x00\n        /* \"#utility.yul\":11306:11326   */\n      tag_325\n        /* \"#utility.yul\":11324:11325   */\n      dup3\n        /* \"#utility.yul\":11306:11326   */\n      tag_285\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":11301:11326   */\n      swap2\n      pop\n        /* \"#utility.yul\":11340:11360   */\n      tag_326\n        /* \"#utility.yul\":11358:11359   */\n      dup4\n        /* \"#utility.yul\":11340:11360   */\n      tag_285\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":11335:11360   */\n      swap3\n      pop\n        /* \"#utility.yul\":11379:11380   */\n      dup3\n        /* \"#utility.yul\":11376:11377   */\n      dup3\n        /* \"#utility.yul\":11373:11381   */\n      lt\n        /* \"#utility.yul\":11370:11372   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":11384:11402   */\n      tag_328\n      tag_323\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":11370:11372   */\n    tag_327:\n        /* \"#utility.yul\":11429:11430   */\n      dup3\n        /* \"#utility.yul\":11426:11427   */\n      dup3\n        /* \"#utility.yul\":11422:11431   */\n      sub\n        /* \"#utility.yul\":11414:11431   */\n      swap1\n      pop\n        /* \"#utility.yul\":11291:11437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11443:11539   */\n    tag_227:\n        /* \"#utility.yul\":11480:11487   */\n      0x00\n        /* \"#utility.yul\":11509:11533   */\n      tag_330\n        /* \"#utility.yul\":11527:11532   */\n      dup3\n        /* \"#utility.yul\":11509:11533   */\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":11498:11533   */\n      swap1\n      pop\n        /* \"#utility.yul\":11488:11539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11545:11635   */\n    tag_231:\n        /* \"#utility.yul\":11579:11586   */\n      0x00\n        /* \"#utility.yul\":11622:11627   */\n      dup2\n        /* \"#utility.yul\":11615:11628   */\n      iszero\n        /* \"#utility.yul\":11608:11629   */\n      iszero\n        /* \"#utility.yul\":11597:11629   */\n      swap1\n      pop\n        /* \"#utility.yul\":11587:11635   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11641:11767   */\n    tag_331:\n        /* \"#utility.yul\":11678:11685   */\n      0x00\n        /* \"#utility.yul\":11718:11760   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11711:11716   */\n      dup3\n        /* \"#utility.yul\":11707:11761   */\n      and\n        /* \"#utility.yul\":11696:11761   */\n      swap1\n      pop\n        /* \"#utility.yul\":11686:11767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11773:11850   */\n    tag_285:\n        /* \"#utility.yul\":11810:11817   */\n      0x00\n        /* \"#utility.yul\":11839:11844   */\n      dup2\n        /* \"#utility.yul\":11828:11844   */\n      swap1\n      pop\n        /* \"#utility.yul\":11818:11850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11856:11942   */\n    tag_289:\n        /* \"#utility.yul\":11891:11898   */\n      0x00\n        /* \"#utility.yul\":11931:11935   */\n      0xff\n        /* \"#utility.yul\":11924:11929   */\n      dup3\n        /* \"#utility.yul\":11920:11936   */\n      and\n        /* \"#utility.yul\":11909:11936   */\n      swap1\n      pop\n        /* \"#utility.yul\":11899:11942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11948:12255   */\n    tag_239:\n        /* \"#utility.yul\":12016:12017   */\n      0x00\n        /* \"#utility.yul\":12026:12139   */\n    tag_337:\n        /* \"#utility.yul\":12040:12046   */\n      dup4\n        /* \"#utility.yul\":12037:12038   */\n      dup2\n        /* \"#utility.yul\":12034:12047   */\n      lt\n        /* \"#utility.yul\":12026:12139   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":12125:12126   */\n      dup1\n        /* \"#utility.yul\":12120:12123   */\n      dup3\n        /* \"#utility.yul\":12116:12127   */\n      add\n        /* \"#utility.yul\":12110:12128   */\n      mload\n        /* \"#utility.yul\":12106:12107   */\n      dup2\n        /* \"#utility.yul\":12101:12104   */\n      dup5\n        /* \"#utility.yul\":12097:12108   */\n      add\n        /* \"#utility.yul\":12090:12129   */\n      mstore\n        /* \"#utility.yul\":12062:12064   */\n      0x20\n        /* \"#utility.yul\":12059:12060   */\n      dup2\n        /* \"#utility.yul\":12055:12065   */\n      add\n        /* \"#utility.yul\":12050:12065   */\n      swap1\n      pop\n        /* \"#utility.yul\":12026:12139   */\n      jump(tag_337)\n    tag_339:\n        /* \"#utility.yul\":12157:12163   */\n      dup4\n        /* \"#utility.yul\":12154:12155   */\n      dup2\n        /* \"#utility.yul\":12151:12164   */\n      gt\n        /* \"#utility.yul\":12148:12150   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":12237:12238   */\n      0x00\n        /* \"#utility.yul\":12228:12234   */\n      dup5\n        /* \"#utility.yul\":12223:12226   */\n      dup5\n        /* \"#utility.yul\":12219:12235   */\n      add\n        /* \"#utility.yul\":12212:12239   */\n      mstore\n        /* \"#utility.yul\":12148:12150   */\n    tag_340:\n        /* \"#utility.yul\":11997:12255   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12261:12581   */\n    tag_89:\n        /* \"#utility.yul\":12305:12311   */\n      0x00\n        /* \"#utility.yul\":12342:12343   */\n      0x02\n        /* \"#utility.yul\":12336:12340   */\n      dup3\n        /* \"#utility.yul\":12332:12344   */\n      div\n        /* \"#utility.yul\":12322:12344   */\n      swap1\n      pop\n        /* \"#utility.yul\":12389:12390   */\n      0x01\n        /* \"#utility.yul\":12383:12387   */\n      dup3\n        /* \"#utility.yul\":12379:12391   */\n      and\n        /* \"#utility.yul\":12410:12428   */\n      dup1\n        /* \"#utility.yul\":12400:12402   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":12466:12470   */\n      0x7f\n        /* \"#utility.yul\":12458:12464   */\n      dup3\n        /* \"#utility.yul\":12454:12471   */\n      and\n        /* \"#utility.yul\":12444:12471   */\n      swap2\n      pop\n        /* \"#utility.yul\":12400:12402   */\n    tag_342:\n        /* \"#utility.yul\":12528:12530   */\n      0x20\n        /* \"#utility.yul\":12520:12526   */\n      dup3\n        /* \"#utility.yul\":12517:12531   */\n      lt\n        /* \"#utility.yul\":12497:12515   */\n      dup2\n        /* \"#utility.yul\":12494:12532   */\n      eq\n        /* \"#utility.yul\":12491:12493   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":12547:12565   */\n      tag_344\n      tag_345\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":12491:12493   */\n    tag_343:\n        /* \"#utility.yul\":12312:12581   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12587:12767   */\n    tag_323:\n        /* \"#utility.yul\":12635:12712   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12632:12633   */\n      0x00\n        /* \"#utility.yul\":12625:12713   */\n      mstore\n        /* \"#utility.yul\":12732:12736   */\n      0x11\n        /* \"#utility.yul\":12729:12730   */\n      0x04\n        /* \"#utility.yul\":12722:12737   */\n      mstore\n        /* \"#utility.yul\":12756:12760   */\n      0x24\n        /* \"#utility.yul\":12753:12754   */\n      0x00\n        /* \"#utility.yul\":12746:12761   */\n      revert\n        /* \"#utility.yul\":12773:12953   */\n    tag_345:\n        /* \"#utility.yul\":12821:12898   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12818:12819   */\n      0x00\n        /* \"#utility.yul\":12811:12899   */\n      mstore\n        /* \"#utility.yul\":12918:12922   */\n      0x22\n        /* \"#utility.yul\":12915:12916   */\n      0x04\n        /* \"#utility.yul\":12908:12923   */\n      mstore\n        /* \"#utility.yul\":12942:12946   */\n      0x24\n        /* \"#utility.yul\":12939:12940   */\n      0x00\n        /* \"#utility.yul\":12932:12947   */\n      revert\n        /* \"#utility.yul\":12959:13061   */\n    tag_241:\n        /* \"#utility.yul\":13000:13006   */\n      0x00\n        /* \"#utility.yul\":13051:13053   */\n      0x1f\n        /* \"#utility.yul\":13047:13054   */\n      not\n        /* \"#utility.yul\":13042:13044   */\n      0x1f\n        /* \"#utility.yul\":13035:13040   */\n      dup4\n        /* \"#utility.yul\":13031:13045   */\n      add\n        /* \"#utility.yul\":13027:13055   */\n      and\n        /* \"#utility.yul\":13017:13055   */\n      swap1\n      pop\n        /* \"#utility.yul\":13007:13061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13067:13291   */\n    tag_246:\n        /* \"#utility.yul\":13207:13241   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13203:13204   */\n      0x00\n        /* \"#utility.yul\":13195:13201   */\n      dup3\n        /* \"#utility.yul\":13191:13205   */\n      add\n        /* \"#utility.yul\":13184:13242   */\n      mstore\n        /* \"#utility.yul\":13276:13283   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13271:13273   */\n      0x20\n        /* \"#utility.yul\":13263:13269   */\n      dup3\n        /* \"#utility.yul\":13259:13274   */\n      add\n        /* \"#utility.yul\":13252:13284   */\n      mstore\n        /* \"#utility.yul\":13173:13291   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13297:13520   */\n    tag_251:\n        /* \"#utility.yul\":13437:13471   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":13433:13434   */\n      0x00\n        /* \"#utility.yul\":13425:13431   */\n      dup3\n        /* \"#utility.yul\":13421:13435   */\n      add\n        /* \"#utility.yul\":13414:13472   */\n      mstore\n        /* \"#utility.yul\":13506:13512   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13501:13503   */\n      0x20\n        /* \"#utility.yul\":13493:13499   */\n      dup3\n        /* \"#utility.yul\":13489:13504   */\n      add\n        /* \"#utility.yul\":13482:13513   */\n      mstore\n        /* \"#utility.yul\":13403:13520   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13526:13751   */\n    tag_256:\n        /* \"#utility.yul\":13666:13700   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13662:13663   */\n      0x00\n        /* \"#utility.yul\":13654:13660   */\n      dup3\n        /* \"#utility.yul\":13650:13664   */\n      add\n        /* \"#utility.yul\":13643:13701   */\n      mstore\n        /* \"#utility.yul\":13735:13743   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13730:13732   */\n      0x20\n        /* \"#utility.yul\":13722:13728   */\n      dup3\n        /* \"#utility.yul\":13718:13733   */\n      add\n        /* \"#utility.yul\":13711:13744   */\n      mstore\n        /* \"#utility.yul\":13632:13751   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13757:13934   */\n    tag_261:\n        /* \"#utility.yul\":13897:13926   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":13893:13894   */\n      0x00\n        /* \"#utility.yul\":13885:13891   */\n      dup3\n        /* \"#utility.yul\":13881:13895   */\n      add\n        /* \"#utility.yul\":13874:13927   */\n      mstore\n        /* \"#utility.yul\":13863:13934   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13940:14121   */\n    tag_266:\n        /* \"#utility.yul\":14080:14113   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":14076:14077   */\n      0x00\n        /* \"#utility.yul\":14068:14074   */\n      dup3\n        /* \"#utility.yul\":14064:14078   */\n      add\n        /* \"#utility.yul\":14057:14114   */\n      mstore\n        /* \"#utility.yul\":14046:14121   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14127:14309   */\n    tag_271:\n        /* \"#utility.yul\":14267:14301   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14263:14264   */\n      0x00\n        /* \"#utility.yul\":14255:14261   */\n      dup3\n        /* \"#utility.yul\":14251:14265   */\n      add\n        /* \"#utility.yul\":14244:14302   */\n      mstore\n        /* \"#utility.yul\":14233:14309   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14315:14537   */\n    tag_276:\n        /* \"#utility.yul\":14455:14489   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":14451:14452   */\n      0x00\n        /* \"#utility.yul\":14443:14449   */\n      dup3\n        /* \"#utility.yul\":14439:14453   */\n      add\n        /* \"#utility.yul\":14432:14490   */\n      mstore\n        /* \"#utility.yul\":14524:14529   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14519:14521   */\n      0x20\n        /* \"#utility.yul\":14511:14517   */\n      dup3\n        /* \"#utility.yul\":14507:14522   */\n      add\n        /* \"#utility.yul\":14500:14530   */\n      mstore\n        /* \"#utility.yul\":14421:14537   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14543:14764   */\n    tag_281:\n        /* \"#utility.yul\":14683:14717   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":14679:14680   */\n      0x00\n        /* \"#utility.yul\":14671:14677   */\n      dup3\n        /* \"#utility.yul\":14667:14681   */\n      add\n        /* \"#utility.yul\":14660:14718   */\n      mstore\n        /* \"#utility.yul\":14752:14756   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14747:14749   */\n      0x20\n        /* \"#utility.yul\":14739:14745   */\n      dup3\n        /* \"#utility.yul\":14735:14750   */\n      add\n        /* \"#utility.yul\":14728:14757   */\n      mstore\n        /* \"#utility.yul\":14649:14764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14770:14892   */\n    tag_200:\n        /* \"#utility.yul\":14843:14867   */\n      tag_358\n        /* \"#utility.yul\":14861:14866   */\n      dup2\n        /* \"#utility.yul\":14843:14867   */\n      tag_227\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":14836:14841   */\n      dup2\n        /* \"#utility.yul\":14833:14868   */\n      eq\n        /* \"#utility.yul\":14823:14825   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":14882:14883   */\n      0x00\n        /* \"#utility.yul\":14879:14880   */\n      dup1\n        /* \"#utility.yul\":14872:14884   */\n      revert\n        /* \"#utility.yul\":14823:14825   */\n    tag_359:\n        /* \"#utility.yul\":14813:14892   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14898:15020   */\n    tag_204:\n        /* \"#utility.yul\":14971:14995   */\n      tag_361\n        /* \"#utility.yul\":14989:14994   */\n      dup2\n        /* \"#utility.yul\":14971:14995   */\n      tag_285\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":14964:14969   */\n      dup2\n        /* \"#utility.yul\":14961:14996   */\n      eq\n        /* \"#utility.yul\":14951:14953   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":15010:15011   */\n      0x00\n        /* \"#utility.yul\":15007:15008   */\n      dup1\n        /* \"#utility.yul\":15000:15012   */\n      revert\n        /* \"#utility.yul\":14951:14953   */\n    tag_362:\n        /* \"#utility.yul\":14941:15020   */\n      pop\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220dc65b967301ad8d81a9fb04c5d8868f7ea0558baed8deb26ac56e6b00e3badc464736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:951:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:5",
														"type": ""
													}
												],
												"src": "7:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:5",
														"type": ""
													}
												],
												"src": "131:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:5",
														"type": ""
													}
												],
												"src": "359:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "503:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "517:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "523:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "564:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "560:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "538:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "611:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "625:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "639:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "647:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "635:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "635:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "625:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "591:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "584:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:26:5"
															},
															"nodeType": "YulIf",
															"src": "581:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "714:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "728:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "728:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "728:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "678:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "701:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "709:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "698:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "698:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "675:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:38:5"
															},
															"nodeType": "YulIf",
															"src": "672:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "477:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "486:6:5",
														"type": ""
													}
												],
												"src": "442:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "806:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "910:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "903:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "768:180:5"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200024260201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600781526020017f54554e434f494e00000000000000000000000000000000000000000000000000815250600690805190602001906200010f9291906200024a565b506040518060400160405280600381526020017f54554e0000000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d9291906200024a565b506012600460006101000a81548160ff021916908360ff1602179055506a19fc94c2d06261e0180000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040516200023491906200030b565b60405180910390a362000397565b600033905090565b828054620002589062000332565b90600052602060002090601f0160209004810192826200027c5760008555620002c8565b82601f106200029757805160ff1916838001178555620002c8565b82800160010185558215620002c8579182015b82811115620002c7578251825591602001919060010190620002aa565b5b509050620002d79190620002db565b5090565b5b80821115620002f6576000816000905550600101620002dc565b5090565b620003058162000328565b82525050565b6000602082019050620003226000830184620002fa565b92915050565b6000819050919050565b600060028204905060018216806200034b57607f821691505b6020821081141562000362576200036162000368565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b611bca80620003a76000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102b3578063a9059cbb146102e3578063dd62ed3e14610313578063f2fde38b1461034357610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a0712d681461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a91906115c6565b60405180910390f35b61013d6004803603810190610138919061139e565b6103f1565b60405161014a91906115ab565b60405180910390f35b61015b61040f565b60405161016891906116e8565b60405180910390f35b61018b6004803603810190610186919061134f565b610419565b60405161019891906115ab565b60405180910390f35b6101a96104f2565b6040516101b69190611703565b60405180910390f35b6101d960048036038101906101d4919061139e565b610509565b6040516101e691906115ab565b60405180910390f35b610209600480360381019061020491906112ea565b6105bc565b60405161021691906116e8565b60405180910390f35b610227610605565b005b610231610758565b60405161023e9190611590565b60405180910390f35b61024f610767565b60405161025c9190611590565b60405180910390f35b61026d610790565b60405161027a91906115c6565b60405180910390f35b61029d600480360381019061029891906113da565b610822565b6040516102aa91906115ab565b60405180910390f35b6102cd60048036038101906102c8919061139e565b6108d3565b6040516102da91906115ab565b60405180910390f35b6102fd60048036038101906102f8919061139e565b6109a0565b60405161030a91906115ab565b60405180910390f35b61032d60048036038101906103289190611313565b6109be565b60405161033a91906116e8565b60405180910390f35b61035d600480360381019061035891906112ea565b610a45565b005b60606006805461036e9061184c565b80601f016020809104026020016040519081016040528092919081815260200182805461039a9061184c565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006104056103fe610ae6565b8484610aee565b6001905092915050565b6000600354905090565b6000610426848484610cb9565b6104e784610432610ae6565b6104e285604051806060016040528060288152602001611b2260289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610498610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006105b2610516610ae6565b846105ad8560026000610527610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b610aee565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069190611688565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610762610767565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461079f9061184c565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb9061184c565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b5050505050905090565b600061082c610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090611688565b60405180910390fd5b6108ca6108c4610ae6565b83611009565b60019050919050565b60006109966108e0610ae6565b8461099185604051806060016040528060258152602001611b70602591396002600061090a610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b6001905092915050565b60006109b46109ad610ae6565b8484610cb9565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a4d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad190611688565b60405180910390fd5b610ae381611193565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5590611608565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc5906116c8565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610cac91906116e8565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d20906115e8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d90906116a8565b60405180910390fd5b610e0581604051806060016040528060268152602001611b4a60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f3a91906116e8565b60405180910390a3505050565b6000838311158290610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8691906115c6565b60405180910390fd5b5060008385610f9e9190611790565b9050809150509392505050565b6000808284610fba919061173a565b905083811015610fff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff690611648565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107090611668565b60405180910390fd5b61108e81600354610fab90919063ffffffff16565b6003819055506110e681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161118791906116e8565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fa90611628565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506112cf81611af3565b92915050565b6000813590506112e481611b0a565b92915050565b6000602082840312156112fc57600080fd5b600061130a848285016112c0565b91505092915050565b6000806040838503121561132657600080fd5b6000611334858286016112c0565b9250506020611345858286016112c0565b9150509250929050565b60008060006060848603121561136457600080fd5b6000611372868287016112c0565b9350506020611383868287016112c0565b9250506040611394868287016112d5565b9150509250925092565b600080604083850312156113b157600080fd5b60006113bf858286016112c0565b92505060206113d0858286016112d5565b9150509250929050565b6000602082840312156113ec57600080fd5b60006113fa848285016112d5565b91505092915050565b61140c816117c4565b82525050565b61141b816117d6565b82525050565b600061142c8261171e565b6114368185611729565b9350611446818560208601611819565b61144f816118dc565b840191505092915050565b6000611467602583611729565b9150611472826118ed565b604082019050919050565b600061148a602483611729565b91506114958261193c565b604082019050919050565b60006114ad602683611729565b91506114b88261198b565b604082019050919050565b60006114d0601b83611729565b91506114db826119da565b602082019050919050565b60006114f3601f83611729565b91506114fe82611a03565b602082019050919050565b6000611516602083611729565b915061152182611a2c565b602082019050919050565b6000611539602383611729565b915061154482611a55565b604082019050919050565b600061155c602283611729565b915061156782611aa4565b604082019050919050565b61157b81611802565b82525050565b61158a8161180c565b82525050565b60006020820190506115a56000830184611403565b92915050565b60006020820190506115c06000830184611412565b92915050565b600060208201905081810360008301526115e08184611421565b905092915050565b600060208201905081810360008301526116018161145a565b9050919050565b600060208201905081810360008301526116218161147d565b9050919050565b60006020820190508181036000830152611641816114a0565b9050919050565b60006020820190508181036000830152611661816114c3565b9050919050565b60006020820190508181036000830152611681816114e6565b9050919050565b600060208201905081810360008301526116a181611509565b9050919050565b600060208201905081810360008301526116c18161152c565b9050919050565b600060208201905081810360008301526116e18161154f565b9050919050565b60006020820190506116fd6000830184611572565b92915050565b60006020820190506117186000830184611581565b92915050565b600081519050919050565b600082825260208201905092915050565b600061174582611802565b915061175083611802565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117855761178461187e565b5b828201905092915050565b600061179b82611802565b91506117a683611802565b9250828210156117b9576117b861187e565b5b828203905092915050565b60006117cf826117e2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561183757808201518184015260208101905061181c565b83811115611846576000848401525b50505050565b6000600282049050600182168061186457607f821691505b60208210811415611878576118776118ad565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b611afc816117c4565b8114611b0757600080fd5b50565b611b1381611802565b8114611b1e57600080fd5b5056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220dc65b967301ad8d81a9fb04c5d8868f7ea0558baed8deb26ac56e6b00e3badc464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x242 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54554E434F494E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x24A JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54554E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x24A JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x19FC94C2D06261E0180000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH3 0x234 SWAP2 SWAP1 PUSH3 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x397 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x258 SWAP1 PUSH3 0x332 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x27C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2C8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x297 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2C8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2C8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2C7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2AA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2D7 SWAP2 SWAP1 PUSH3 0x2DB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2F6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2DC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x305 DUP2 PUSH3 0x328 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x322 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x34B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x362 JUMPI PUSH3 0x361 PUSH3 0x368 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1BCA DUP1 PUSH3 0x3A7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x343 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x134F JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0x184C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39A SWAP1 PUSH2 0x184C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0x3FE PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP5 DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x4E7 DUP5 PUSH2 0x432 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x4E2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B22 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x498 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x516 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x5AD DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x527 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x762 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x79F SWAP1 PUSH2 0x184C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x184C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x818 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x818 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH2 0x8C4 PUSH2 0xAE6 JUMP JUMPDEST DUP4 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x996 PUSH2 0x8E0 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x991 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B70 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x90A PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B4 PUSH2 0x9AD PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD1 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0x1193 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB55 SWAP1 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC5 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD90 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE05 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE9A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF86 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x1790 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF6 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1070 SWAP1 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108E DUP2 PUSH1 0x3 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x10E6 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP1 PUSH2 0x1628 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12CF DUP2 PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E4 DUP2 PUSH2 0x1B0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x130A DUP5 DUP3 DUP6 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1334 DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1345 DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1372 DUP7 DUP3 DUP8 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1383 DUP7 DUP3 DUP8 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1394 DUP7 DUP3 DUP8 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13BF DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D0 DUP6 DUP3 DUP7 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13FA DUP5 DUP3 DUP6 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x17C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x141B DUP2 PUSH2 0x17D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142C DUP3 PUSH2 0x171E JUMP JUMPDEST PUSH2 0x1436 DUP2 DUP6 PUSH2 0x1729 JUMP JUMPDEST SWAP4 POP PUSH2 0x1446 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1467 PUSH1 0x25 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x1472 DUP3 PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148A PUSH1 0x24 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x1495 DUP3 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AD PUSH1 0x26 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B8 DUP3 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D0 PUSH1 0x1B DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DB DUP3 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F3 PUSH1 0x1F DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x14FE DUP3 PUSH2 0x1A03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1516 PUSH1 0x20 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x1521 DUP3 PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1539 PUSH1 0x23 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x1544 DUP3 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155C PUSH1 0x22 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x1567 DUP3 PUSH2 0x1AA4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157B DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x158A DUP2 PUSH2 0x180C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1403 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1412 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15E0 DUP2 DUP5 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 PUSH2 0x145A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1621 DUP2 PUSH2 0x147D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1641 DUP2 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1661 DUP2 PUSH2 0x14C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1681 DUP2 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16A1 DUP2 PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16C1 DUP2 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16E1 DUP2 PUSH2 0x154F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1572 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1718 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1581 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1745 DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH2 0x1750 DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1785 JUMPI PUSH2 0x1784 PUSH2 0x187E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179B DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A6 DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x17B9 JUMPI PUSH2 0x17B8 PUSH2 0x187E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CF DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1837 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x181C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1846 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1864 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1878 JUMPI PUSH2 0x1877 PUSH2 0x18AD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1AFC DUP2 PUSH2 0x17C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B13 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xDC PUSH6 0xB967301AD8D8 BYTE SWAP16 0xB0 0x4C 0x5D DUP9 PUSH9 0xF7EA0558BAED8DEB26 0xAC JUMP 0xE6 0xB0 0xE EXTCODESIZE 0xAD 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "184:7900:2:-:0;;;519:231;;;;;;;;;;859:17:1;879:12;:10;;;:12;;:::i;:::-;859:32;;907:9;898:6;;:18;;;;;;;;;;;;;;;;;;961:9;928:43;;957:1;928:43;;;;;;;;;;;;837:140;540:17:2;;;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;:::i;:::-;;564:15;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;598:2;586:9;;:14;;;;;;;;;;;;;;;;;;622:19;607:12;:34;;;;672:12;;648:9;:21;658:10;648:21;;;;;;;;;;;;;;;:36;;;;719:10;698:46;;715:1;698:46;;;731:12;;698:46;;;;;;:::i;:::-;;;;;;;;184:7900;;768:101:0;813:15;852:10;837:26;;768:101;:::o;184:7900:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:118:5:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;229:124;;;;:::o;359:77::-;396:7;425:5;414:16;;404:32;;;:::o;442:320::-;486:6;523:1;517:4;513:12;503:22;;570:1;564:4;560:12;591:18;581:2;;647:4;639:6;635:17;625:27;;581:2;709;701:6;698:14;678:18;675:38;672:2;;;728:18;;:::i;:::-;672:2;493:269;;;;:::o;768:180::-;816:77;813:1;806:88;913:4;910:1;903:15;937:4;934:1;927:15;184:7900:2;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15023:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:5",
														"type": ""
													}
												],
												"src": "152:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:196:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:5"
															},
															"nodeType": "YulIf",
															"src": "373:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "450:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "454:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:5",
														"type": ""
													}
												],
												"src": "297:262:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:324:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "694:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "696:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "696:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "696:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "669:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "678:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "665:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "665:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:32:5"
															},
															"nodeType": "YulIf",
															"src": "658:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "720:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "735:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "749:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "739:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "764:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "799:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "774:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "764:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "847:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "862:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "876:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "866:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "892:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "927:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "923:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "923:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "947:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "902:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "902:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "892:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "610:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "621:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "633:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "641:6:5",
														"type": ""
													}
												],
												"src": "565:407:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1078:452:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1124:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1133:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1126:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1126:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1126:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1099:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1108:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1120:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:32:5"
															},
															"nodeType": "YulIf",
															"src": "1088:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1150:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1165:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1179:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1169:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1194:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1229:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1240:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1225:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1225:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1249:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1204:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1204:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1194:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1277:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1322:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1357:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1368:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1353:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1353:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1377:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1332:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1322:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1405:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1420:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1424:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1450:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1485:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1496:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1481:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1481:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1505:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1460:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1460:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1450:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1032:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1043:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1055:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1063:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1071:6:5",
														"type": ""
													}
												],
												"src": "978:552:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1619:324:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1665:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1674:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1677:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1667:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1667:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1661:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1632:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:32:5"
															},
															"nodeType": "YulIf",
															"src": "1629:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1691:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1735:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1770:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1781:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1766:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1766:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1790:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1745:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1735:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1818:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1833:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1837:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1863:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1898:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1909:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1894:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1894:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1918:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1873:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1873:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1863:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1581:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1592:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1604:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1612:6:5",
														"type": ""
													}
												],
												"src": "1536:407:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2015:196:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2061:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2063:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2063:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2063:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2036:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2032:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2057:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2028:32:5"
															},
															"nodeType": "YulIf",
															"src": "2025:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2087:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2102:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2116:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2106:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:5",
														"type": ""
													}
												],
												"src": "1949:262:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2282:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2299:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2322:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2304:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2292:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2270:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2277:3:5",
														"type": ""
													}
												],
												"src": "2217:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2400:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2417:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2437:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2422:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2422:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2410:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2410:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2410:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2388:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2395:3:5",
														"type": ""
													}
												],
												"src": "2341:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2548:272:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2558:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2605:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2572:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2562:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2620:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2686:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2691:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2627:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2627:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2620:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2733:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2740:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2729:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2747:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2752:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2707:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2707:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2768:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2779:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2784:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2784:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2775:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2775:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2529:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2536:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2544:3:5",
														"type": ""
													}
												],
												"src": "2456:364:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2982:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3048:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3053:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2989:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2989:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2982:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3154:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																	"nodeType": "YulIdentifier",
																	"src": "3065:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3167:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3178:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3183:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3174:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3167:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2960:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2968:3:5",
														"type": ""
													}
												],
												"src": "2826:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3344:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3354:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3420:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3425:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3361:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3361:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3354:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3526:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																	"nodeType": "YulIdentifier",
																	"src": "3437:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3437:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3437:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3539:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3550:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3555:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3546:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3539:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3332:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3340:3:5",
														"type": ""
													}
												],
												"src": "3198:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3726:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3792:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3797:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3733:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3733:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3726:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3898:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "3809:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3809:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3809:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3911:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3922:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3927:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3704:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3712:3:5",
														"type": ""
													}
												],
												"src": "3570:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4088:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4098:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4164:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4169:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4105:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4105:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4098:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4270:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "4181:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4181:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4181:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4283:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4294:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4290:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4290:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4283:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4076:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4084:3:5",
														"type": ""
													}
												],
												"src": "3942:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4460:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4470:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4536:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4541:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4477:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4477:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4470:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4642:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																	"nodeType": "YulIdentifier",
																	"src": "4553:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4553:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4553:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4655:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4666:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4671:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4655:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4448:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4456:3:5",
														"type": ""
													}
												],
												"src": "4314:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4832:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4842:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4908:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4913:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4849:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4849:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4842:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5014:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4925:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4925:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5027:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5038:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5043:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5034:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5034:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5027:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4820:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4828:3:5",
														"type": ""
													}
												],
												"src": "4686:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5204:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5214:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5280:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5221:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5214:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5386:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																	"nodeType": "YulIdentifier",
																	"src": "5297:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5297:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5297:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5399:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5410:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5415:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5406:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5399:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5200:3:5",
														"type": ""
													}
												],
												"src": "5058:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5586:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5652:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5657:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5593:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5586:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5758:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																	"nodeType": "YulIdentifier",
																	"src": "5669:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5669:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5669:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5782:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5787:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5778:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5778:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5771:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5564:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5572:3:5",
														"type": ""
													}
												],
												"src": "5430:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5867:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5884:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5907:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5889:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5889:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5877:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5877:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5877:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5855:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5862:3:5",
														"type": ""
													}
												],
												"src": "5802:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5987:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6004:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6025:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6009:15:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6009:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5997:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5997:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5997:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5975:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5982:3:5",
														"type": ""
													}
												],
												"src": "5926:112:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6142:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6152:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6164:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6175:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6160:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6160:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6152:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6232:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6245:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6256:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6241:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6241:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6188:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6188:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6188:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6114:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6126:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6137:4:5",
														"type": ""
													}
												],
												"src": "6044:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6364:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6374:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6386:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6397:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6382:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6382:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6374:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6448:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6461:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6472:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6457:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6457:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6410:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6410:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6410:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6336:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6348:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6359:4:5",
														"type": ""
													}
												],
												"src": "6272:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6606:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6616:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6628:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6639:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6624:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6616:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6663:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6674:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6659:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6659:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6682:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6688:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6678:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6678:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6652:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6652:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6652:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6708:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6780:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6789:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6716:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6716:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6708:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6578:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6590:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6601:4:5",
														"type": ""
													}
												],
												"src": "6488:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6978:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6988:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7000:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7011:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6996:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6996:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6988:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7035:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7046:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7031:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7031:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7054:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7060:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7050:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7050:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7024:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7024:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7024:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7080:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7214:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7088:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7080:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6958:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6973:4:5",
														"type": ""
													}
												],
												"src": "6807:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7403:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7413:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7425:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7436:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7421:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7421:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7413:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7460:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7471:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7456:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7456:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7479:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7485:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7475:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7475:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7449:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7449:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7449:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7505:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7639:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7513:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7513:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7505:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7383:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7398:4:5",
														"type": ""
													}
												],
												"src": "7232:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7828:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7838:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7850:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7861:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7846:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7846:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7838:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7885:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7896:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7881:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7881:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7904:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7910:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7900:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7900:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7874:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7874:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7874:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7930:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8064:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7938:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7938:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7930:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7808:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7823:4:5",
														"type": ""
													}
												],
												"src": "7657:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8253:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8263:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8275:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8286:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8271:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8263:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8310:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8321:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8306:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8306:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8329:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8335:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8325:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8325:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8299:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8299:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8299:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8355:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8489:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8363:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8363:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8355:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8233:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8248:4:5",
														"type": ""
													}
												],
												"src": "8082:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8678:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8688:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8700:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8711:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8696:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8696:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8688:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8735:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8746:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8731:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8731:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8754:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8760:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8750:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8750:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8724:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8724:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8724:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8780:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8914:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8788:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8788:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8780:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8658:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8673:4:5",
														"type": ""
													}
												],
												"src": "8507:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9103:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9113:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9125:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9136:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9121:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9121:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9113:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9160:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9171:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9156:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9156:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9179:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9185:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9175:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9175:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9149:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9149:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9149:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9205:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9339:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9213:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9213:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9205:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9083:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9098:4:5",
														"type": ""
													}
												],
												"src": "8932:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9528:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9538:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9550:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9561:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9546:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9546:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9538:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9585:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9596:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9581:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9581:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9604:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9610:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9600:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9600:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9574:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9574:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9574:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9630:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9764:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9638:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9638:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9630:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9508:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9523:4:5",
														"type": ""
													}
												],
												"src": "9357:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9953:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9963:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9975:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9986:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9971:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9971:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9963:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10010:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10021:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10006:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10006:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10029:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10035:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10025:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10025:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9999:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9999:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9999:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10055:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10189:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10063:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10063:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10055:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9933:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9948:4:5",
														"type": ""
													}
												],
												"src": "9782:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10305:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10315:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10327:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10338:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10323:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10323:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10315:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10395:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10408:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10419:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10404:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10404:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10351:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10351:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10351:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10277:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10289:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10300:4:5",
														"type": ""
													}
												],
												"src": "10207:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10529:120:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10539:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10551:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10547:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10547:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10539:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10615:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10628:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10639:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10624:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10624:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10575:39:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10575:67:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10575:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10501:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10513:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10524:4:5",
														"type": ""
													}
												],
												"src": "10435:214:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10714:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10725:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10741:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10735:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10735:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10725:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10697:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10707:6:5",
														"type": ""
													}
												],
												"src": "10655:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10856:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10873:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10878:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10866:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10866:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10866:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10894:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10913:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10918:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10909:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10909:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10894:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10828:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10833:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10844:11:5",
														"type": ""
													}
												],
												"src": "10760:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10979:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10989:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11012:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10994:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10994:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10989:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11023:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11046:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11028:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11028:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11023:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11186:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11188:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11188:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11188:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11107:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11114:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11182:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11110:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11104:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11104:81:5"
															},
															"nodeType": "YulIf",
															"src": "11101:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11218:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11229:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11232:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11225:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11225:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11218:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10966:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10969:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10975:3:5",
														"type": ""
													}
												],
												"src": "10935:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11291:146:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11301:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11324:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11306:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11306:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11301:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11335:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11358:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11340:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11340:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11335:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11382:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11384:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11384:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11384:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11376:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11379:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11373:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11373:8:5"
															},
															"nodeType": "YulIf",
															"src": "11370:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11414:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11426:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11429:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11422:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11422:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11414:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11277:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11280:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11286:4:5",
														"type": ""
													}
												],
												"src": "11246:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11488:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11498:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11527:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11509:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11509:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11498:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11470:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11480:7:5",
														"type": ""
													}
												],
												"src": "11443:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11587:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11597:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11622:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11615:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11615:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11608:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11608:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11597:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11569:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11579:7:5",
														"type": ""
													}
												],
												"src": "11545:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11686:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11696:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11711:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11718:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11707:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11696:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11668:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11678:7:5",
														"type": ""
													}
												],
												"src": "11641:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11818:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11828:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11839:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11828:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11800:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11810:7:5",
														"type": ""
													}
												],
												"src": "11773:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11899:43:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11909:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11924:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11931:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11920:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11920:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11909:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11881:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11891:7:5",
														"type": ""
													}
												],
												"src": "11856:86:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11997:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12007:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12016:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12011:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12076:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12101:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12106:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12097:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12097:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12120:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12125:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12116:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12116:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12110:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12110:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12090:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12090:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12090:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12037:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12040:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12034:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12034:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12048:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12050:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12059:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12062:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12055:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12055:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12050:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12030:3:5",
																"statements": []
															},
															"src": "12026:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12173:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12223:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12228:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12219:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12219:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12237:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12212:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12212:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12212:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12154:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12157:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12151:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12151:13:5"
															},
															"nodeType": "YulIf",
															"src": "12148:2:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11979:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11984:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11989:6:5",
														"type": ""
													}
												],
												"src": "11948:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12312:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12322:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12336:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12342:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12332:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12332:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12322:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12353:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12383:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12389:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12379:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12379:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12357:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12430:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12444:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12458:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12466:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12454:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12454:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12444:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12410:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12403:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12403:26:5"
															},
															"nodeType": "YulIf",
															"src": "12400:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12533:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "12547:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12547:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12547:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12497:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12520:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12528:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12517:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12517:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12494:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12494:38:5"
															},
															"nodeType": "YulIf",
															"src": "12491:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12296:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12305:6:5",
														"type": ""
													}
												],
												"src": "12261:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12615:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12632:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12635:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12625:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12625:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12625:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12729:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12732:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12722:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12722:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12722:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12753:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12756:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12746:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12746:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12746:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12587:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12801:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12818:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12821:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12811:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12811:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12811:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12915:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12918:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12908:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12908:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12908:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12939:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12942:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12932:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12932:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12932:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12773:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13007:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13017:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13035:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13042:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13031:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13031:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13051:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13047:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13047:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13027:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13027:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13017:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12990:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13000:6:5",
														"type": ""
													}
												],
												"src": "12959:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13173:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13195:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13203:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13191:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13191:14:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13207:34:5",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13184:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13184:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13184:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13263:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13271:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13259:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13259:15:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13276:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13252:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13252:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13252:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13165:6:5",
														"type": ""
													}
												],
												"src": "13067:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13403:117:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13425:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13433:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13421:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13421:14:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13437:34:5",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13414:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13414:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13414:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13493:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13501:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13489:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13489:15:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13506:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13482:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13482:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13482:31:5"
														}
													]
												},
												"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13395:6:5",
														"type": ""
													}
												],
												"src": "13297:223:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13632:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13654:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13662:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13650:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13650:14:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13666:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13643:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13643:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13643:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13722:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13730:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13718:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13718:15:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13735:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13711:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13711:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13711:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13624:6:5",
														"type": ""
													}
												],
												"src": "13526:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13863:71:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13885:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13893:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13881:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13881:14:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13897:29:5",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13874:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13874:53:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13874:53:5"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13855:6:5",
														"type": ""
													}
												],
												"src": "13757:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14046:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14068:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14076:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14064:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14064:14:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14080:33:5",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14057:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14057:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14057:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14038:6:5",
														"type": ""
													}
												],
												"src": "13940:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14233:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14255:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14263:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14251:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14251:14:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14267:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14244:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14244:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14244:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14225:6:5",
														"type": ""
													}
												],
												"src": "14127:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14421:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14443:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14451:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14439:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14439:14:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14455:34:5",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14432:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14432:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14432:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14511:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14519:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14507:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14507:15:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14524:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14500:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14500:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14500:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14413:6:5",
														"type": ""
													}
												],
												"src": "14315:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14649:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14671:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14679:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14667:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14667:14:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14683:34:5",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14660:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14660:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14660:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14739:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14747:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14735:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14735:15:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14752:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14728:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14728:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14728:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14641:6:5",
														"type": ""
													}
												],
												"src": "14543:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14813:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14870:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14879:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14882:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14872:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14872:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14872:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14836:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14861:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14843:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14843:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14833:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14833:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14826:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14826:43:5"
															},
															"nodeType": "YulIf",
															"src": "14823:2:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14806:5:5",
														"type": ""
													}
												],
												"src": "14770:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14941:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14998:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15007:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15010:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15000:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15000:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15000:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14964:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14989:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14971:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14971:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14961:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14961:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14954:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14954:43:5"
															},
															"nodeType": "YulIf",
															"src": "14951:2:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14934:5:5",
														"type": ""
													}
												],
												"src": "14898:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102b3578063a9059cbb146102e3578063dd62ed3e14610313578063f2fde38b1461034357610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a0712d681461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a91906115c6565b60405180910390f35b61013d6004803603810190610138919061139e565b6103f1565b60405161014a91906115ab565b60405180910390f35b61015b61040f565b60405161016891906116e8565b60405180910390f35b61018b6004803603810190610186919061134f565b610419565b60405161019891906115ab565b60405180910390f35b6101a96104f2565b6040516101b69190611703565b60405180910390f35b6101d960048036038101906101d4919061139e565b610509565b6040516101e691906115ab565b60405180910390f35b610209600480360381019061020491906112ea565b6105bc565b60405161021691906116e8565b60405180910390f35b610227610605565b005b610231610758565b60405161023e9190611590565b60405180910390f35b61024f610767565b60405161025c9190611590565b60405180910390f35b61026d610790565b60405161027a91906115c6565b60405180910390f35b61029d600480360381019061029891906113da565b610822565b6040516102aa91906115ab565b60405180910390f35b6102cd60048036038101906102c8919061139e565b6108d3565b6040516102da91906115ab565b60405180910390f35b6102fd60048036038101906102f8919061139e565b6109a0565b60405161030a91906115ab565b60405180910390f35b61032d60048036038101906103289190611313565b6109be565b60405161033a91906116e8565b60405180910390f35b61035d600480360381019061035891906112ea565b610a45565b005b60606006805461036e9061184c565b80601f016020809104026020016040519081016040528092919081815260200182805461039a9061184c565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006104056103fe610ae6565b8484610aee565b6001905092915050565b6000600354905090565b6000610426848484610cb9565b6104e784610432610ae6565b6104e285604051806060016040528060288152602001611b2260289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610498610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006105b2610516610ae6565b846105ad8560026000610527610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b610aee565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069190611688565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610762610767565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461079f9061184c565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb9061184c565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b5050505050905090565b600061082c610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090611688565b60405180910390fd5b6108ca6108c4610ae6565b83611009565b60019050919050565b60006109966108e0610ae6565b8461099185604051806060016040528060258152602001611b70602591396002600061090a610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b6001905092915050565b60006109b46109ad610ae6565b8484610cb9565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a4d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad190611688565b60405180910390fd5b610ae381611193565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5590611608565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc5906116c8565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610cac91906116e8565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d20906115e8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d90906116a8565b60405180910390fd5b610e0581604051806060016040528060268152602001611b4a60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f3a91906116e8565b60405180910390a3505050565b6000838311158290610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8691906115c6565b60405180910390fd5b5060008385610f9e9190611790565b9050809150509392505050565b6000808284610fba919061173a565b905083811015610fff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff690611648565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107090611668565b60405180910390fd5b61108e81600354610fab90919063ffffffff16565b6003819055506110e681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161118791906116e8565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fa90611628565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506112cf81611af3565b92915050565b6000813590506112e481611b0a565b92915050565b6000602082840312156112fc57600080fd5b600061130a848285016112c0565b91505092915050565b6000806040838503121561132657600080fd5b6000611334858286016112c0565b9250506020611345858286016112c0565b9150509250929050565b60008060006060848603121561136457600080fd5b6000611372868287016112c0565b9350506020611383868287016112c0565b9250506040611394868287016112d5565b9150509250925092565b600080604083850312156113b157600080fd5b60006113bf858286016112c0565b92505060206113d0858286016112d5565b9150509250929050565b6000602082840312156113ec57600080fd5b60006113fa848285016112d5565b91505092915050565b61140c816117c4565b82525050565b61141b816117d6565b82525050565b600061142c8261171e565b6114368185611729565b9350611446818560208601611819565b61144f816118dc565b840191505092915050565b6000611467602583611729565b9150611472826118ed565b604082019050919050565b600061148a602483611729565b91506114958261193c565b604082019050919050565b60006114ad602683611729565b91506114b88261198b565b604082019050919050565b60006114d0601b83611729565b91506114db826119da565b602082019050919050565b60006114f3601f83611729565b91506114fe82611a03565b602082019050919050565b6000611516602083611729565b915061152182611a2c565b602082019050919050565b6000611539602383611729565b915061154482611a55565b604082019050919050565b600061155c602283611729565b915061156782611aa4565b604082019050919050565b61157b81611802565b82525050565b61158a8161180c565b82525050565b60006020820190506115a56000830184611403565b92915050565b60006020820190506115c06000830184611412565b92915050565b600060208201905081810360008301526115e08184611421565b905092915050565b600060208201905081810360008301526116018161145a565b9050919050565b600060208201905081810360008301526116218161147d565b9050919050565b60006020820190508181036000830152611641816114a0565b9050919050565b60006020820190508181036000830152611661816114c3565b9050919050565b60006020820190508181036000830152611681816114e6565b9050919050565b600060208201905081810360008301526116a181611509565b9050919050565b600060208201905081810360008301526116c18161152c565b9050919050565b600060208201905081810360008301526116e18161154f565b9050919050565b60006020820190506116fd6000830184611572565b92915050565b60006020820190506117186000830184611581565b92915050565b600081519050919050565b600082825260208201905092915050565b600061174582611802565b915061175083611802565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117855761178461187e565b5b828201905092915050565b600061179b82611802565b91506117a683611802565b9250828210156117b9576117b861187e565b5b828203905092915050565b60006117cf826117e2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561183757808201518184015260208101905061181c565b83811115611846576000848401525b50505050565b6000600282049050600182168061186457607f821691505b60208210811415611878576118776118ad565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b611afc816117c4565b8114611b0757600080fd5b50565b611b1381611802565b8114611b1e57600080fd5b5056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220dc65b967301ad8d81a9fb04c5d8868f7ea0558baed8deb26ac56e6b00e3badc464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x343 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x134F JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0x184C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39A SWAP1 PUSH2 0x184C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0x3FE PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP5 DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x4E7 DUP5 PUSH2 0x432 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x4E2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B22 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x498 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x516 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x5AD DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x527 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x762 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x79F SWAP1 PUSH2 0x184C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x184C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x818 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x818 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH2 0x8C4 PUSH2 0xAE6 JUMP JUMPDEST DUP4 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x996 PUSH2 0x8E0 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x991 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B70 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x90A PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B4 PUSH2 0x9AD PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD1 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0x1193 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB55 SWAP1 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC5 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD90 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE05 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE9A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF86 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x1790 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF6 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1070 SWAP1 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108E DUP2 PUSH1 0x3 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x10E6 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP1 PUSH2 0x1628 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12CF DUP2 PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E4 DUP2 PUSH2 0x1B0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x130A DUP5 DUP3 DUP6 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1334 DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1345 DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1372 DUP7 DUP3 DUP8 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1383 DUP7 DUP3 DUP8 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1394 DUP7 DUP3 DUP8 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13BF DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D0 DUP6 DUP3 DUP7 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13FA DUP5 DUP3 DUP6 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x17C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x141B DUP2 PUSH2 0x17D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142C DUP3 PUSH2 0x171E JUMP JUMPDEST PUSH2 0x1436 DUP2 DUP6 PUSH2 0x1729 JUMP JUMPDEST SWAP4 POP PUSH2 0x1446 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1467 PUSH1 0x25 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x1472 DUP3 PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148A PUSH1 0x24 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x1495 DUP3 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AD PUSH1 0x26 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B8 DUP3 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D0 PUSH1 0x1B DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DB DUP3 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F3 PUSH1 0x1F DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x14FE DUP3 PUSH2 0x1A03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1516 PUSH1 0x20 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x1521 DUP3 PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1539 PUSH1 0x23 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x1544 DUP3 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155C PUSH1 0x22 DUP4 PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP PUSH2 0x1567 DUP3 PUSH2 0x1AA4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157B DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x158A DUP2 PUSH2 0x180C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1403 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1412 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15E0 DUP2 DUP5 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 PUSH2 0x145A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1621 DUP2 PUSH2 0x147D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1641 DUP2 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1661 DUP2 PUSH2 0x14C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1681 DUP2 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16A1 DUP2 PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16C1 DUP2 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16E1 DUP2 PUSH2 0x154F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1572 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1718 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1581 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1745 DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH2 0x1750 DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1785 JUMPI PUSH2 0x1784 PUSH2 0x187E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179B DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A6 DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x17B9 JUMPI PUSH2 0x17B8 PUSH2 0x187E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CF DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1837 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x181C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1846 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1864 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1878 JUMPI PUSH2 0x1877 PUSH2 0x18AD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1AFC DUP2 PUSH2 0x17C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B13 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xDC PUSH6 0xB967301AD8D8 BYTE SWAP16 0xB0 0x4C 0x5D DUP9 PUSH9 0xF7EA0558BAED8DEB26 0xAC JUMP 0xE6 0xB0 0xE EXTCODESIZE 0xAD 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "184:7900:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2333:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1392:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2931:301;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;958:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3614:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1542:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1652:130:1;;;:::i;:::-;;810:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1050:73:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1103:92:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4737:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4286:251;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1851:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2064:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1927:103:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1248:88:2;1296:13;1325:5;1318:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:88;:::o;2333:153::-;2410:4;2423:39;2432:12;:10;:12::i;:::-;2446:7;2455:6;2423:8;:39::i;:::-;2476:4;2469:11;;2333:153;;;;:::o;1392:96::-;1447:7;1470:12;;1463:19;;1392:96;:::o;2931:301::-;3031:4;3044:36;3054:6;3062:9;3073:6;3044:9;:36::i;:::-;3087:121;3096:6;3104:12;:10;:12::i;:::-;3118:89;3156:6;3118:89;;;;;;;;;;;;;;;;;:11;:19;3130:6;3118:19;;;;;;;;;;;;;;;:33;3138:12;:10;:12::i;:::-;3118:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3087:8;:121::i;:::-;3222:4;3215:11;;2931:301;;;;;:::o;958:88::-;1010:5;1031:9;;;;;;;;;;;1024:16;;958:88;:::o;3614:200::-;3694:4;3707:83;3716:12;:10;:12::i;:::-;3730:7;3739:50;3778:10;3739:11;:25;3751:12;:10;:12::i;:::-;3739:25;;;;;;;;;;;;;;;:34;3765:7;3739:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3707:8;:83::i;:::-;3804:4;3797:11;;3614:200;;;;:::o;1542:115::-;1610:7;1633:9;:18;1643:7;1633:18;;;;;;;;;;;;;;;;1626:25;;1542:115;;;:::o;1652:130:1:-;1254:12;:10;:12::i;:::-;1244:22;;:6;;;;;;;;;;:22;;;1236:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1747:1:::1;1710:40;;1731:6;::::0;::::1;;;;;;;;1710:40;;;;;;;;;;;;1774:1;1757:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1652:130::o:0;810:89:2:-;863:7;886;:5;:7::i;:::-;879:14;;810:89;:::o;1050:73:1:-;1088:7;1111:6;;;;;;;;;;;1104:13;;1050:73;:::o;1103:92:2:-;1153:13;1182:7;1175:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:92;:::o;4737:120::-;4793:4;1254:12:1;:10;:12::i;:::-;1244:22;;:6;;;;;;;;;;:22;;;1236:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4806:27:2::1;4812:12;:10;:12::i;:::-;4826:6;4806:5;:27::i;:::-;4847:4;4840:11;;4737:120:::0;;;:::o;4286:251::-;4371:4;4384:129;4393:12;:10;:12::i;:::-;4407:7;4416:96;4455:15;4416:96;;;;;;;;;;;;;;;;;:11;:25;4428:12;:10;:12::i;:::-;4416:25;;;;;;;;;;;;;;;:34;4442:7;4416:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4384:8;:129::i;:::-;4527:4;4520:11;;4286:251;;;;:::o;1851:159::-;1931:4;1944:42;1954:12;:10;:12::i;:::-;1968:9;1979:6;1944:9;:42::i;:::-;2000:4;1993:11;;1851:159;;;;:::o;2064:139::-;2147:7;2170:11;:18;2182:5;2170:18;;;;;;;;;;;;;;;:27;2189:7;2170:27;;;;;;;;;;;;;;;;2163:34;;2064:139;;;;:::o;1927:103:1:-;1254:12;:10;:12::i;:::-;1244:22;;:6;;;;;;;;;;:22;;;1236:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1996:28:::1;2015:8;1996:18;:28::i;:::-;1927:103:::0;:::o;768:101:0:-;813:15;852:10;837:26;;768:101;:::o;7367:320:2:-;7474:1;7457:19;;:5;:19;;;;7449:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7551:1;7532:21;;:7;:21;;;;7524:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7631:6;7601:11;:18;7613:5;7601:18;;;;;;;;;;;;;;;:27;7620:7;7601:27;;;;;;;;;;;;;;;:36;;;;7665:7;7649:32;;7658:5;7649:32;;;7674:6;7649:32;;;;;;:::i;:::-;;;;;;;;7367:320;;;:::o;5317:449::-;5429:1;5411:20;;:6;:20;;;;5403:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5509:1;5488:23;;:9;:23;;;;5480:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5580;5602:6;5580:71;;;;;;;;;;;;;;;;;:9;:17;5590:6;5580:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5560:9;:17;5570:6;5560:17;;;;;;;;;;;;;;;:91;;;;5681:32;5706:6;5681:9;:20;5691:9;5681:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5658:9;:20;5668:9;5658:20;;;;;;;;;;;;;;;:55;;;;5742:9;5725:35;;5734:6;5725:35;;;5753:6;5725:35;;;;;;:::i;:::-;;;;;;;;5317:449;;;:::o;1699:178:4:-;1785:7;1814:1;1809;:6;;1817:12;1801:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1837:9;1853:1;1849;:5;;;;:::i;:::-;1837:17;;1870:1;1863:8;;;1699:178;;;;;:::o;872:167::-;930:7;946:9;962:1;958;:5;;;;:::i;:::-;946:17;;983:1;978;:6;;970:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1032:1;1025:8;;;872:167;;;;:::o;6027:290:2:-;6118:1;6099:21;;:7;:21;;;;6091:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;6180:24;6197:6;6180:12;;:16;;:24;;;;:::i;:::-;6165:12;:39;;;;6232:30;6255:6;6232:9;:18;6242:7;6232:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6211:9;:18;6221:7;6211:18;;;;;;;;;;;;;;;:51;;;;6295:7;6274:37;;6291:1;6274:37;;;6304:6;6274:37;;;;;;:::i;:::-;;;;;;;;6027:290;;:::o;2128:215:1:-;2218:1;2198:22;;:8;:22;;;;2190:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2304:8;2275:38;;2296:6;;;;;;;;;;2275:38;;;;;;;;;;;;2329:8;2320:6;;:17;;;;;;;;;;;;;;;;;;2128:215;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;633:6;641;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;1055:6;1063;1071;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;1604:6;1612;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:262::-;2008:6;2057:2;2045:9;2036:7;2032:23;2028:32;2025:2;;;2073:1;2070;2063:12;2025:2;2116:1;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2087:117;2015:196;;;;:::o;2217:118::-;2304:24;2322:5;2304:24;:::i;:::-;2299:3;2292:37;2282:53;;:::o;2341:109::-;2422:21;2437:5;2422:21;:::i;:::-;2417:3;2410:34;2400:50;;:::o;2456:364::-;2544:3;2572:39;2605:5;2572:39;:::i;:::-;2627:71;2691:6;2686:3;2627:71;:::i;:::-;2620:78;;2707:52;2752:6;2747:3;2740:4;2733:5;2729:16;2707:52;:::i;:::-;2784:29;2806:6;2784:29;:::i;:::-;2779:3;2775:39;2768:46;;2548:272;;;;;:::o;2826:366::-;2968:3;2989:67;3053:2;3048:3;2989:67;:::i;:::-;2982:74;;3065:93;3154:3;3065:93;:::i;:::-;3183:2;3178:3;3174:12;3167:19;;2972:220;;;:::o;3198:366::-;3340:3;3361:67;3425:2;3420:3;3361:67;:::i;:::-;3354:74;;3437:93;3526:3;3437:93;:::i;:::-;3555:2;3550:3;3546:12;3539:19;;3344:220;;;:::o;3570:366::-;3712:3;3733:67;3797:2;3792:3;3733:67;:::i;:::-;3726:74;;3809:93;3898:3;3809:93;:::i;:::-;3927:2;3922:3;3918:12;3911:19;;3716:220;;;:::o;3942:366::-;4084:3;4105:67;4169:2;4164:3;4105:67;:::i;:::-;4098:74;;4181:93;4270:3;4181:93;:::i;:::-;4299:2;4294:3;4290:12;4283:19;;4088:220;;;:::o;4314:366::-;4456:3;4477:67;4541:2;4536:3;4477:67;:::i;:::-;4470:74;;4553:93;4642:3;4553:93;:::i;:::-;4671:2;4666:3;4662:12;4655:19;;4460:220;;;:::o;4686:366::-;4828:3;4849:67;4913:2;4908:3;4849:67;:::i;:::-;4842:74;;4925:93;5014:3;4925:93;:::i;:::-;5043:2;5038:3;5034:12;5027:19;;4832:220;;;:::o;5058:366::-;5200:3;5221:67;5285:2;5280:3;5221:67;:::i;:::-;5214:74;;5297:93;5386:3;5297:93;:::i;:::-;5415:2;5410:3;5406:12;5399:19;;5204:220;;;:::o;5430:366::-;5572:3;5593:67;5657:2;5652:3;5593:67;:::i;:::-;5586:74;;5669:93;5758:3;5669:93;:::i;:::-;5787:2;5782:3;5778:12;5771:19;;5576:220;;;:::o;5802:118::-;5889:24;5907:5;5889:24;:::i;:::-;5884:3;5877:37;5867:53;;:::o;5926:112::-;6009:22;6025:5;6009:22;:::i;:::-;6004:3;5997:35;5987:51;;:::o;6044:222::-;6137:4;6175:2;6164:9;6160:18;6152:26;;6188:71;6256:1;6245:9;6241:17;6232:6;6188:71;:::i;:::-;6142:124;;;;:::o;6272:210::-;6359:4;6397:2;6386:9;6382:18;6374:26;;6410:65;6472:1;6461:9;6457:17;6448:6;6410:65;:::i;:::-;6364:118;;;;:::o;6488:313::-;6601:4;6639:2;6628:9;6624:18;6616:26;;6688:9;6682:4;6678:20;6674:1;6663:9;6659:17;6652:47;6716:78;6789:4;6780:6;6716:78;:::i;:::-;6708:86;;6606:195;;;;:::o;6807:419::-;6973:4;7011:2;7000:9;6996:18;6988:26;;7060:9;7054:4;7050:20;7046:1;7035:9;7031:17;7024:47;7088:131;7214:4;7088:131;:::i;:::-;7080:139;;6978:248;;;:::o;7232:419::-;7398:4;7436:2;7425:9;7421:18;7413:26;;7485:9;7479:4;7475:20;7471:1;7460:9;7456:17;7449:47;7513:131;7639:4;7513:131;:::i;:::-;7505:139;;7403:248;;;:::o;7657:419::-;7823:4;7861:2;7850:9;7846:18;7838:26;;7910:9;7904:4;7900:20;7896:1;7885:9;7881:17;7874:47;7938:131;8064:4;7938:131;:::i;:::-;7930:139;;7828:248;;;:::o;8082:419::-;8248:4;8286:2;8275:9;8271:18;8263:26;;8335:9;8329:4;8325:20;8321:1;8310:9;8306:17;8299:47;8363:131;8489:4;8363:131;:::i;:::-;8355:139;;8253:248;;;:::o;8507:419::-;8673:4;8711:2;8700:9;8696:18;8688:26;;8760:9;8754:4;8750:20;8746:1;8735:9;8731:17;8724:47;8788:131;8914:4;8788:131;:::i;:::-;8780:139;;8678:248;;;:::o;8932:419::-;9098:4;9136:2;9125:9;9121:18;9113:26;;9185:9;9179:4;9175:20;9171:1;9160:9;9156:17;9149:47;9213:131;9339:4;9213:131;:::i;:::-;9205:139;;9103:248;;;:::o;9357:419::-;9523:4;9561:2;9550:9;9546:18;9538:26;;9610:9;9604:4;9600:20;9596:1;9585:9;9581:17;9574:47;9638:131;9764:4;9638:131;:::i;:::-;9630:139;;9528:248;;;:::o;9782:419::-;9948:4;9986:2;9975:9;9971:18;9963:26;;10035:9;10029:4;10025:20;10021:1;10010:9;10006:17;9999:47;10063:131;10189:4;10063:131;:::i;:::-;10055:139;;9953:248;;;:::o;10207:222::-;10300:4;10338:2;10327:9;10323:18;10315:26;;10351:71;10419:1;10408:9;10404:17;10395:6;10351:71;:::i;:::-;10305:124;;;;:::o;10435:214::-;10524:4;10562:2;10551:9;10547:18;10539:26;;10575:67;10639:1;10628:9;10624:17;10615:6;10575:67;:::i;:::-;10529:120;;;;:::o;10655:99::-;10707:6;10741:5;10735:12;10725:22;;10714:40;;;:::o;10760:169::-;10844:11;10878:6;10873:3;10866:19;10918:4;10913:3;10909:14;10894:29;;10856:73;;;;:::o;10935:305::-;10975:3;10994:20;11012:1;10994:20;:::i;:::-;10989:25;;11028:20;11046:1;11028:20;:::i;:::-;11023:25;;11182:1;11114:66;11110:74;11107:1;11104:81;11101:2;;;11188:18;;:::i;:::-;11101:2;11232:1;11229;11225:9;11218:16;;10979:261;;;;:::o;11246:191::-;11286:4;11306:20;11324:1;11306:20;:::i;:::-;11301:25;;11340:20;11358:1;11340:20;:::i;:::-;11335:25;;11379:1;11376;11373:8;11370:2;;;11384:18;;:::i;:::-;11370:2;11429:1;11426;11422:9;11414:17;;11291:146;;;;:::o;11443:96::-;11480:7;11509:24;11527:5;11509:24;:::i;:::-;11498:35;;11488:51;;;:::o;11545:90::-;11579:7;11622:5;11615:13;11608:21;11597:32;;11587:48;;;:::o;11641:126::-;11678:7;11718:42;11711:5;11707:54;11696:65;;11686:81;;;:::o;11773:77::-;11810:7;11839:5;11828:16;;11818:32;;;:::o;11856:86::-;11891:7;11931:4;11924:5;11920:16;11909:27;;11899:43;;;:::o;11948:307::-;12016:1;12026:113;12040:6;12037:1;12034:13;12026:113;;;12125:1;12120:3;12116:11;12110:18;12106:1;12101:3;12097:11;12090:39;12062:2;12059:1;12055:10;12050:15;;12026:113;;;12157:6;12154:1;12151:13;12148:2;;;12237:1;12228:6;12223:3;12219:16;12212:27;12148:2;11997:258;;;;:::o;12261:320::-;12305:6;12342:1;12336:4;12332:12;12322:22;;12389:1;12383:4;12379:12;12410:18;12400:2;;12466:4;12458:6;12454:17;12444:27;;12400:2;12528;12520:6;12517:14;12497:18;12494:38;12491:2;;;12547:18;;:::i;:::-;12491:2;12312:269;;;;:::o;12587:180::-;12635:77;12632:1;12625:88;12732:4;12729:1;12722:15;12756:4;12753:1;12746:15;12773:180;12821:77;12818:1;12811:88;12918:4;12915:1;12908:15;12942:4;12939:1;12932:15;12959:102;13000:6;13051:2;13047:7;13042:2;13035:5;13031:14;13027:28;13017:38;;13007:54;;;:::o;13067:224::-;13207:34;13203:1;13195:6;13191:14;13184:58;13276:7;13271:2;13263:6;13259:15;13252:32;13173:118;:::o;13297:223::-;13437:34;13433:1;13425:6;13421:14;13414:58;13506:6;13501:2;13493:6;13489:15;13482:31;13403:117;:::o;13526:225::-;13666:34;13662:1;13654:6;13650:14;13643:58;13735:8;13730:2;13722:6;13718:15;13711:33;13632:119;:::o;13757:177::-;13897:29;13893:1;13885:6;13881:14;13874:53;13863:71;:::o;13940:181::-;14080:33;14076:1;14068:6;14064:14;14057:57;14046:75;:::o;14127:182::-;14267:34;14263:1;14255:6;14251:14;14244:58;14233:76;:::o;14315:222::-;14455:34;14451:1;14443:6;14439:14;14432:58;14524:5;14519:2;14511:6;14507:15;14500:30;14421:116;:::o;14543:221::-;14683:34;14679:1;14671:6;14667:14;14660:58;14752:4;14747:2;14739:6;14735:15;14728:29;14649:115;:::o;14770:122::-;14843:24;14861:5;14843:24;:::i;:::-;14836:5;14833:35;14823:2;;14882:1;14879;14872:12;14823:2;14813:79;:::o;14898:122::-;14971:24;14989:5;14971:24;:::i;:::-;14964:5;14961:35;14951:2;;15010:1;15007;15000:12;14951:2;14941:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1422800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1608",
								"decimals()": "1202",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1280",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1267",
								"renounceOwnership()": "24380",
								"symbol()": "infinite",
								"totalSupply()": "1205",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "24757"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 519,
									"end": 750,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 519,
									"end": 750,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 519,
									"end": 750,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 519,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 750,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 519,
									"end": 750,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 750,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 519,
									"end": 750,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 519,
									"end": 750,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 750,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 519,
									"end": 750,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 859,
									"end": 876,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 879,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 879,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 879,
									"end": 889,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 879,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 879,
									"end": 891,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 879,
									"end": 891,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 859,
									"end": 891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 907,
									"end": 916,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 898,
									"end": 904,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 898,
									"end": 916,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 898,
									"end": 916,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 898,
									"end": 916,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 898,
									"end": 916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 961,
									"end": 970,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 957,
									"end": 958,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 928,
									"end": 971,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 971,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 837,
									"end": 977,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"source": 2,
									"value": "54554E434F494E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 540,
									"end": 545,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 540,
									"end": 557,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "54554E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 564,
									"end": 571,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 564,
									"end": 579,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 598,
									"end": 600,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 586,
									"end": 595,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 586,
									"end": 595,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 586,
									"end": 600,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 586,
									"end": 600,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 586,
									"end": 600,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 586,
									"end": 600,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 586,
									"end": 600,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 622,
									"end": 641,
									"name": "PUSH",
									"source": 2,
									"value": "19FC94C2D06261E0180000"
								},
								{
									"begin": 607,
									"end": 619,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 607,
									"end": 641,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 607,
									"end": 641,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 607,
									"end": 641,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 607,
									"end": 641,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 672,
									"end": 684,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 672,
									"end": 684,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 648,
									"end": 657,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 648,
									"end": 669,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 668,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 648,
									"end": 669,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 648,
									"end": 669,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 648,
									"end": 669,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 648,
									"end": 669,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 648,
									"end": 669,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 648,
									"end": 669,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 648,
									"end": 669,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 648,
									"end": 669,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 648,
									"end": 669,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 648,
									"end": 669,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 648,
									"end": 669,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 648,
									"end": 669,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 648,
									"end": 669,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 648,
									"end": 669,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 669,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 648,
									"end": 684,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 648,
									"end": 684,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 648,
									"end": 684,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 648,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 698,
									"end": 744,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 715,
									"end": 716,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 744,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 698,
									"end": 744,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 731,
									"end": 743,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 731,
									"end": 743,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 744,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 698,
									"end": 744,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 698,
									"end": 744,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 698,
									"end": 744,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 698,
									"end": 744,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 744,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 698,
									"end": 744,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 768,
									"end": 869,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 768,
									"end": 869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 813,
									"end": 828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 862,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 837,
									"end": 863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 837,
									"end": 863,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 768,
									"end": 869,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 768,
									"end": 869,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 125,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 7,
									"end": 125,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 94,
									"end": 118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 112,
									"end": 117,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 94,
									"end": 118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 89,
									"end": 92,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 82,
									"end": 119,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 72,
									"end": 125,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 72,
									"end": 125,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 72,
									"end": 125,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 131,
									"end": 353,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 131,
									"end": 353,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 224,
									"end": 228,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 251,
									"end": 260,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 247,
									"end": 265,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 239,
									"end": 265,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 239,
									"end": 265,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 275,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 341,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 328,
									"end": 345,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 319,
									"end": 325,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 275,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 229,
									"end": 353,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 229,
									"end": 353,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 229,
									"end": 353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 229,
									"end": 353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 229,
									"end": 353,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 359,
									"end": 436,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 359,
									"end": 436,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 396,
									"end": 403,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 430,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 414,
									"end": 430,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 414,
									"end": 430,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 404,
									"end": 436,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 404,
									"end": 436,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 404,
									"end": 436,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 404,
									"end": 436,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 442,
									"end": 762,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 442,
									"end": 762,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 486,
									"end": 492,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 524,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 517,
									"end": 521,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 513,
									"end": 525,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 503,
									"end": 525,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 503,
									"end": 525,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 568,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 560,
									"end": 572,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 591,
									"end": 609,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 581,
									"end": 583,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 581,
									"end": 583,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 647,
									"end": 651,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 639,
									"end": 645,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 635,
									"end": 652,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 625,
									"end": 652,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 625,
									"end": 652,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 581,
									"end": 583,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 581,
									"end": 583,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 709,
									"end": 711,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 701,
									"end": 707,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 712,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 678,
									"end": 696,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 675,
									"end": 713,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 672,
									"end": 674,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 728,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 672,
									"end": 674,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 493,
									"end": 762,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 493,
									"end": 762,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 493,
									"end": 762,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 493,
									"end": 762,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 493,
									"end": 762,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 816,
									"end": 893,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 813,
									"end": 814,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 894,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 913,
									"end": 917,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 903,
									"end": 918,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 937,
									"end": 941,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 927,
									"end": 942,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 8084,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc65b967301ad8d81a9fb04c5d8868f7ea0558baed8deb26ac56e6b00e3badc464736f6c63430008040033",
									".code": [
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "A0712D68"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 184,
											"end": 8084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 810,
											"end": 899,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1309,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1336,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2414,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2432,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2453,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2461,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2423,
											"end": 2462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2462,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2423,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2480,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2486,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1488,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3031,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3062,
											"end": 3071,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3079,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3044,
											"end": 3080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3044,
											"end": 3080,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3044,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3104,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3104,
											"end": 3116,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3116,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3104,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "PUSH data",
											"source": 2,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3129,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3136,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3138,
											"end": 3150,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3138,
											"end": 3150,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3138,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3151,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3118,
											"end": 3155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3118,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3087,
											"end": 3208,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3087,
											"end": 3208,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3087,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3215,
											"end": 3226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3226,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3232,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1046,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3694,
											"end": 3698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3716,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3716,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3716,
											"end": 3728,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3716,
											"end": 3728,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3716,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3778,
											"end": 3788,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3750,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3751,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3772,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3773,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3739,
											"end": 3777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3739,
											"end": 3789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3789,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3739,
											"end": 3789,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3739,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3707,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3707,
											"end": 3790,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3707,
											"end": 3790,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3707,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3797,
											"end": 3808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3808,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3814,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1657,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1750,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1782,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 810,
											"end": 899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 863,
											"end": 870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 886,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 886,
											"end": 893,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 893,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 886,
											"end": 893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 879,
											"end": 893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 879,
											"end": 893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 810,
											"end": 899,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1123,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1166,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1195,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4812,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4826,
											"end": 4832,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4806,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4806,
											"end": 4833,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4806,
											"end": 4833,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4806,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4847,
											"end": 4851,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4840,
											"end": 4851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4840,
											"end": 4851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4857,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4371,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4384,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4393,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "PUSH data",
											"source": 2,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4427,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4428,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4441,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4449,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4450,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4416,
											"end": 4454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4416,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4384,
											"end": 4513,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4384,
											"end": 4513,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4384,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4520,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4520,
											"end": 4531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4286,
											"end": 4537,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1954,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1954,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1954,
											"end": 1966,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1954,
											"end": 1966,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1954,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1944,
											"end": 1986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1944,
											"end": 1986,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1944,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 2010,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2187,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2196,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2197,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2203,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1254,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1236,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2015,
											"end": 2023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1996,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 768,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 768,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 862,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 837,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 869,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7367,
											"end": 7687,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7367,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7474,
											"end": 7475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7457,
											"end": 7462,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7449,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7551,
											"end": 7552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7553,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7553,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7553,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7524,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7631,
											"end": 7637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7618,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7627,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7628,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7637,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7665,
											"end": 7672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7663,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7674,
											"end": 7680,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7687,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5317,
											"end": 5766,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5317,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5431,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5411,
											"end": 5431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5411,
											"end": 5417,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5411,
											"end": 5431,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5411,
											"end": 5431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5411,
											"end": 5431,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5411,
											"end": 5431,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5403,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5509,
											"end": 5510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5511,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5488,
											"end": 5511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5488,
											"end": 5497,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5488,
											"end": 5511,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5488,
											"end": 5511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5488,
											"end": 5511,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5488,
											"end": 5511,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5602,
											"end": 5608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "PUSH data",
											"source": 2,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5596,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5580,
											"end": 5601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5580,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5576,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5651,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5706,
											"end": 5712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5690,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5701,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5681,
											"end": 5705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5667,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5677,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5713,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5713,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5658,
											"end": 5713,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 5751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5734,
											"end": 5740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5753,
											"end": 5759,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5760,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5317,
											"end": 5766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5317,
											"end": 5766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5317,
											"end": 5766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5317,
											"end": 5766,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1699,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1699,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1785,
											"end": 1792,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1815,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1810,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1829,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1849,
											"end": 1854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1849,
											"end": 1854,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1849,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1849,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1877,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1877,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1877,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 872,
											"end": 1039,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 872,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 930,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 963,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 958,
											"end": 959,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 958,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 958,
											"end": 963,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 958,
											"end": 963,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 958,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 958,
											"end": 963,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 958,
											"end": 963,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 958,
											"end": 963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 946,
											"end": 963,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 983,
											"end": 984,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 978,
											"end": 979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 978,
											"end": 984,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 978,
											"end": 984,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 872,
											"end": 1039,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 872,
											"end": 1039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 872,
											"end": 1039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 872,
											"end": 1039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 872,
											"end": 1039,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6027,
											"end": 6317,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 6027,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6099,
											"end": 6120,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6099,
											"end": 6106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6099,
											"end": 6120,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6099,
											"end": 6120,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6099,
											"end": 6120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6091,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6180,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6197,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6180,
											"end": 6192,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6180,
											"end": 6192,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6180,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6180,
											"end": 6196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6180,
											"end": 6204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6180,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6180,
											"end": 6204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6180,
											"end": 6204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6180,
											"end": 6204,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6204,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6180,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6177,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6165,
											"end": 6204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6204,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6255,
											"end": 6261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6241,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6242,
											"end": 6249,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6232,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6232,
											"end": 6262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6232,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6228,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6262,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6295,
											"end": 6302,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6304,
											"end": 6310,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6311,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6317,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2190,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2343,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 435,
											"end": 552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 559,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 633,
											"end": 639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 690,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 687,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 669,
											"end": 676,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 665,
											"end": 688,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 658,
											"end": 660,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 706,
											"end": 707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 696,
											"end": 708,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 658,
											"end": 660,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 799,
											"end": 808,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 795,
											"end": 817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 764,
											"end": 827,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 764,
											"end": 827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 720,
											"end": 837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 876,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 947,
											"end": 954,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 923,
											"end": 945,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 892,
											"end": 955,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 892,
											"end": 955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 847,
											"end": 965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1055,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1108,
											"end": 1117,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1118,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1249,
											"end": 1256,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1366,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1494,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1503,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1691,
											"end": 1808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2211,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1949,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2059,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2043,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2055,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2060,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2075,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2211,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2211,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2335,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2217,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2322,
											"end": 2327,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2302,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2335,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2341,
											"end": 2450,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2341,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 2450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 2450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 2450,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2456,
											"end": 2820,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2456,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2605,
											"end": 2610,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2691,
											"end": 2697,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2689,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2627,
											"end": 2698,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2627,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2627,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2698,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2750,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2744,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2738,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2784,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2814,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2814,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2820,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2820,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2826,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 2971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3053,
											"end": 3055,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2989,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3056,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3154,
											"end": 3157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3065,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3185,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3186,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3186,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2972,
											"end": 3192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2972,
											"end": 3192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2972,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2972,
											"end": 3192,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3198,
											"end": 3564,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3198,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3343,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 3425,
											"end": 3427,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3361,
											"end": 3428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3361,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 3361,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3526,
											"end": 3529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 3437,
											"end": 3530,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3437,
											"end": 3530,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3437,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 3553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3539,
											"end": 3558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3539,
											"end": 3558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3344,
											"end": 3564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3344,
											"end": 3564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3344,
											"end": 3564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3344,
											"end": 3564,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3570,
											"end": 3936,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 3570,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 3797,
											"end": 3799,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3792,
											"end": 3795,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 3733,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3726,
											"end": 3800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3726,
											"end": 3800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3898,
											"end": 3901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 3809,
											"end": 3902,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3809,
											"end": 3902,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3809,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3929,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3925,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3918,
											"end": 3930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3936,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3936,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3942,
											"end": 4308,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3942,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4169,
											"end": 4171,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 4164,
											"end": 4167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4105,
											"end": 4172,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4105,
											"end": 4172,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4105,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4098,
											"end": 4172,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4098,
											"end": 4172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4181,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4270,
											"end": 4273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4181,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4181,
											"end": 4274,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4181,
											"end": 4274,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4181,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4302,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4283,
											"end": 4302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4283,
											"end": 4302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4088,
											"end": 4308,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4088,
											"end": 4308,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4088,
											"end": 4308,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4088,
											"end": 4308,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4314,
											"end": 4680,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 4314,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 4541,
											"end": 4543,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4536,
											"end": 4539,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4477,
											"end": 4544,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4544,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 4477,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4470,
											"end": 4544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4470,
											"end": 4544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4553,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 4642,
											"end": 4645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4553,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 4553,
											"end": 4646,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4553,
											"end": 4646,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 4553,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4671,
											"end": 4673,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4666,
											"end": 4669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4460,
											"end": 4680,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4460,
											"end": 4680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4460,
											"end": 4680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4460,
											"end": 4680,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 4686,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 4913,
											"end": 4915,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4908,
											"end": 4911,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 4849,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4842,
											"end": 4916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4842,
											"end": 4916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 5014,
											"end": 5017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 4925,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5045,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5038,
											"end": 5041,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 5052,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 5052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 5052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 5052,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5058,
											"end": 5424,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 5058,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5200,
											"end": 5203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5221,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5221,
											"end": 5288,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5221,
											"end": 5288,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 5221,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5214,
											"end": 5288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5214,
											"end": 5288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 5386,
											"end": 5389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 5297,
											"end": 5390,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5297,
											"end": 5390,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 5297,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5410,
											"end": 5413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5406,
											"end": 5418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5399,
											"end": 5418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5399,
											"end": 5418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5424,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5204,
											"end": 5424,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5430,
											"end": 5796,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 5430,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5572,
											"end": 5575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5593,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5652,
											"end": 5655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5593,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5593,
											"end": 5660,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5593,
											"end": 5660,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 5593,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5586,
											"end": 5660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5586,
											"end": 5660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 5758,
											"end": 5761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5669,
											"end": 5762,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5669,
											"end": 5762,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 5669,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5787,
											"end": 5789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5782,
											"end": 5785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5778,
											"end": 5790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5796,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5796,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5802,
											"end": 5920,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 5802,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5884,
											"end": 5887,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5877,
											"end": 5914,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5867,
											"end": 5920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5867,
											"end": 5920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5867,
											"end": 5920,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5926,
											"end": 6038,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 5926,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6009,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 6025,
											"end": 6030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6009,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 6009,
											"end": 6031,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6009,
											"end": 6031,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 6009,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6007,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6032,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6038,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6044,
											"end": 6266,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 6044,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6177,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6164,
											"end": 6173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6160,
											"end": 6178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 6256,
											"end": 6257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6245,
											"end": 6254,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6241,
											"end": 6258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 6188,
											"end": 6259,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6188,
											"end": 6259,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 6188,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 6266,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 6266,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 6266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 6266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 6266,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6272,
											"end": 6482,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 6272,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6399,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6386,
											"end": 6395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6374,
											"end": 6400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6374,
											"end": 6400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 6472,
											"end": 6473,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6457,
											"end": 6474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 6410,
											"end": 6475,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6475,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 6410,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6482,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6482,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6482,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6488,
											"end": 6801,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6488,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6639,
											"end": 6641,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6624,
											"end": 6642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6616,
											"end": 6642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6616,
											"end": 6642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6697,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6682,
											"end": 6686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6678,
											"end": 6698,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6672,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6659,
											"end": 6676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6652,
											"end": 6699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6716,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 6789,
											"end": 6793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6716,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 6716,
											"end": 6794,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6716,
											"end": 6794,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 6716,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6708,
											"end": 6794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6708,
											"end": 6794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6801,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6801,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6801,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6807,
											"end": 7226,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6807,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6973,
											"end": 6977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7013,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7000,
											"end": 7009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6988,
											"end": 7014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6988,
											"end": 7014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7060,
											"end": 7069,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7050,
											"end": 7070,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7044,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7024,
											"end": 7071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7088,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7214,
											"end": 7218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7088,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7088,
											"end": 7219,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7088,
											"end": 7219,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7088,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7080,
											"end": 7219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7080,
											"end": 7219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6978,
											"end": 7226,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6978,
											"end": 7226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6978,
											"end": 7226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6978,
											"end": 7226,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7232,
											"end": 7651,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 7232,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7398,
											"end": 7402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7438,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7425,
											"end": 7434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7421,
											"end": 7439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7413,
											"end": 7439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7413,
											"end": 7439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7485,
											"end": 7494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7479,
											"end": 7483,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7475,
											"end": 7495,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7469,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7456,
											"end": 7473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7449,
											"end": 7496,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7513,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7513,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 7513,
											"end": 7644,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7513,
											"end": 7644,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7513,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7505,
											"end": 7644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7505,
											"end": 7644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7651,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7657,
											"end": 8076,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 7657,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7823,
											"end": 7827,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7863,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7850,
											"end": 7859,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7846,
											"end": 7864,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7838,
											"end": 7864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7838,
											"end": 7864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7910,
											"end": 7919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7904,
											"end": 7908,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7900,
											"end": 7920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7885,
											"end": 7894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7881,
											"end": 7898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7874,
											"end": 7921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7938,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 8064,
											"end": 8068,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7938,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 7938,
											"end": 8069,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7938,
											"end": 8069,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 7938,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7930,
											"end": 8069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7930,
											"end": 8069,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7828,
											"end": 8076,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7828,
											"end": 8076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7828,
											"end": 8076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7828,
											"end": 8076,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8082,
											"end": 8501,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 8082,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8248,
											"end": 8252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8286,
											"end": 8288,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8263,
											"end": 8289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8263,
											"end": 8289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8335,
											"end": 8344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8329,
											"end": 8333,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8325,
											"end": 8345,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8321,
											"end": 8322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8323,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8299,
											"end": 8346,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8363,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 8489,
											"end": 8493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8363,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 8363,
											"end": 8494,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8363,
											"end": 8494,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 8363,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8355,
											"end": 8494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8355,
											"end": 8494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8253,
											"end": 8501,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8253,
											"end": 8501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8253,
											"end": 8501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8253,
											"end": 8501,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8507,
											"end": 8926,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 8507,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8677,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8713,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8700,
											"end": 8709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8696,
											"end": 8714,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8688,
											"end": 8714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8688,
											"end": 8714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8760,
											"end": 8769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8754,
											"end": 8758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8750,
											"end": 8770,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8744,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8731,
											"end": 8748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8724,
											"end": 8771,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8788,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 8914,
											"end": 8918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8788,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8788,
											"end": 8919,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8788,
											"end": 8919,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 8788,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8780,
											"end": 8919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8780,
											"end": 8919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8678,
											"end": 8926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8678,
											"end": 8926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8678,
											"end": 8926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8678,
											"end": 8926,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8932,
											"end": 9351,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 8932,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9136,
											"end": 9138,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9125,
											"end": 9134,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9113,
											"end": 9139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9113,
											"end": 9139,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9185,
											"end": 9194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9179,
											"end": 9183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9175,
											"end": 9195,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9171,
											"end": 9172,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9160,
											"end": 9169,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9156,
											"end": 9173,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9149,
											"end": 9196,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9213,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 9339,
											"end": 9343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9213,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 9213,
											"end": 9344,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9213,
											"end": 9344,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 9213,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9351,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9351,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9357,
											"end": 9776,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 9357,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9561,
											"end": 9563,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9550,
											"end": 9559,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9546,
											"end": 9564,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9538,
											"end": 9564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9538,
											"end": 9564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9610,
											"end": 9619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9604,
											"end": 9608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9600,
											"end": 9620,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9597,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9585,
											"end": 9594,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9638,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 9764,
											"end": 9768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9638,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 9638,
											"end": 9769,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9638,
											"end": 9769,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 9638,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9630,
											"end": 9769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9630,
											"end": 9769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9776,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9782,
											"end": 10201,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 9782,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9948,
											"end": 9952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9986,
											"end": 9988,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9975,
											"end": 9984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9963,
											"end": 9989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9963,
											"end": 9989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10035,
											"end": 10044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10029,
											"end": 10033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10025,
											"end": 10045,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10021,
											"end": 10022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10019,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9999,
											"end": 10046,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 10189,
											"end": 10193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10063,
											"end": 10194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10063,
											"end": 10194,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 10063,
											"end": 10194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10055,
											"end": 10194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10055,
											"end": 10194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9953,
											"end": 10201,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9953,
											"end": 10201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9953,
											"end": 10201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9953,
											"end": 10201,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10207,
											"end": 10429,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 10207,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10300,
											"end": 10304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10338,
											"end": 10340,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10327,
											"end": 10336,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10351,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 10419,
											"end": 10420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10408,
											"end": 10417,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10395,
											"end": 10401,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10351,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 10351,
											"end": 10422,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10351,
											"end": 10422,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 10351,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10305,
											"end": 10429,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10305,
											"end": 10429,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10305,
											"end": 10429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10305,
											"end": 10429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10305,
											"end": 10429,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10435,
											"end": 10649,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10435,
											"end": 10649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10524,
											"end": 10528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10562,
											"end": 10564,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10551,
											"end": 10560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10575,
											"end": 10642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 10639,
											"end": 10640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10628,
											"end": 10637,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10624,
											"end": 10641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10615,
											"end": 10621,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10575,
											"end": 10642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 10575,
											"end": 10642,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10575,
											"end": 10642,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 10575,
											"end": 10642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10529,
											"end": 10649,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10529,
											"end": 10649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10529,
											"end": 10649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10529,
											"end": 10649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10529,
											"end": 10649,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10655,
											"end": 10754,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10655,
											"end": 10754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10735,
											"end": 10747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10725,
											"end": 10747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10725,
											"end": 10747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10754,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10754,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10754,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10760,
											"end": 10929,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 10760,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10844,
											"end": 10855,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10878,
											"end": 10884,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10873,
											"end": 10876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10866,
											"end": 10885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10918,
											"end": 10922,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10913,
											"end": 10916,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10909,
											"end": 10923,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10894,
											"end": 10923,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10894,
											"end": 10923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10856,
											"end": 10929,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10856,
											"end": 10929,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10856,
											"end": 10929,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10856,
											"end": 10929,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10856,
											"end": 10929,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10935,
											"end": 11240,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 10935,
											"end": 11240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10975,
											"end": 10978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10994,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 11012,
											"end": 11013,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10994,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 10994,
											"end": 11014,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10994,
											"end": 11014,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 10994,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10989,
											"end": 11014,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10989,
											"end": 11014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11028,
											"end": 11048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 11046,
											"end": 11047,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11028,
											"end": 11048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 11028,
											"end": 11048,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11028,
											"end": 11048,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 11028,
											"end": 11048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11023,
											"end": 11048,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11023,
											"end": 11048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11182,
											"end": 11183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11114,
											"end": 11180,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11110,
											"end": 11184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11104,
											"end": 11185,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 11101,
											"end": 11103,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11101,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 11101,
											"end": 11103,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11188,
											"end": 11206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 11188,
											"end": 11206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 11188,
											"end": 11206,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11188,
											"end": 11206,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 11188,
											"end": 11206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11101,
											"end": 11103,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 11101,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11232,
											"end": 11233,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11229,
											"end": 11230,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11225,
											"end": 11234,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11218,
											"end": 11234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11218,
											"end": 11234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10979,
											"end": 11240,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10979,
											"end": 11240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10979,
											"end": 11240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10979,
											"end": 11240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10979,
											"end": 11240,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11246,
											"end": 11437,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 11246,
											"end": 11437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11286,
											"end": 11290,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 11324,
											"end": 11325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11306,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 11306,
											"end": 11326,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11306,
											"end": 11326,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 11306,
											"end": 11326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11301,
											"end": 11326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11301,
											"end": 11326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11335,
											"end": 11360,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11335,
											"end": 11360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11379,
											"end": 11380,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11376,
											"end": 11377,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11373,
											"end": 11381,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11370,
											"end": 11372,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11370,
											"end": 11372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 11370,
											"end": 11372,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11384,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 11384,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 11384,
											"end": 11402,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11384,
											"end": 11402,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 11384,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11370,
											"end": 11372,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 11370,
											"end": 11372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11429,
											"end": 11430,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11426,
											"end": 11427,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11422,
											"end": 11431,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11431,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11414,
											"end": 11431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11291,
											"end": 11437,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11291,
											"end": 11437,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11291,
											"end": 11437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11291,
											"end": 11437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11291,
											"end": 11437,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11443,
											"end": 11539,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 11443,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11480,
											"end": 11487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11509,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 11527,
											"end": 11532,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11509,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 11509,
											"end": 11533,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11509,
											"end": 11533,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 11509,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11498,
											"end": 11533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11498,
											"end": 11533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11488,
											"end": 11539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11488,
											"end": 11539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11488,
											"end": 11539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11488,
											"end": 11539,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11545,
											"end": 11635,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 11545,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11579,
											"end": 11586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11622,
											"end": 11627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11615,
											"end": 11628,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11608,
											"end": 11629,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11597,
											"end": 11629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11597,
											"end": 11629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11587,
											"end": 11635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11587,
											"end": 11635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11587,
											"end": 11635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11587,
											"end": 11635,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11641,
											"end": 11767,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 11641,
											"end": 11767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11678,
											"end": 11685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11718,
											"end": 11760,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11711,
											"end": 11716,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11707,
											"end": 11761,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11696,
											"end": 11761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11696,
											"end": 11761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11686,
											"end": 11767,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11686,
											"end": 11767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11686,
											"end": 11767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11686,
											"end": 11767,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11773,
											"end": 11850,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 11773,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11810,
											"end": 11817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11839,
											"end": 11844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11828,
											"end": 11844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11828,
											"end": 11844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11818,
											"end": 11850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11818,
											"end": 11850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11818,
											"end": 11850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11818,
											"end": 11850,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11856,
											"end": 11942,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 11856,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11891,
											"end": 11898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11931,
											"end": 11935,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 11924,
											"end": 11929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11920,
											"end": 11936,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11909,
											"end": 11936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11909,
											"end": 11936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11899,
											"end": 11942,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11899,
											"end": 11942,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11899,
											"end": 11942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11899,
											"end": 11942,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11948,
											"end": 12255,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 11948,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12016,
											"end": 12017,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12026,
											"end": 12139,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 12026,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12040,
											"end": 12046,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12037,
											"end": 12038,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12034,
											"end": 12047,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12026,
											"end": 12139,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12026,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 12026,
											"end": 12139,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12125,
											"end": 12126,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12120,
											"end": 12123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12116,
											"end": 12127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12110,
											"end": 12128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12106,
											"end": 12107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12101,
											"end": 12104,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12097,
											"end": 12108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12090,
											"end": 12129,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12062,
											"end": 12064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12059,
											"end": 12060,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12055,
											"end": 12065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12050,
											"end": 12065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12050,
											"end": 12065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12026,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 12026,
											"end": 12139,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12026,
											"end": 12139,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 12026,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12157,
											"end": 12163,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12154,
											"end": 12155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12151,
											"end": 12164,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12148,
											"end": 12150,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12148,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 12148,
											"end": 12150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12238,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12228,
											"end": 12234,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12223,
											"end": 12226,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12219,
											"end": 12235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12212,
											"end": 12239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12148,
											"end": 12150,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 12148,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11997,
											"end": 12255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11997,
											"end": 12255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11997,
											"end": 12255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11997,
											"end": 12255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11997,
											"end": 12255,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12261,
											"end": 12581,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 12261,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12305,
											"end": 12311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12342,
											"end": 12343,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 12336,
											"end": 12340,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12332,
											"end": 12344,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 12322,
											"end": 12344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12322,
											"end": 12344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12389,
											"end": 12390,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 12383,
											"end": 12387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12379,
											"end": 12391,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12410,
											"end": 12428,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12400,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 12400,
											"end": 12402,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12466,
											"end": 12470,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 12458,
											"end": 12464,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12454,
											"end": 12471,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12444,
											"end": 12471,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12444,
											"end": 12471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12400,
											"end": 12402,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 12400,
											"end": 12402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12528,
											"end": 12530,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12520,
											"end": 12526,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12517,
											"end": 12531,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12497,
											"end": 12515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12494,
											"end": 12532,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12491,
											"end": 12493,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12491,
											"end": 12493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 12491,
											"end": 12493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12547,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 12547,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 12547,
											"end": 12565,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12547,
											"end": 12565,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 12547,
											"end": 12565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12491,
											"end": 12493,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 12491,
											"end": 12493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12312,
											"end": 12581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12312,
											"end": 12581,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12312,
											"end": 12581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12312,
											"end": 12581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12312,
											"end": 12581,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12587,
											"end": 12767,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 12587,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12635,
											"end": 12712,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12632,
											"end": 12633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12625,
											"end": 12713,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12732,
											"end": 12736,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 12729,
											"end": 12730,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12722,
											"end": 12737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12756,
											"end": 12760,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12753,
											"end": 12754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12746,
											"end": 12761,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12773,
											"end": 12953,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 12773,
											"end": 12953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12821,
											"end": 12898,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12818,
											"end": 12819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12811,
											"end": 12899,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12918,
											"end": 12922,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 12915,
											"end": 12916,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12908,
											"end": 12923,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12942,
											"end": 12946,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12939,
											"end": 12940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12932,
											"end": 12947,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12959,
											"end": 13061,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 12959,
											"end": 13061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13000,
											"end": 13006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13051,
											"end": 13053,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 13047,
											"end": 13054,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 13042,
											"end": 13044,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 13035,
											"end": 13040,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13031,
											"end": 13045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13027,
											"end": 13055,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13017,
											"end": 13055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13007,
											"end": 13061,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13007,
											"end": 13061,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13007,
											"end": 13061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13007,
											"end": 13061,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13067,
											"end": 13291,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 13067,
											"end": 13291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13207,
											"end": 13241,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13203,
											"end": 13204,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13195,
											"end": 13201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13191,
											"end": 13205,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13184,
											"end": 13242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13276,
											"end": 13283,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13271,
											"end": 13273,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13263,
											"end": 13269,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13259,
											"end": 13274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13252,
											"end": 13284,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13173,
											"end": 13291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13173,
											"end": 13291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13297,
											"end": 13520,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 13297,
											"end": 13520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13437,
											"end": 13471,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 13433,
											"end": 13434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13425,
											"end": 13431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13421,
											"end": 13435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13414,
											"end": 13472,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13506,
											"end": 13512,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13501,
											"end": 13503,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13493,
											"end": 13499,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13489,
											"end": 13504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13482,
											"end": 13513,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13403,
											"end": 13520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13403,
											"end": 13520,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13526,
											"end": 13751,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 13526,
											"end": 13751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13666,
											"end": 13700,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13662,
											"end": 13663,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13654,
											"end": 13660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13650,
											"end": 13664,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13643,
											"end": 13701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13735,
											"end": 13743,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13730,
											"end": 13732,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13722,
											"end": 13728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13718,
											"end": 13733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13744,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13632,
											"end": 13751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13632,
											"end": 13751,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13757,
											"end": 13934,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 13757,
											"end": 13934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13897,
											"end": 13926,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 13893,
											"end": 13894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13885,
											"end": 13891,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13874,
											"end": 13927,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13863,
											"end": 13934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13863,
											"end": 13934,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13940,
											"end": 14121,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 13940,
											"end": 14121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14080,
											"end": 14113,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 14076,
											"end": 14077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14068,
											"end": 14074,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14064,
											"end": 14078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14057,
											"end": 14114,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14046,
											"end": 14121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14046,
											"end": 14121,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14127,
											"end": 14309,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 14127,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14267,
											"end": 14301,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14263,
											"end": 14264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14255,
											"end": 14261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14251,
											"end": 14265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14244,
											"end": 14302,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14233,
											"end": 14309,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14233,
											"end": 14309,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14315,
											"end": 14537,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 14315,
											"end": 14537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14455,
											"end": 14489,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 14451,
											"end": 14452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14443,
											"end": 14449,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14439,
											"end": 14453,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14432,
											"end": 14490,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14524,
											"end": 14529,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14519,
											"end": 14521,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14511,
											"end": 14517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14507,
											"end": 14522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14500,
											"end": 14530,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14421,
											"end": 14537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14421,
											"end": 14537,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14543,
											"end": 14764,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 14543,
											"end": 14764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14683,
											"end": 14717,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 14679,
											"end": 14680,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14671,
											"end": 14677,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14667,
											"end": 14681,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14660,
											"end": 14718,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14752,
											"end": 14756,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14747,
											"end": 14749,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14739,
											"end": 14745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14735,
											"end": 14750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14728,
											"end": 14757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14649,
											"end": 14764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14649,
											"end": 14764,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14770,
											"end": 14892,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 14770,
											"end": 14892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14843,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 14861,
											"end": 14866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14843,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 14843,
											"end": 14867,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14843,
											"end": 14867,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 14843,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14836,
											"end": 14841,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14833,
											"end": 14868,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14823,
											"end": 14825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 14823,
											"end": 14825,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14882,
											"end": 14883,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14879,
											"end": 14880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14872,
											"end": 14884,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14823,
											"end": 14825,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 14823,
											"end": 14825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14813,
											"end": 14892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14813,
											"end": 14892,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14898,
											"end": 15020,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 14898,
											"end": 15020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14971,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 14989,
											"end": 14994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14971,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 14971,
											"end": 14995,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14971,
											"end": 14995,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 14971,
											"end": 14995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14964,
											"end": 14969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14961,
											"end": 14996,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14951,
											"end": 14953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 14951,
											"end": 14953,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15010,
											"end": 15011,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15007,
											"end": 15008,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15000,
											"end": 15012,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14951,
											"end": 14953,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 14951,
											"end": 14953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14941,
											"end": 15020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14941,
											"end": 15020,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TunCoin.sol\":\"TunCoin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xfca6074092b8a1648fef1241ee1f79491b4202255352fa0ea8df8634b64fb78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6909cbe6d64495aeee0ecbbe95dc0e34d96d2845f31764c27aa306e4ef151dc7\",\"dweb:/ipfs/QmRjtC1AaLwozb8vTSBFx68v99ALk5r1zZ9yYyZVKfj3rv\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x39f7ee2668319d4b7967e6fecd1e14868d6beea538f1854f39b48f2bcd65c4bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3128c3c380c9480b2893781dc78fbbc39a6b7074d3f3ccd3a7ede87792460f82\",\"dweb:/ipfs/Qmdx6yqzJisqXkjCFYkc9ZUEByCNfAEUwxmhCTpsNYMgzF\"]},\"contracts/TunCoin.sol\":{\"keccak256\":\"0x7681a433f1164e880e215ef99e27785229b1996a61611f042c32b634d52b2329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b51cfcd04db091a1b6f722d184777abb17d087c4d97c35fffe380cf3a78ace6\",\"dweb:/ipfs/QmfXrirKmNVmgG7mJEZ7hTE18paxK1BDdzsgoDXB7y3zrB\"]},\"contracts/interface/Bep20Interface.sol\":{\"keccak256\":\"0x346da81f9bbc16cf9eee82502c0c91e7899eab6b0669dffcc4e18bb930cf5e31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0162eb625de9b1f0e1fca9cf2d056a6940efcb5ae784b8c556dea080d5369be7\",\"dweb:/ipfs/QmTMuWYd4LSHTa6BXPRu3UhYULUSGqTB8YWLM8s1YRCFfN\"]},\"contracts/lib/SafeMath.sol\":{\"keccak256\":\"0x69757e811a1c7193972b7514880e3f265ac72bf6c54dc68afeebb4ff5db9ce62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b7a5ab3bfadc09db65526fdfaa1bc25a007f32b81bcd08c9efc245ac54e81a7\",\"dweb:/ipfs/QmeCQCsV3Nb9fvYV9zT5QiTmPuVvzBHwPiY8w39e7rEQtN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 37,
								"contract": "contracts/TunCoin.sol:TunCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 168,
								"contract": "contracts/TunCoin.sol:TunCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 174,
								"contract": "contracts/TunCoin.sol:TunCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 176,
								"contract": "contracts/TunCoin.sol:TunCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 178,
								"contract": "contracts/TunCoin.sol:TunCoin",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 180,
								"contract": "contracts/TunCoin.sol:TunCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 182,
								"contract": "contracts/TunCoin.sol:TunCoin",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/Bep20Interface.sol": {
				"Bep20Interface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/Bep20Interface.sol\":\"Bep20Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/Bep20Interface.sol\":{\"keccak256\":\"0x346da81f9bbc16cf9eee82502c0c91e7899eab6b0669dffcc4e18bb930cf5e31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0162eb625de9b1f0e1fca9cf2d056a6940efcb5ae784b8c556dea080d5369be7\",\"dweb:/ipfs/QmTMuWYd4LSHTa6BXPRu3UhYULUSGqTB8YWLM8s1YRCFfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/lib/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/SafeMath.sol\":637:5065  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/SafeMath.sol\":637:5065  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e1f5cc1e45c4a894064b918d4f9af5a447f951bf1dbae46753cfd87817e9801364736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1f5cc1e45c4a894064b918d4f9af5a447f951bf1dbae46753cfd87817e9801364736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 CREATE2 0xCC 0x1E GASLIMIT 0xC4 0xA8 SWAP5 MOD 0x4B SWAP2 DUP14 0x4F SWAP11 CREATE2 LOG4 SELFBALANCE 0xF9 MLOAD 0xBF SAR 0xBA 0xE4 PUSH8 0x53CFD87817E98013 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "637:4428:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1f5cc1e45c4a894064b918d4f9af5a447f951bf1dbae46753cfd87817e9801364736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 CREATE2 0xCC 0x1E GASLIMIT 0xC4 0xA8 SWAP5 MOD 0x4B SWAP2 DUP14 0x4F SWAP11 CREATE2 LOG4 SELFBALANCE 0xF9 MLOAD 0xBF SAR 0xBA 0xE4 PUSH8 0x53CFD87817E98013 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "637:4428:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 637,
									"end": 5065,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1f5cc1e45c4a894064b918d4f9af5a447f951bf1dbae46753cfd87817e9801364736f6c63430008040033",
									".code": [
										{
											"begin": 637,
											"end": 5065,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 637,
											"end": 5065,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 637,
											"end": 5065,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 637,
											"end": 5065,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 637,
											"end": 5065,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 5065,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 637,
											"end": 5065,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 637,
											"end": 5065,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 637,
											"end": 5065,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/SafeMath.sol\":{\"keccak256\":\"0x69757e811a1c7193972b7514880e3f265ac72bf6c54dc68afeebb4ff5db9ce62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b7a5ab3bfadc09db65526fdfaa1bc25a007f32b81bcd08c9efc245ac54e81a7\",\"dweb:/ipfs/QmeCQCsV3Nb9fvYV9zT5QiTmPuVvzBHwPiY8w39e7rEQtN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							29
						]
					},
					"id": 30,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "579:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "759:3:0",
										"statements": []
									},
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:0:0"
									},
									"scope": 29,
									"src": "744:18:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "830:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 12,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "852:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "852:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "844:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 10,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "844:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "844:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "837:26:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "777:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "787:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "813:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:17:0"
									},
									"scope": 29,
									"src": "768:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "932:158:0",
										"statements": [
											{
												"expression": {
													"id": 22,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "939:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$29",
														"typeString": "contract Context"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "939:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 24,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1076:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1076:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 21,
												"id": 26,
												"nodeType": "Return",
												"src": "1069:15:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "884:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "918:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 19,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "918:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:14:0"
									},
									"scope": 29,
									"src": "875:215:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 30,
							"src": "570:523:0",
							"usedErrors": []
						}
					],
					"src": "33:1060:0"
				},
				"id": 0
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"Ownable": [
							149
						]
					},
					"id": 150,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 31,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 32,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 150,
							"sourceUnit": 30,
							"src": "60:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 34,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "612:7:1"
									},
									"id": 35,
									"nodeType": "InheritanceSpecifier",
									"src": "612:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 33,
								"nodeType": "StructuredDocumentation",
								"src": "85:505:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 149,
							"linearizedBaseContracts": [
								149,
								29
							],
							"name": "Ownable",
							"nameLocation": "601:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "641:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "625:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "625:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 43,
									"name": "OwnershipTransferred",
									"nameLocation": "660:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "697:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "681:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "728:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "712:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:57:1"
									},
									"src": "654:84:1"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "852:125:1",
										"statements": [
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "867:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 64,
														"src": "859:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 47,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "859:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 49,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "879:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "879:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:32:1"
											},
											{
												"expression": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 52,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "898:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 53,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "907:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "898:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "898:18:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "957:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "949:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 57,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "949:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "949:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 61,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "961:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 56,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "928:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "928:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "EmitStatement",
												"src": "923:48:1"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "744:89:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 65,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "849:2:1"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:0:1"
									},
									"scope": 149,
									"src": "837:140:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1097:26:1",
										"statements": [
											{
												"expression": {
													"id": 71,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 37,
													"src": "1111:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "1104:13:1"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "983:63:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1059:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:2:1"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1088:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:9:1"
									},
									"scope": 149,
									"src": "1050:73:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "1229:88:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 78,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1244:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 79,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1254:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1254:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1244:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1268:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1236:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1236:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1236:67:1"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "1310:1:1"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1129:75:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 87,
									"name": "onlyOwner",
									"nameLocation": "1217:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1208:109:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1698:84:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 94,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1731:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1739:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 95,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1739:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1739:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 93,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1710:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "1705:45:1"
											},
											{
												"expression": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1757:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1774:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1766:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 102,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1766:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1766:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1757:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1757:19:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "1323:325:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 91,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 90,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "1688:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1688:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1661:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1678:2:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1698:0:1"
									},
									"scope": 149,
									"src": "1652:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "1989:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2015:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "1996:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1996:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "1996:28:1"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1788:135:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 114,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "1979:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1979:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1936:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1962:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "1954:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1953:18:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1989:0:1"
									},
									"scope": 149,
									"src": "1927:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "2183:160:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 129,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "2198:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2218:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2210:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 130,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2210:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2210:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2198:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2190:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2190:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2190:73:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 139,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2296:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 140,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2304:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 138,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "2275:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "EmitStatement",
												"src": "2270:43:1"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2320:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2329:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2320:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "2320:17:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2036:88:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2137:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2164:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "2156:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2155:18:1"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2183:0:1"
									},
									"scope": 149,
									"src": "2128:215:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 150,
							"src": "592:1754:1",
							"usedErrors": []
						}
					],
					"src": "33:2313:1"
				},
				"id": 1
			},
			"contracts/TunCoin.sol": {
				"ast": {
					"absolutePath": "contracts/TunCoin.sol",
					"exportedSymbols": {
						"Bep20Interface": [
							792
						],
						"Context": [
							29
						],
						"Ownable": [
							149
						],
						"SafeMath": [
							988
						],
						"TunCoin": [
							691
						]
					},
					"id": 692,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 151,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 152,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 692,
							"sourceUnit": 30,
							"src": "60:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/Bep20Interface.sol",
							"file": "./interface/Bep20Interface.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 692,
							"sourceUnit": 793,
							"src": "85:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 692,
							"sourceUnit": 150,
							"src": "127:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/SafeMath.sol",
							"file": "./lib/SafeMath.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 692,
							"sourceUnit": 989,
							"src": "152:28:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 156,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "204:7:2"
									},
									"id": 157,
									"nodeType": "InheritanceSpecifier",
									"src": "204:7:2"
								},
								{
									"baseName": {
										"id": 158,
										"name": "Bep20Interface",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 792,
										"src": "213:14:2"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "213:14:2"
								},
								{
									"baseName": {
										"id": 160,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 149,
										"src": "229:7:2"
									},
									"id": 161,
									"nodeType": "InheritanceSpecifier",
									"src": "229:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 691,
							"linearizedBaseContracts": [
								691,
								149,
								792,
								29
							],
							"name": "TunCoin",
							"nameLocation": "193:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 164,
									"libraryName": {
										"id": 162,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 988,
										"src": "248:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "242:27:2",
									"typeName": {
										"id": 163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "261:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 168,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "312:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "275:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 167,
										"keyType": {
											"id": 165,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "284:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "275:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 166,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "295:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 174,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "386:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "328:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 173,
										"keyType": {
											"id": 169,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "337:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "328:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 172,
											"keyType": {
												"id": 170,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "357:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "348:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 171,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "368:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 176,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "420:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "404:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "404:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "451:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "437:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 177,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "437:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 180,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "480:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "465:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 179,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "465:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 182,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "507:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "492:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 181,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "492:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "533:217:2",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "540:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "54554e434f494e",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "548:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_0c1031d6fdd769dd9865d0974d5cc3cd8aecbfd31619243c8708bcae8547f2f1",
															"typeString": "literal_string \"TUNCOIN\""
														},
														"value": "TUNCOIN"
													},
													"src": "540:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "540:17:2"
											},
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 189,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "564:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "54554e",
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "574:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_fc492e3429efb91878e3631f0b632b9ed0c3047e3a8b6157d834e84a8348e6b8",
															"typeString": "literal_string \"TUN\""
														},
														"value": "TUN"
													},
													"src": "564:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "564:15:2"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "586:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "598:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "586:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "586:14:2"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "607:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_31415926000000000000000000_by_1",
															"typeString": "int_const 31415926000000000000000000"
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3331343135393236",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "622:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31415926_by_1",
																"typeString": "int_const 31415926"
															},
															"value": "31415926"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "633:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "639:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "633:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "622:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31415926000000000000000000_by_1",
															"typeString": "int_const 31415926000000000000000000"
														}
													},
													"src": "607:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "607:34:2"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 205,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "648:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 208,
														"indexExpression": {
															"expression": {
																"id": 206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "658:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "658:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "648:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 209,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "672:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "648:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "648:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "715:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "707:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 213,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "707:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "707:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 217,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "719:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "719:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 219,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "731:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "698:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "698:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "EmitStatement",
												"src": "693:51:2"
											}
										]
									},
									"id": 223,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:2:2"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:0:2"
									},
									"scope": 691,
									"src": "519:231:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										723
									],
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "872:27:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 230,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "886:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "886:7:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 229,
												"id": 232,
												"nodeType": "Return",
												"src": "879:14:2"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "756:50:2",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "819:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 226,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "839:8:2"
									},
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "827:2:2"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "863:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:9:2"
									},
									"scope": 691,
									"src": "810:89:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										705
									],
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "1017:29:2",
										"statements": [
											{
												"expression": {
													"id": 241,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 178,
													"src": "1031:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 240,
												"id": 242,
												"nodeType": "Return",
												"src": "1024:16:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "905:49:2",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "967:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 237,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "987:8:2"
									},
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:2:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1010:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1010:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:7:2"
									},
									"scope": 691,
									"src": "958:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										711
									],
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "1168:27:2",
										"statements": [
											{
												"expression": {
													"id": 251,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 180,
													"src": "1182:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "1175:14:2"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "1052:47:2",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1112:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 247,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1130:8:2"
									},
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1118:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1153:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 248,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1153:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:15:2"
									},
									"scope": 691,
									"src": "1103:92:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										717
									],
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "1311:25:2",
										"statements": [
											{
												"expression": {
													"id": 261,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 182,
													"src": "1325:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 260,
												"id": 262,
												"nodeType": "Return",
												"src": "1318:12:2"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "1201:43:2",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1257:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 257,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1273:8:2"
									},
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:2:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1296:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1296:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:15:2"
									},
									"scope": 691,
									"src": "1248:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										699
									],
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "1456:32:2",
										"statements": [
											{
												"expression": {
													"id": 271,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 176,
													"src": "1470:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 272,
												"nodeType": "Return",
												"src": "1463:19:2"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "1342:46:2",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1401:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1424:8:2"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1412:2:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "1447:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:9:2"
									},
									"scope": 691,
									"src": "1392:96:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										731
									],
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "1619:38:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 283,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1633:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 285,
													"indexExpression": {
														"id": 284,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "1643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1633:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 282,
												"id": 286,
												"nodeType": "Return",
												"src": "1626:25:2"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "1494:44:2",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1551:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 279,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1587:8:2"
									},
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1569:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1561:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1560:17:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1610:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:9:2"
									},
									"scope": 691,
									"src": "1542:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										741
									],
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "1937:73:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 300,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1954:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1954:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 302,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1968:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1979:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "1944:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1944:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1944:42:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2000:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 298,
												"id": 307,
												"nodeType": "Return",
												"src": "1993:11:2"
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "1663:184:2",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1860:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 295,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1913:8:2"
									},
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1877:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "1869:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1896:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "1888:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1868:35:2"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "1931:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1931:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:6:2"
									},
									"scope": 691,
									"src": "1851:159:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										751
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "2156:47:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 320,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2170:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 322,
														"indexExpression": {
															"id": 321,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "2182:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2170:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 324,
													"indexExpression": {
														"id": 323,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "2189:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2170:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 319,
												"id": 325,
												"nodeType": "Return",
												"src": "2163:34:2"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "2016:44:2",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2073:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 316,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2124:8:2"
									},
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2091:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2083:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2106:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2098:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2098:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:32:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2147:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:9:2"
									},
									"scope": 691,
									"src": "2064:139:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										761
									],
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "2416:70:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 339,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "2432:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2432:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 341,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "2446:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "2455:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 338,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "2423:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2423:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2423:39:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2476:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 337,
												"id": 346,
												"nodeType": "Return",
												"src": "2469:11:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "2209:120:2",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2342:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 334,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2392:8:2"
									},
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2358:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2350:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2375:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2367:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2367:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:33:2"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2410:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2410:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:6:2"
									},
									"scope": 691,
									"src": "2333:153:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										773
									],
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "3037:195:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 362,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "3054:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "3062:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "3073:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 361,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "3044:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3044:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "3044:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 368,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "3096:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 369,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "3104:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3104:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 378,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3156:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3164:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 371,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 174,
																			"src": "3118:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 373,
																		"indexExpression": {
																			"id": 372,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 351,
																			"src": "3130:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3118:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 376,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 374,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 17,
																			"src": "3138:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3138:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3118:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 866,
																"src": "3118:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3118:89:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 367,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "3087:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3087:121:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "3087:121:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3222:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 360,
												"id": 384,
												"nodeType": "Return",
												"src": "3215:11:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "2492:435:2",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2940:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 357,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3013:8:2"
									},
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2961:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "2953:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2953:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2977:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "2969:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "2988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2952:51:2"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "3031:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3031:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3030:6:2"
									},
									"scope": 691,
									"src": "2931:301:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "3700:114:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 397,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "3716:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3716:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 399,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "3730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 407,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "3778:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 400,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 174,
																			"src": "3739:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 403,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 401,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 17,
																				"src": "3751:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3751:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3739:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 405,
																	"indexExpression": {
																		"id": 404,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 389,
																		"src": "3765:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3739:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 821,
																"src": "3739:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3739:50:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 396,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "3707:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "3707:83:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3804:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 395,
												"id": 412,
												"nodeType": "Return",
												"src": "3797:11:2"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "3238:372:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "3623:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3649:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3641:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "3666:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3658:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3658:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3640:37:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "3694:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3694:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3693:6:2"
									},
									"scope": 691,
									"src": "3614:200:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "4377:160:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 425,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "4393:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4393:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 427,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4407:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 435,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "4455:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4472:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 428,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 174,
																			"src": "4416:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 431,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 429,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 17,
																				"src": "4428:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4428:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4416:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 433,
																	"indexExpression": {
																		"id": 432,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "4442:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4416:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 866,
																"src": "4416:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4416:96:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 424,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "4384:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4384:129:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "4384:129:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4527:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 423,
												"id": 441,
												"nodeType": "Return",
												"src": "4520:11:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "3820:462:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "4295:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4321:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "4313:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "4338:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "4330:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4330:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4312:42:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "4371:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4371:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4370:6:2"
									},
									"scope": 691,
									"src": "4286:251:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "4799:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 454,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "4812:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4812:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 456,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4826:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "4806:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4806:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "4806:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4847:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 452,
												"id": 460,
												"nodeType": "Return",
												"src": "4840:11:2"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "4543:190:2",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 449,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 448,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "4774:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4774:9:2"
										}
									],
									"name": "mint",
									"nameLocation": "4746:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4759:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4751:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4750:16:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4793:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4793:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4792:6:2"
									},
									"scope": 691,
									"src": "4737:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "5396:370:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 473,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "5411:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5429:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5421:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 474,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5421:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5411:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5433:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5403:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5403:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "5403:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 483,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "5488:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5509:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5501:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 484,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5501:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5501:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5488:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5513:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5480:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "5480:71:2"
											},
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 492,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5560:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 494,
														"indexExpression": {
															"id": 493,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5570:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5560:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 499,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "5602:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5610:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 495,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "5580:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 497,
																"indexExpression": {
																	"id": 496,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "5590:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5580:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 866,
															"src": "5580:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5580:71:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5560:91:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "5560:91:2"
											},
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 504,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5658:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 506,
														"indexExpression": {
															"id": 505,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "5668:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5658:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 511,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "5706:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 507,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "5681:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 509,
																"indexExpression": {
																	"id": 508,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "5691:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5681:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "5681:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5681:32:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5658:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "5658:55:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 516,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5734:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "5742:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "5753:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "5725:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5725:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "EmitStatement",
												"src": "5720:40:2"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4863:450:2",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5326:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5344:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5336:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5360:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5352:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5352:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5379:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5371:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5371:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:51:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5396:0:2"
									},
									"scope": 691,
									"src": "5317:449:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "6084:233:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 531,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "6099:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6110:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 532,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6110:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6110:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6099:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6122:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6091:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "6091:65:2"
											},
											{
												"expression": {
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 540,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "6165:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 543,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "6197:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 541,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "6180:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "6180:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6180:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6165:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "6165:39:2"
											},
											{
												"expression": {
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 547,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "6211:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 549,
														"indexExpression": {
															"id": 548,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "6221:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6211:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 554,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "6255:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 550,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "6232:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 552,
																"indexExpression": {
																	"id": 551,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "6242:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6232:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "6232:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6232:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6211:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "6211:51:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6291:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6283:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 559,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6283:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6283:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "6295:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "6304:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 558,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "6274:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6274:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "EmitStatement",
												"src": "6269:42:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "5772:251:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "6036:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6050:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "6042:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6067:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "6059:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6059:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6041:33:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6084:0:2"
									},
									"scope": 691,
									"src": "6027:290:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "6682:273:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 577,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "6697:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6716:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6708:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 578,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6708:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6708:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6697:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6720:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6689:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6689:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "6689:67:2"
											},
											{
												"expression": {
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 586,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "6765:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 587,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "6775:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6765:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 593,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6809:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6817:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 589,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "6786:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 591,
																"indexExpression": {
																	"id": 590,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6796:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6786:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 866,
															"src": "6786:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6786:68:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6765:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "6765:89:2"
											},
											{
												"expression": {
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 598,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "6861:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 601,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6893:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 599,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "6876:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 838,
															"src": "6876:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6876:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6861:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "6861:39:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "6921:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6938:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6930:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 607,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6930:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6930:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "6942:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "6912:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6912:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "EmitStatement",
												"src": "6907:42:2"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "6323:298:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6634:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6640:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6657:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6639:33:2"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6682:0:2"
									},
									"scope": 691,
									"src": "6625:330:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "7442:245:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 626,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "7457:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7474:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7466:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 627,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7466:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7466:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7457:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7478:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7449:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7449:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "7449:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 636,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "7532:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7551:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7543:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 637,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7543:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7543:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7532:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7555:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7524:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7524:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "7524:68:2"
											},
											{
												"expression": {
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 645,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "7601:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 648,
															"indexExpression": {
																"id": 646,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "7613:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7601:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 649,
														"indexExpression": {
															"id": 647,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "7620:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7601:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 650,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "7631:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7601:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "7601:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 654,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "7658:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 655,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "7665:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "7674:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 653,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "7649:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7649:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "EmitStatement",
												"src": "7644:37:2"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "6961:402:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "7376:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7393:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "7385:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7385:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7408:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "7400:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7400:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7425:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "7417:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7417:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7384:48:2"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7442:0:2"
									},
									"scope": 691,
									"src": "7367:320:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "7920:161:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "7933:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "7942:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 668,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "7927:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7927:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "7927:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 674,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "7965:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 675,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7974:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7974:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 684,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "8027:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8035:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 677,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 174,
																			"src": "7988:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 679,
																		"indexExpression": {
																			"id": 678,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 663,
																			"src": "8000:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7988:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 682,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 680,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 17,
																			"src": "8009:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8009:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7988:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 866,
																"src": "7988:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7988:86:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 673,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "7956:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7956:119:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "7956:119:2"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "7693:162:2",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "7868:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7886:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "7878:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7878:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7903:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "7895:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7895:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7877:33:2"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7920:0:2"
									},
									"scope": 691,
									"src": "7859:222:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 692,
							"src": "184:7900:2",
							"usedErrors": []
						}
					],
					"src": "33:8051:2"
				},
				"id": 2
			},
			"contracts/interface/Bep20Interface.sol": {
				"ast": {
					"absolutePath": "contracts/interface/Bep20Interface.sol",
					"exportedSymbols": {
						"Bep20Interface": [
							792
						]
					},
					"id": 793,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 693,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 792,
							"linearizedBaseContracts": [
								792
							],
							"name": "Bep20Interface",
							"nameLocation": "70:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "90:64:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "167:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:3"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "204:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:3"
									},
									"scope": 792,
									"src": "158:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "219:49:3",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "281:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:3"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "315:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 702,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "315:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:7:3"
									},
									"scope": 792,
									"src": "272:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "328:47:3",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "388:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:2:3"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "420:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 708,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "420:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:15:3"
									},
									"scope": 792,
									"src": "379:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "441:43:3",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "497:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:2:3"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "527:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 714,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "527:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:15:3"
									},
									"scope": 792,
									"src": "488:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "548:50:3",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "611:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:2:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "645:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:9:3"
									},
									"scope": 792,
									"src": "602:52:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "660:70:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "743:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "761:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "753:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:17:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "793:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:9:3"
									},
									"scope": 792,
									"src": "734:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "808:203:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1024:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1041:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "1033:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1060:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "1052:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:35:3"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "1086:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1086:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:6:3"
									},
									"scope": 792,
									"src": "1015:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "1098:258:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1369:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1387:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1379:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1403:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1395:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:33:3"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1435:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1434:9:3"
									},
									"scope": 792,
									"src": "1360:84:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1450:629:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2092:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2108:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "2100:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2125:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "2117:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2099:33:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "2151:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2151:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:6:3"
									},
									"scope": 792,
									"src": "2083:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "2163:288:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2464:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2485:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "2477:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2501:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "2493:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2493:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2520:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "2512:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:51:3"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "2546:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 770,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2546:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2545:6:3"
									},
									"scope": 792,
									"src": "2455:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "2558:153:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 782,
									"name": "Transfer",
									"nameLocation": "2721:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2746:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "2730:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2768:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "2752:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2780:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "2772:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:57:3"
									},
									"src": "2715:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "2793:145:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 791,
									"name": "Approval",
									"nameLocation": "2948:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2973:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2957:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2996:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2980:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2980:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3013:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "3005:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3005:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:63:3"
									},
									"src": "2942:78:3"
								}
							],
							"scope": 793,
							"src": "60:2963:3",
							"usedErrors": []
						}
					],
					"src": "33:2990:3"
				},
				"id": 3
			},
			"contracts/lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/lib/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							988
						]
					},
					"id": 989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 794,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 795,
								"nodeType": "StructuredDocumentation",
								"src": "60:575:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 988,
							"linearizedBaseContracts": [
								988
							],
							"name": "SafeMath",
							"nameLocation": "645:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "939:100:4",
										"statements": [
											{
												"assignments": [
													806
												],
												"declarations": [
													{
														"constant": false,
														"id": 806,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "954:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "946:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 805,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "946:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 810,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 807,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "958:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 808,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "962:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "958:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "946:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 812,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "978:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 813,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "983:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "978:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "986:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 811,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "970:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "970:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "970:46:4"
											},
											{
												"expression": {
													"id": 818,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 806,
													"src": "1032:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 804,
												"id": 819,
												"nodeType": "Return",
												"src": "1025:8:4"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "659:209:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "881:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "893:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "885:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "904:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "896:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:22:4"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "930:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:9:4"
									},
									"scope": 988,
									"src": "872:167:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "1361:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 832,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "1379:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 833,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "1382:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1385:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 831,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															838,
															866
														],
														"referencedDeclaration": 866,
														"src": "1375:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 830,
												"id": 836,
												"nodeType": "Return",
												"src": "1368:50:4"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1045:245:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1303:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1315:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1307:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1326:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1318:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1306:22:4"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1352:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:9:4"
									},
									"scope": 988,
									"src": "1294:130:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "1794:83:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 851,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "1809:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 852,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "1814:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1809:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 854,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "1817:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1801:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "1801:29:4"
											},
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1845:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 865,
														"src": "1837:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1837:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 862,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 859,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "1849:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 860,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "1853:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1849:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1837:17:4"
											},
											{
												"expression": {
													"id": 863,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 858,
													"src": "1870:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 849,
												"id": 864,
												"nodeType": "Return",
												"src": "1863:8:4"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "1430:265:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1708:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1720:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1712:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1731:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1723:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1723:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1748:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1734:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 844,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:50:4"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1785:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:9:4"
									},
									"scope": 988,
									"src": "1699:178:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "2175:364:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2395:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2400:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2395:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "2391:37:4",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "2403:25:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2419:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 875,
															"id": 880,
															"nodeType": "Return",
															"src": "2412:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2444:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "2436:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 883,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 888,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 885,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2448:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 886,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "2452:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2448:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2436:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 890,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "2468:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 891,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "2472:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2468:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 893,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "2477:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2480:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2460:56:4"
											},
											{
												"expression": {
													"id": 898,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 884,
													"src": "2532:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 875,
												"id": 899,
												"nodeType": "Return",
												"src": "2525:8:4"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1883:221:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2120:22:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:9:4"
									},
									"scope": 988,
									"src": "2108:431:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "3050:59:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "3068:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 913,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "3071:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3074:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 911,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															946
														],
														"referencedDeclaration": 946,
														"src": "3064:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3064:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 910,
												"id": 916,
												"nodeType": "Return",
												"src": "3057:46:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "2545:434:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2992:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3004:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2996:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3015:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3007:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3007:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:22:4"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3041:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3040:9:4"
									},
									"scope": 988,
									"src": "2983:126:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "3668:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 931,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "3746:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3750:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3746:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 934,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "3753:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 930,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3738:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3738:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "3738:28:4"
											},
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3781:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "3773:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3773:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 942,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 939,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "3785:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 940,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "3789:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3785:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3773:17:4"
											},
											{
												"expression": {
													"id": 943,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 938,
													"src": "3889:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 929,
												"id": 944,
												"nodeType": "Return",
												"src": "3882:8:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "3115:454:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3582:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3594:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "3586:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3586:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3605:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "3597:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3597:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3622:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "3608:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3608:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3585:50:4"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "3659:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3658:9:4"
									},
									"scope": 988,
									"src": "3573:323:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "4396:57:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 957,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "4414:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 958,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "4417:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4420:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 956,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															963,
															987
														],
														"referencedDeclaration": 987,
														"src": "4410:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4410:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 955,
												"id": 961,
												"nodeType": "Return",
												"src": "4403:44:4"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "3902:423:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4338:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4350:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4342:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4361:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4353:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4353:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4341:22:4"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "4387:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4387:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4386:9:4"
									},
									"scope": 988,
									"src": "4329:124:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "5001:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 976,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "5016:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5021:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5016:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 979,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "5024:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5008:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5008:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "5008:29:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 982,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "5051:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 983,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "5055:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 974,
												"id": 985,
												"nodeType": "Return",
												"src": "5044:12:4"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "4459:443:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4915:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4927:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "4919:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4938:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "4930:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4955:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "4941:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 969,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4941:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4918:50:4"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "4992:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:4"
									},
									"scope": 988,
									"src": "4906:156:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 989,
							"src": "637:4428:4",
							"usedErrors": []
						}
					],
					"src": "33:5032:4"
				},
				"id": 4
			}
		}
	}
}